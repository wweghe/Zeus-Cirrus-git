{
  "addColumnToSpreadsheet": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_spreadsheetMeta"
      },
      {
        "datatype": "text",
        "name": "input_columnInfo"
      },
      {
        "datatype": "numeric",
        "name": "input_baseIndex"
      },
      {
        "datatype": "numeric",
        "name": "input_offsetIndex"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "8fca1db1-1549-453c-9e29-dfa072dface6",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "add",
          "library": "CirrusLibMath",
          "params": {
            "from": {
              "datatype": "numeric",
              "name": "input_baseIndex",
              "scope": "local"
            },
            "number": {
              "datatype": "numeric",
              "name": "input_offsetIndex",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "index",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "insert",
        "id": "0ca75e1d-d46d-4518-b42e-33a4db7d9b3b",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "input_spreadsheetMeta",
            "scope": "local"
          },
          "index": {
            "datatype": "numeric",
            "name": "index",
            "scope": "local"
          },
          "value": {
            "datatype": "text",
            "name": "input_columnInfo",
            "scope": "local"
          }
        },
        "returnType": "numeric"
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "addLeafRowKey": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_object"
      },
      {
        "datatype": "text array",
        "name": "input_hierarchy"
      }
    ],
    "logic": [
      {
        "action": "addComment",
        "commentStep": "copy hierarchy array",
        "id": "8816efb8-a0ea-4783-be05-a534a96f02d7",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "a4c3e822-686e-44d0-81a3-abd179a9bb88",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewStringArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "newHierarchy",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "26ffe013-0ff2-4d16-93e2-476f19e89686",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "input_hierarchy",
            "scope": "local"
          },
          "callback": {
            "function": "push",
            "library": "CirrusLibArray",
            "params": {
              "array": {
                "datatype": "text array",
                "name": "newHierarchy",
                "scope": "local"
              },
              "value": {
                "datatype": "text",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              }
            },
            "returnType": "numeric"
          }
        }
      },
      {
        "action": "addComment",
        "commentStep": "add key attribute and hierarchy with added key",
        "id": "2099523e-d81d-40e6-b648-5e0a823329e7",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "f33294d3-a0d0-47e6-bb21-109aae53c300",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "join",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "selectedPrimaryKeyColumns",
              "scope": "global"
            },
            "separator": {
              "datatype": "text",
              "scope": "fixed",
              "value": ","
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "hashKey",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3a54557f-7646-4902-9eaa-1b88886296a9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "generateObjectHash",
          "library": "CirrusLibObject",
          "params": {
            "object": {
              "datatype": "text",
              "name": "input_object",
              "scope": "local"
            },
            "properties": {
              "datatype": "text",
              "name": "hashKey",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "key",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "1421277a-74af-4521-8559-4a32eaaf7991",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "key"
          },
          "object": {
            "datatype": "text",
            "name": "input_object",
            "scope": "local"
          },
          "value": {
            "datatype": "text",
            "name": "key",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "execfunc",
        "function": "push",
        "id": "69a4c8c7-51b8-4bc4-9f2f-f307216d8931",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "newHierarchy",
            "scope": "local"
          },
          "value": {
            "datatype": "text",
            "name": "key",
            "scope": "local"
          }
        },
        "returnType": "numeric"
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "39e69846-99b7-4f5a-917d-c31aa7ac7fa8",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "hierarchy"
          },
          "object": {
            "datatype": "text",
            "name": "input_object",
            "scope": "local"
          },
          "value": {
            "datatype": "text array",
            "name": "newHierarchy",
            "scope": "local"
          }
        },
        "returnType": "text"
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "adjustMethodRow": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_object"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "8a2d8a4c-9d28-49b7-b373-edfb0a881cf0",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "targetType"
            },
            "object": {
              "datatype": "text",
              "name": "input_object",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "targetType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "0b1013ce-9be0-44db-9cc4-aab1b1795955",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "boolean",
              "name": "targetType",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "shouldRemoveAttributes",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "34a4afaa-cab9-4bad-a0fc-3cf8d908cb78",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "shouldRemoveAttributes",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "9b371c74-ac88-415b-b4ef-16c076146fa5",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "34a4afaa-cab9-4bad-a0fc-3cf8d908cb78",
        "test": {
          "datatype": "boolean",
          "name": "shouldRemoveAttributes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4d211018-bd33-4a7f-98ab-65d7a10c4167",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToArray",
          "library": "CirrusLibArray",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "[\"RUNOFF\",\"STATIC\",\"\"]"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "checkArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "e6b28bb3-2516-453d-bb67-53950a56f72b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "contains",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "checkArray",
              "scope": "local"
            },
            "value": {
              "name": "targetType",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "shouldRemoveAttributes",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "d6b83ced-2ba5-4226-8aa5-86c1327c90eb",
        "includeElse": true,
        "isCommented": false,
        "main": "34a4afaa-cab9-4bad-a0fc-3cf8d908cb78",
        "test": {
          "datatype": "boolean",
          "name": "shouldRemoveAttributes",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "981bf284-4b7e-4ef9-97d9-e1b0083e83d7",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "shouldRemoveAttributes",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "remove",
        "id": "abdfff0a-f7be-4d5f-aec5-438b723525ee",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "allocationType"
          },
          "object": {
            "datatype": "text",
            "name": "input_object",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "execfunc",
        "function": "remove",
        "id": "ff6ef028-f044-4ee8-82d1-8f814e725774",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "allocationMethod"
          },
          "object": {
            "datatype": "text",
            "name": "input_object",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "b340cb8e-5d31-4852-9eca-d5959db75aaa",
        "isCommented": false,
        "main": "981bf284-4b7e-4ef9-97d9-e1b0083e83d7",
        "test": {
          "datatype": "boolean",
          "name": "shouldRemoveAttributes",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "contains_callback": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_object"
      },
      {
        "datatype": "text",
        "name": "input_property"
      },
      {
        "datatype": "text array",
        "name": "input_values"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "2bf20a5f-c828-41e1-b880-10c8635f6226",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "name": "input_property",
              "scope": "local"
            },
            "object": {
              "datatype": "text",
              "name": "input_object",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "property",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "678420c3-87b5-47a9-b997-14688ce919d8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "contains",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_values",
              "scope": "local"
            },
            "value": {
              "name": "property",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "contains",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "b797aa0c-7c3f-455d-a4af-caf1256aa56e",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "contains",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "copyObject": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_object"
      },
      {
        "datatype": "text array",
        "name": "input_properties"
      },
      {
        "datatype": "text",
        "name": "input_targetObject"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "24b59512-62f3-4167-9102-61d6053682d9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text",
              "name": "input_targetObject",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isTargetNull",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "cc662a9e-c1b7-4b33-8934-6c1421234f4e",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isTargetNull",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4d746367-9353-402e-9eba-7eebaabbbb34",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createEmptyObject",
          "library": "CirrusLibObject",
          "params": {},
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "targetObject",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "891b1624-299a-4608-890b-4155ded13dee",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "cc662a9e-c1b7-4b33-8934-6c1421234f4e",
        "test": {
          "datatype": "boolean",
          "name": "isTargetNull",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3e011297-33db-441f-89d2-172012157c37",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "text",
          "name": "input_targetObject",
          "scope": "local"
        },
        "variable": {
          "datatype": "text",
          "name": "targetObject",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "657f4001-f0ec-47ca-87d6-caadad485372",
        "includeElse": true,
        "isCommented": false,
        "main": "cc662a9e-c1b7-4b33-8934-6c1421234f4e",
        "test": {
          "datatype": "boolean",
          "name": "isTargetNull",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "61eea872-ebd3-458d-81a2-84aadc8d681d",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "input_properties",
            "scope": "local"
          },
          "callback": {
            "function": "copyObjectAttribute",
            "library": "$interactions$",
            "params": {
              "input_attribute": {
                "datatype": "object",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              },
              "input_inObject": {
                "datatype": "object",
                "name": "input_object",
                "scope": "local"
              },
              "input_outObject": {
                "datatype": "object",
                "name": "targetObject",
                "scope": "local"
              }
            }
          }
        }
      },
      {
        "action": "returnvar",
        "id": "14f1f0e0-f3e2-4d33-a2e5-3ff2d2c5252d",
        "isCommented": false,
        "variable": {
          "datatype": "object",
          "name": "targetObject",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "copyObjectAttribute": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_inObject"
      },
      {
        "datatype": "text",
        "name": "input_outObject"
      },
      {
        "datatype": "text",
        "name": "input_attribute"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "d1872f04-48f4-4f4e-93c9-e9e58391b831",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "has",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "name": "input_attribute",
              "scope": "local"
            },
            "object": {
              "datatype": "object",
              "name": "input_inObject",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "hasAttribute",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "b98f393f-971b-4bb9-bf85-3ebc7478f75d",
        "includeElse": false,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "hasAttribute",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "37b3c04d-0e08-4415-a3a0-5a501d8263d8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "name": "input_attribute",
              "scope": "local"
            },
            "object": {
              "datatype": "object",
              "name": "input_inObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "value",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "897abe1b-58cc-443a-819d-d7136ff96aca",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "name": "input_attribute",
            "scope": "local"
          },
          "object": {
            "datatype": "object",
            "name": "input_outObject",
            "scope": "local"
          },
          "value": {
            "datatype": "text",
            "name": "value",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "7dc1b26d-d629-4c66-b5dd-151a34ee3115",
        "includeElse": false,
        "isCommented": false,
        "main": "b98f393f-971b-4bb9-bf85-3ebc7478f75d",
        "test": {
          "datatype": "boolean",
          "name": "hasAttribute",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "createColumnDefinitionObject": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_columnInfo"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "4d6f1596-194b-4e4e-a778-0a4b99b2f94b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "name"
            },
            "object": {
              "datatype": "text",
              "name": "input_columnInfo",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "id",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "20cf23bb-9098-4296-b774-85b19596657f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "lowercase",
          "library": "CirrusLibString",
          "params": {
            "string": {
              "datatype": "text",
              "name": "id",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "id",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c43184b3-7fed-413a-8c5b-1b6714473539",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "label"
            },
            "object": {
              "datatype": "text",
              "name": "input_columnInfo",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "label",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "52fa8778-a813-4209-b795-6a3543c69c2d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "type"
            },
            "object": {
              "datatype": "text",
              "name": "input_columnInfo",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "type",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "1435ab32-7093-4456-b285-29c3ffdf24a9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createEmptyObject",
          "library": "CirrusLibObject",
          "params": {},
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "options",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "f06a7ada-1e72-48ef-9edd-fafe94352632",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "id"
          },
          "object": {
            "datatype": "object",
            "name": "options",
            "scope": "local"
          },
          "value": {
            "name": "id",
            "scope": "local"
          }
        },
        "returnType": "object"
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "663e81d2-343e-48a4-ae86-4ffb69d8423b",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "label"
          },
          "object": {
            "datatype": "object",
            "name": "options",
            "scope": "local"
          },
          "value": {
            "name": "label",
            "scope": "local"
          }
        },
        "returnType": "object"
      },
      {
        "action": "setvar",
        "id": "310b2cf0-06a5-4e85-a9d7-ffe75c2b7501",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "includes",
          "library": "CirrusLibString",
          "params": {
            "mainString": {
              "name": "type",
              "scope": "local"
            },
            "subString": {
              "datatype": "text",
              "scope": "fixed",
              "value": "CHAR"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isStringType",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "380fd5b2-0e11-4ecf-b3c2-56a278b75e6e",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isStringType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "342a54de-45cc-40f8-bfce-c8fb14117333",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToObject",
          "library": "CirrusLibObject",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "{                \"readonly\": true   }"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "columnOptions",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "5d202e81-ab97-4f88-9f74-2ee4115e5832",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "380fd5b2-0e11-4ecf-b3c2-56a278b75e6e",
        "test": {
          "datatype": "boolean",
          "name": "isStringType",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "38189940-617f-4062-99ca-98c53a566efb",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "columnType"
          },
          "object": {
            "datatype": "object",
            "name": "options",
            "scope": "local"
          },
          "value": {
            "scope": "fixed",
            "value": "number"
          }
        },
        "returnType": "object"
      },
      {
        "action": "setvar",
        "id": "470a202c-700e-4986-9e16-ba79cbfd204c",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToObject",
          "library": "CirrusLibObject",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "{  \"readonly\": true,                \"cellType\": \"number\"    }"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "columnOptions",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "d2a42b7c-6c1b-40b9-9148-7158ac0b7d4b",
        "includeElse": true,
        "isCommented": false,
        "main": "380fd5b2-0e11-4ecf-b3c2-56a278b75e6e",
        "test": {
          "datatype": "boolean",
          "name": "isStringType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "02365d7d-8e44-49fb-82e0-5f40706fd678",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createEmptyObject",
          "library": "CirrusLibObject",
          "params": {},
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "columnDefObject",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "9db63d17-5f8b-498c-9b63-b38f33c498d1",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "options"
          },
          "object": {
            "datatype": "object",
            "name": "columnDefObject",
            "scope": "local"
          },
          "value": {
            "datatype": "object",
            "name": "options",
            "scope": "local"
          }
        },
        "returnType": "object"
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "60f13192-159f-4957-8036-3f935ac90350",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "cellOptions"
          },
          "object": {
            "datatype": "object",
            "name": "columnDefObject",
            "scope": "local"
          },
          "value": {
            "datatype": "object",
            "name": "columnOptions",
            "scope": "local"
          }
        },
        "returnType": "object"
      },
      {
        "action": "returnvar",
        "id": "feddda94-c580-4eba-ad89-0f51b35eddcf",
        "isCommented": false,
        "variable": {
          "datatype": "object",
          "name": "columnDefObject",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "createMethodRowUpdate": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_rowObject"
      },
      {
        "datatype": "text array",
        "name": "input_outputArray"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "f4ca2497-4f44-4360-8c75-898ab44bc5b0",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "isLeaf"
            },
            "object": {
              "datatype": "text",
              "name": "input_rowObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "isLeaf",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "7ea3f09d-2a1e-415c-950a-42d1c14410b6",
        "isCommented": false,
        "test": {
          "datatype": "\u003cany\u003e",
          "name": "isLeaf",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "de659df3-7c33-4434-8ec7-9bfcd5d2019f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "hierarchy"
            },
            "object": {
              "datatype": "text",
              "name": "input_rowObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "hierarchy",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "--- Get parent key from hierarchy array ---",
        "id": "f97c68b7-ea86-4764-990e-b95f299aac58",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "dd200d40-2510-4a7b-bb56-92d489236dca",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "size",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "hierarchy",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "index",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "12b7ed22-72bd-45d9-920a-8ea314ba2a06",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "numeric",
          "function": "subtract",
          "library": "CirrusLibMath",
          "params": {
            "from": {
              "datatype": "numeric",
              "name": "index",
              "scope": "local"
            },
            "number": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 2
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "index",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "fd836f2a-cd0e-4e21-b907-62871b6d5382",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "ge",
          "library": "CirrusLibMath",
          "params": {
            "number1": {
              "datatype": "numeric",
              "name": "index",
              "scope": "local"
            },
            "number2": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isIndexValid",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "128f64a4-82fe-4f01-bc95-fea3ecf3ad14",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isIndexValid",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "d7a74c92-bcf2-42ff-a124-e7e90242ef93",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "hierarchy",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "name": "index",
              "scope": "local"
            }
          },
          "returnType": "\u003cIncoming\u003e"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e",
          "name": "key",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "894fb9d3-a756-4848-80ec-719cc90cae29",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_outputArray",
              "scope": "local"
            },
            "operator": {
              "datatype": "enum",
              "scope": "fixed",
              "value": "eq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "key"
            },
            "referenceValue": {
              "datatype": "text",
              "name": "key",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "filterArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "084e92cd-b8d4-4da1-a4b3-0edf359b33c9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isEmpty",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "filterArray",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "eb8e8e05-8f1b-43b4-b180-c268ebecb8a8",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "8a54625d-2d57-407a-9f77-5b4fe9248eb9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocationMethod"
            },
            "object": {
              "datatype": "text",
              "name": "input_rowObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "allocationMethod",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4e802690-b8e6-48ea-8783-e0f7e03ada0b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "name": "allocationMethod",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isMethodEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c1c14a79-1e8c-4272-8438-1c73923dd4aa",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocationType"
            },
            "object": {
              "datatype": "text",
              "name": "input_rowObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "allocationType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "71b36bc2-0ef4-476d-aade-52346242e49b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "boolean",
              "name": "allocationType",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "86e0a2ae-2447-41f3-a286-3c31650bf4f2",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "and",
          "library": "CirrusLibBoolean",
          "params": {
            "bool1": {
              "datatype": "boolean",
              "name": "isTypeEmpty",
              "scope": "local"
            },
            "bool2": {
              "datatype": "boolean",
              "name": "isMethodEmpty",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "areMethodAndTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "f9b279ce-705e-47c5-835c-82e8414400fc",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "areMethodAndTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "5261bb4e-8e27-41c2-ba4a-684432f3c0ff",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "f9b279ce-705e-47c5-835c-82e8414400fc",
        "test": {
          "datatype": "boolean",
          "name": "areMethodAndTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3c05fbb1-1b43-4bfd-a4a6-9538459c403b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createEmptyObject",
          "library": "CirrusLibObject",
          "params": {},
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "outputObject",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "bc6d3000-a1fb-4229-98c8-bf6006b85cf6",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "key"
          },
          "object": {
            "datatype": "object",
            "name": "outputObject",
            "scope": "local"
          },
          "value": {
            "datatype": "object",
            "name": "key",
            "scope": "local"
          }
        },
        "returnType": "object"
      },
      {
        "action": "ifelse",
        "id": "1def8ceb-d816-4c6e-afba-2c41942ee633",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "835f4791-8b72-4608-9036-986a553a970b",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "1def8ceb-d816-4c6e-afba-2c41942ee633",
        "test": {
          "datatype": "boolean",
          "name": "isTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "523e9c22-2667-4365-9645-1d77639ba0fd",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "allocationType"
          },
          "object": {
            "datatype": "object",
            "name": "outputObject",
            "scope": "local"
          },
          "value": {
            "name": "allocationType",
            "scope": "local"
          }
        },
        "returnType": "object"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "017eba0c-0c78-4814-86c3-b8faf3202412",
        "includeElse": true,
        "isCommented": false,
        "main": "1def8ceb-d816-4c6e-afba-2c41942ee633",
        "test": {
          "datatype": "boolean",
          "name": "isTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "d7ce571f-596a-4bf8-9ec2-deb5e5b31295",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isMethodEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "f436a94b-17c7-44f4-9c60-6e02c60d9ad6",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "d7ce571f-596a-4bf8-9ec2-deb5e5b31295",
        "test": {
          "datatype": "boolean",
          "name": "isMethodEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "5fab8324-4f47-4b2d-89a2-82c1ec1f0649",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "allocationMethod"
          },
          "object": {
            "datatype": "object",
            "name": "outputObject",
            "scope": "local"
          },
          "value": {
            "name": "allocationMethod",
            "scope": "local"
          }
        },
        "returnType": "object"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "5783331a-c949-494c-a8d9-600b8f4dcbbe",
        "includeElse": true,
        "isCommented": false,
        "main": "d7ce571f-596a-4bf8-9ec2-deb5e5b31295",
        "test": {
          "datatype": "boolean",
          "name": "isMethodEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "push",
        "id": "17fdd16f-bcac-483e-87ba-bc4e9ed04e2b",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "input_outputArray",
            "scope": "local"
          },
          "value": {
            "datatype": "text",
            "name": "outputObject",
            "scope": "local"
          }
        },
        "returnType": "numeric"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "292f5e02-f96a-47ba-ad43-2dceec9f72f7",
        "includeElse": true,
        "isCommented": false,
        "main": "f9b279ce-705e-47c5-835c-82e8414400fc",
        "test": {
          "datatype": "boolean",
          "name": "areMethodAndTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "42e61439-b4c5-45b6-87df-c9ef26371aee",
        "isCommented": false,
        "main": "eb8e8e05-8f1b-43b4-b180-c268ebecb8a8",
        "test": {
          "datatype": "boolean",
          "name": "isEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "a7b6df54-21f4-4c35-8bab-98d58a48c6a5",
        "isCommented": false,
        "main": "128f64a4-82fe-4f01-bc95-fea3ecf3ad14",
        "test": {
          "datatype": "boolean",
          "name": "isIndexValid",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "0ac97479-22df-40ff-868c-a23f646fa050",
        "isCommented": false,
        "main": "7ea3f09d-2a1e-415c-950a-42d1c14410b6",
        "test": {
          "datatype": "\u003cany\u003e",
          "name": "isLeaf",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "filterHierarchyData": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_hierarchyData"
      },
      {
        "datatype": "text",
        "name": "input_object"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "8264a8fb-6d48-446f-b503-0f3c1bddbad6",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewObjectArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "outputRows",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "b91d97a0-9f0f-475c-9946-bbb2245e0881",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "segmentFilter"
            },
            "object": {
              "datatype": "text",
              "name": "input_object",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "segmentFilter",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7f165399-2903-42d7-8528-84b9e451c15b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToObject",
          "library": "CirrusLibObject",
          "params": {
            "string": {
              "name": "segmentFilter",
              "scope": "local"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "segmentFilterObject",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "6c8866e7-8eb4-47d2-83d9-9229916740c7",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "input_hierarchyData",
            "scope": "local"
          },
          "callback": {
            "function": "filterHierarchyData_add",
            "library": "$interactions$",
            "params": {
              "input_object": {
                "datatype": "text",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              },
              "input_outputArray": {
                "datatype": "object array",
                "name": "outputRows",
                "scope": "local"
              },
              "input_segmentFilterObject": {
                "datatype": "object",
                "name": "segmentFilterObject",
                "scope": "local"
              }
            }
          }
        }
      },
      {
        "action": "returnvar",
        "id": "0c9e5ecf-6671-453b-81bd-8e595e9879e2",
        "isCommented": false,
        "variable": {
          "datatype": "object array",
          "name": "outputRows",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "filterHierarchyData_add": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_object"
      },
      {
        "datatype": "text",
        "name": "input_segmentFilterObject"
      },
      {
        "datatype": "text array",
        "name": "input_outputArray"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "214842ec-c79c-41d4-971c-8a9921c1d06c",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": true
        },
        "variable": {
          "datatype": "boolean",
          "name": "testCondition",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "2462867b-0fe5-4a34-987a-d12e44ffcd78",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "reduce",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "\u003cOutgoing\u003e array array array array array",
              "name": "selectedSegmentationColumns",
              "scope": "global"
            },
            "callback": {
              "function": "filterHierarchyData_reducer",
              "library": "$interactions$",
              "params": {
                "input_accumulator": {
                  "datatype": "numeric",
                  "label": "Accumulator",
                  "name": "loop_accumulator",
                  "scope": "local"
                },
                "input_attribute": {
                  "datatype": "\u003cOutgoing\u003e array array array array",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                },
                "input_object": {
                  "datatype": "text",
                  "name": "input_object",
                  "scope": "local"
                },
                "input_segmentFilterObject": {
                  "datatype": "text",
                  "name": "input_segmentFilterObject",
                  "scope": "local"
                }
              },
              "returnType": "numeric"
            },
            "initialValue": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": true
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "testCondition",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "f02c5ce1-c270-4251-8ede-d27c65ad20b7",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "testCondition",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "push",
        "id": "8b454f36-5017-410f-bf85-978fdffc111f",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "input_outputArray",
            "scope": "local"
          },
          "value": {
            "datatype": "text",
            "name": "input_object",
            "scope": "local"
          }
        },
        "returnType": "numeric"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "ed4a71ac-4dc5-4859-945e-7c12d1b071d9",
        "isCommented": false,
        "main": "f02c5ce1-c270-4251-8ede-d27c65ad20b7",
        "test": {
          "datatype": "boolean",
          "name": "testCondition",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "filterHierarchyData_reducer": {
    "inputs": [
      {
        "datatype": "boolean",
        "name": "input_accumulator"
      },
      {
        "datatype": "text",
        "name": "input_object"
      },
      {
        "datatype": "text",
        "name": "input_attribute"
      },
      {
        "datatype": "text",
        "name": "input_segmentFilterObject"
      }
    ],
    "logic": [
      {
        "action": "ifelse",
        "id": "edc2c783-798a-4189-b645-d9f254e4968e",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "input_accumulator",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "96fd972e-ddbd-4786-9dd7-bfddd8859ab0",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "has",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "name": "input_attribute",
              "scope": "local"
            },
            "object": {
              "datatype": "text",
              "name": "input_segmentFilterObject",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "hasAttribute",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "51df5307-bc0f-4542-b3c6-a3f06118025c",
        "includeElse": false,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "hasAttribute",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "01f34e7b-2f1e-42ba-a11c-07b0286fd151",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "name": "input_attribute",
              "scope": "local"
            },
            "object": {
              "datatype": "text",
              "name": "input_object",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "value",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7b47356c-2218-4ccb-800d-793218f1327e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "name": "input_attribute",
              "scope": "local"
            },
            "object": {
              "datatype": "text",
              "name": "input_segmentFilterObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "input_value",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9549d922-dbd7-4645-a3c6-5d68e42a87cf",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "boolean",
              "name": "value",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "name": "input_value",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "input_accumulator",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "ad5282e1-7122-4d9d-b2e9-9d7bca3b6378",
        "includeElse": false,
        "isCommented": false,
        "main": "51df5307-bc0f-4542-b3c6-a3f06118025c",
        "test": {
          "datatype": "boolean",
          "name": "hasAttribute",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "ba86d54c-5a55-471b-99fc-ef601c0a9255",
        "isCommented": false,
        "main": "edc2c783-798a-4189-b645-d9f254e4968e",
        "test": {
          "datatype": "boolean",
          "name": "input_accumulator",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "057a1dfd-79e3-4fff-a404-958787be9476",
        "isCommented": false,
        "variable": {
          "datatype": "numeric",
          "name": "input_accumulator",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "getEditLinkForObjectInstance": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_objectType"
      },
      {
        "datatype": "text",
        "name": "input_key"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "6efa9051-3531-4152-a8ef-66c291e1b592",
        "type": "calculated",
        "value": {
          "function": "getEditLocation",
          "library": "CirrusLibNav",
          "params": {
            "key": {
              "datatype": "text",
              "name": "input_key",
              "scope": "local"
            },
            "objectType": {
              "datatype": "text",
              "name": "input_objectType",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "navLink",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "29684e7e-c5c1-4dc4-a5ee-b9cd06c965d8",
        "variable": {
          "datatype": "text",
          "name": "navLink",
          "scope": "local"
        }
      }
    ],
    "sasProvided": true
  },
  "getHierarchyData": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "788356ba-5229-4b46-86fa-5c7beb00200a",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getUnionWithoutDuplicates",
          "library": "CirrusLibArray",
          "params": {
            "array1": {
              "datatype": "text array",
              "name": "selectedPrimaryKeyColumns",
              "scope": "global"
            },
            "array2": {
              "datatype": "text array",
              "name": "selectedSegmentationColumns",
              "scope": "global"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "columnArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "b45f82f5-a159-4bd6-95fe-9193dc80a2d5",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "join",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "columnArray",
              "scope": "local"
            },
            "separator": {
              "datatype": "text",
              "scope": "fixed",
              "value": ","
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "columns",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a3d9d06b-aa25-45d7-a8eb-16bb2bdc8152",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "key"
            },
            "object": {
              "datatype": "text",
              "name": "selectedPlanningData",
              "scope": "global"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "analysisDataKey",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "833ceaeb-4d34-4de4-ba71-fb91722f598c",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "rowCount"
            },
            "object": {
              "datatype": "text",
              "name": "selectedPlanningData",
              "scope": "global"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "rowCount",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "84a604ac-5e95-4aac-a7d9-3c8465d73b41",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getDistinctValuesFromAnalysisData",
          "library": "CirrusLibRiskData",
          "params": {
            "aDataKey": {
              "name": "analysisDataKey",
              "scope": "local"
            },
            "columns": {
              "datatype": "text",
              "name": "columns",
              "scope": "local"
            },
            "format": {
              "datatype": "enum",
              "scope": "fixed",
              "value": "JSON"
            },
            "limit": {
              "name": "rowCount",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "values",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "07d7f6d1-fd56-46db-b63a-f665542d8eda",
        "isCommented": false,
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "values",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "getLocalisedObjectType": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "70957fa2-f5dd-419e-a6f8-86375baabef5",
        "type": "calculated",
        "value": {
          "function": "getCurrentObjectType",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "objectType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "8ce52a34-af0f-4a14-bd03-4bc3b148e037",
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": ".schema.name.singular.title"
        },
        "variable": {
          "datatype": "text",
          "name": "i18nSuffix",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "6325362d-6429-4bdd-9514-0b8b92b013b0",
        "type": "calculated",
        "value": {
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "objectType",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "name": "i18nSuffix",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "objectTypePropString",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "e1d718fa-f8b9-4fe0-9da3-75a245f6d350",
        "type": "calculated",
        "value": {
          "function": "getMessageProperty",
          "library": "CirrusLibLocalization",
          "params": {
            "messageKey": {
              "datatype": "text",
              "name": "objectTypePropString",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "localisedObjectType",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "2a1b51de-10ff-4d27-b8c1-9dfdaafd69c9",
        "variable": {
          "datatype": "text",
          "name": "localisedObjectType",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "getSchemeTypes": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "8addcad1-17a6-4847-b5c2-869fe65d9a20",
        "type": "calculated",
        "value": {
          "function": "createNewStringArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "schemeTypes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a3bb055d-9334-4e33-a105-1fffceea815e",
        "type": "calculated",
        "value": {
          "function": "getNamedListOptionsAsValueLabelPair",
          "library": "CirrusLibCirrusObjectNamedList",
          "params": {
            "listName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocation_scheme_types"
            }
          },
          "returnType": "text array array"
        },
        "variable": {
          "datatype": "text array array",
          "name": "schemeTypes",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "localizeValueLabelArray",
        "id": "9205c1c7-dfb8-4e5e-8a15-92d18eeb3b7d",
        "library": "CirrusLibLocalization",
        "params": {
          "array": {
            "datatype": "text array array",
            "name": "schemeTypes",
            "scope": "local"
          },
          "i18nPrefix": {
            "datatype": "text",
            "scope": "fixed",
            "value": "AllocationScheme.schema.field.defaultAllocationType.options."
          },
          "i18nSuffix": {
            "datatype": "text",
            "scope": "fixed",
            "value": ".label"
          },
          "useLabelAsI18nProp": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          }
        },
        "returnType": "text array array"
      },
      {
        "action": "setvar",
        "id": "dc56727e-64f6-4716-86d1-50e769bd3078",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getAppConfigProperty",
          "library": "CirrusLibConfigProperties",
          "params": {
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "AllocationSchemes.types.enabledList"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "enabledSchemeTypes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "6f6184d8-8f59-4b67-93ce-f54e7941ec4b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "split",
          "library": "CirrusLibString",
          "params": {
            "separator": {
              "datatype": "text",
              "scope": "fixed",
              "value": ","
            },
            "string": {
              "datatype": "text array",
              "name": "enabledSchemeTypes",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "enabledSchemeTypes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c77c639b-8cb0-48cd-bdef-5d4e6f50cf0b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filter",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "\u003cIncoming\u003e array array array",
              "name": "schemeTypes",
              "scope": "local"
            },
            "callback": {
              "function": "contains_callback",
              "library": "$interactions$",
              "params": {
                "input_object": {
                  "datatype": "\u003cIncoming\u003e array array",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                },
                "input_property": {
                  "datatype": "text",
                  "scope": "fixed",
                  "value": "value"
                },
                "input_values": {
                  "datatype": "text array",
                  "name": "enabledSchemeTypes",
                  "scope": "local"
                }
              },
              "returnType": "boolean"
            }
          },
          "returnType": "\u003cIncoming\u003e array array array"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array array array",
          "name": "schemeTypes",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "0779a796-1289-4e34-aab7-f53b99cb65b0",
        "isCommented": false,
        "variable": {
          "datatype": "\u003cIncoming\u003e array array array",
          "name": "schemeTypes",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "getTargetVarChoices": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "0f414c8b-4aeb-4572-906c-3e892b4ebd86",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewObjectArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "targetVarChoices",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "dc75ec1a-b443-4c81-8a85-edb61de7c8d6",
        "includeElse": false,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "7db1bdc0-4113-4ba4-b3ff-0fe5e9f595b3",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "loadLinkInstances",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "linkTypeId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "businessEvolutionPlan_planningData"
            },
            "linkTypeSSC": {
              "datatype": "text",
              "scope": "fixed",
              "value": "RCC"
            },
            "linkedToKey": {
              "datatype": "text",
              "name": "selectedBEPKey",
              "scope": "global"
            },
            "linkedToSchemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "BusinessEvolutionPlan"
            },
            "schemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "AnalysisData"
            },
            "side": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 2
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedPlanningData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "de8a3ec8-f066-4097-9137-336b9d74286e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedPlanningData",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "planningData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a45a2088-b175-43d2-b7bc-36764e70f098",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "key"
            },
            "object": {
              "datatype": "text",
              "name": "planningData",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "planningDataKey",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "5f5ac3cd-db2f-45e4-9c09-232d2d45d98e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getVarsFromAnalysisData",
          "library": "CirrusLibRiskData",
          "params": {
            "aDataKey": {
              "datatype": "object array",
              "name": "planningDataKey",
              "scope": "local"
            },
            "attributeFilter": {
              "datatype": "text",
              "scope": "fixed",
              "value": "projectionFlag"
            },
            "returnValueLabelPairs": {
              "datatype": "boolean",
              "scope": "fixed",
              "value": true
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "targetVarChoices",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "594f0962-6635-4767-861e-c562186be031",
        "includeElse": false,
        "isCommented": false,
        "main": "dc75ec1a-b443-4c81-8a85-edb61de7c8d6",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "returnvar",
        "id": "d780423a-bdb0-475d-9038-251139bc7f8c",
        "isCommented": false,
        "variable": {
          "datatype": "object array",
          "name": "targetVarChoices",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "isLinkedToProductionCycle": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "c4eb325b-14fa-4266-b81a-387aee5d99bf",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": false
        },
        "variable": {
          "datatype": "boolean",
          "name": "isLinkedToProductionCycle",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "2b25d561-116a-4416-87cd-8ac26e7c3acb",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getLinkedObjectKeysFromField",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "fieldName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "Cycle"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedCycleKeys",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "2fb5f5a3-09a6-43fb-a6d1-8ab618f7b111",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "hasAnyItems",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedCycleKeys",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isLinkedCycleKeysNotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "578f746b-dbfd-4a02-bc8c-61bdd272356c",
        "includeElse": false,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isLinkedCycleKeysNotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "bc700d27-cd86-46c2-9883-629204ab2f12",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "analysisData_cycle"
        },
        "variable": {
          "datatype": "text",
          "name": "linkTypeId",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "fa9d5e4c-8bb1-4b70-954b-adf5b62ce961",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "RCC"
        },
        "variable": {
          "datatype": "text",
          "name": "linkTypeSSC",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "108c341f-adcb-494c-80b0-957b4c437da4",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "AllocationScheme"
        },
        "variable": {
          "datatype": "text",
          "name": "linkedToSchemaName",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3fa169d9-9659-4722-a618-bffe77bf503b",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "Cycle"
        },
        "variable": {
          "datatype": "text",
          "name": "schemaName",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "f655e77d-2d45-4f1d-84f6-0356eff4745a",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getCurrentObjectKey",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "currentObjectKey",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "48664abe-77a2-49ac-9ee8-d9ec599e07ff",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "loadLinkInstances",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "added": {
              "datatype": "text array",
              "name": "linkedCycleKeys",
              "scope": "local"
            },
            "linkTypeId": {
              "datatype": "text",
              "name": "linkTypeId",
              "scope": "local"
            },
            "linkTypeSSC": {
              "datatype": "text",
              "name": "linkTypeSSC",
              "scope": "local"
            },
            "linkedToKey": {
              "datatype": "text",
              "name": "currentObjectKey",
              "scope": "local"
            },
            "linkedToSchemaName": {
              "datatype": "text",
              "name": "linkedToSchemaName",
              "scope": "local"
            },
            "schemaName": {
              "datatype": "text",
              "name": "schemaName",
              "scope": "local"
            },
            "side": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 1
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedCycleInstances",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "1cd3d5c3-75f6-4b6a-8c53-e86628dac242",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedCycleInstances",
              "scope": "local"
            },
            "callback": {
              "function": "get",
              "library": "CirrusLibObject",
              "params": {
                "name": {
                  "datatype": "text",
                  "scope": "fixed",
                  "value": "runTypeCd"
                },
                "object": {
                  "datatype": "text",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              },
              "returnType": "\u003cany\u003e"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "linkedCycleRunTypeCd",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "38d639d2-5917-4d89-aa29-a39150de3f00",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "contains",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "linkedCycleRunTypeCd",
              "scope": "local"
            },
            "value": {
              "scope": "fixed",
              "value": "PROD"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isLinkedToProductionCycle",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "06a4d52d-60dc-4a5e-b75f-57b96dcd20cd",
        "includeElse": false,
        "isCommented": false,
        "main": "578f746b-dbfd-4a02-bc8c-61bdd272356c",
        "test": {
          "datatype": "boolean",
          "name": "isLinkedCycleKeysNotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "4b85e63a-8ae9-492e-a437-7104f6b9d7f3",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "isLinkedToProductionCycle",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "isPageDirty": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "294fdf11-c491-455f-aebf-b817151f9d06",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "syncNestedEBPWithParent",
          "library": "CirrusLibPageData",
          "params": {
            "parentPageId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "DefaultModelParametersEBP"
            },
            "updateState": {
              "datatype": "boolean",
              "scope": "fixed",
              "value": false
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "currentParameters",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "1b574d30-7ea9-47eb-8b2c-742ae04ad1c3",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "equals",
          "library": "CirrusLibObject",
          "params": {
            "object1": {
              "datatype": "object",
              "name": "currentParameters",
              "scope": "local"
            },
            "object2": {
              "datatype": "object",
              "name": "baselineParameters",
              "scope": "global"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "areParametersNotChanged",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "b6f37e2c-32f3-403a-ac44-33067aa130d9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "areParametersNotChanged",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "areParametersChanged",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "d4c1dfc4-632b-46ae-a135-67a166a25ad6",
        "type": "calculated",
        "value": {
          "function": "getDiffJSONPatch",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "Patch array"
        },
        "variable": {
          "datatype": "Patch array",
          "name": "patch",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "d3c1f6c8-099e-4027-85c8-7fae6fa783a1",
        "type": "calculated",
        "value": {
          "function": "isObjectPageDirty",
          "library": "CirrusLibCirrusObject",
          "params": {
            "patch": {
              "datatype": "Patch array",
              "name": "patch",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isPageDirty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "5341908f-3d55-4258-9196-f28a54fcaf98",
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "or",
          "library": "CirrusLibBoolean",
          "params": {
            "bool1": {
              "datatype": "boolean",
              "name": "isPageDirty",
              "scope": "local"
            },
            "bool2": {
              "datatype": "boolean",
              "name": "areParametersChanged",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isPageDirty",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "fdac2415-48e6-4f19-9a24-7cbd5e819660",
        "variable": {
          "datatype": "boolean",
          "name": "isPageDirty",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "isPageEditable": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "f865fe04-27cc-44dc-bb7e-664f3346ea7f",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": true
        },
        "variable": {
          "datatype": "boolean",
          "name": "isEditable",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "5a7b077b-530c-4eec-a658-2cc351870c48",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "isEditable",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "isRowStateEqual": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_rowState1"
      },
      {
        "datatype": "text array",
        "name": "input_rowState2"
      }
    ],
    "logic": [
      {
        "action": "addComment",
        "commentStep": "--- Compare number of rows ---",
        "id": "0a943a30-fefe-4e90-aed8-56cd823b1810",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "1e44fb7f-5c4e-4a83-bb65-0c49a08fd173",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "size",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_rowState1",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "count1",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9c805677-9375-4a45-8aae-ec1579e38acc",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "size",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_rowState2",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "count2",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "cdeefe81-2918-4159-bd12-9ff495762c93",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "eq",
          "library": "CirrusLibMath",
          "params": {
            "number1": {
              "datatype": "numeric",
              "name": "count1",
              "scope": "local"
            },
            "number2": {
              "datatype": "numeric",
              "name": "count2",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isEqual",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "b9dd749d-77e2-4f1b-ada5-01bf7257d170",
        "includeElse": false,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isEqual",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "--- Define attribute list to genrate hashes ---",
        "id": "a577e16f-2d7b-41a5-88cd-6bce465a9b41",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "fcf0daac-6e07-4cc2-b996-ba31ac27c2aa",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getUnionWithoutDuplicates",
          "library": "CirrusLibArray",
          "params": {
            "array1": {
              "datatype": "text array",
              "name": "selectedPrimaryKeyColumns",
              "scope": "global"
            },
            "array2": {
              "datatype": "text array",
              "name": "selectedSegmentationColumns",
              "scope": "global"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "dataDefinitionColumns",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "20e90a90-995b-4992-b970-549c83f6b02e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "join",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "dataDefinitionColumns",
              "scope": "local"
            },
            "separator": {
              "datatype": "text",
              "scope": "fixed",
              "value": ","
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "dataDefColumnsStr",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "5b56a651-0fd9-4740-9014-2043502f837e",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "key,segment,hierarchy,hasChildren,targetVar,targetType,segmentFilter,allocationType,allocationMethod,weightOverride,"
        },
        "variable": {
          "datatype": "text",
          "name": "spreadsheetColumns",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "61eb7e36-647e-4d40-b0ce-d1c2d1308d48",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "spreadsheetColumns",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "name": "dataDefColumnsStr",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "spreadsheetColumns",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "--- Calculate hashes and compare ---",
        "id": "a10e13d8-687b-445e-bbdf-48d450c438aa",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "fc8dac33-237d-4c64-af8e-1c3b9c88b727",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_rowState1",
              "scope": "local"
            },
            "callback": {
              "function": "generateObjectHash",
              "library": "CirrusLibObject",
              "params": {
                "object": {
                  "datatype": "text",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                },
                "properties": {
                  "datatype": "text",
                  "name": "spreadsheetColumns",
                  "scope": "local"
                }
              },
              "returnType": "text"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "hash1",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "1855c668-187d-46b9-b310-aa2e7c24b11f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_rowState2",
              "scope": "local"
            },
            "callback": {
              "function": "generateObjectHash",
              "library": "CirrusLibObject",
              "params": {
                "object": {
                  "datatype": "text",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                },
                "properties": {
                  "datatype": "text",
                  "name": "spreadsheetColumns",
                  "scope": "local"
                }
              },
              "returnType": "text"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "hash2",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7212ccc9-975d-4d0e-a817-765cd9489588",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getSymmetricalDifference",
          "library": "CirrusLibArray",
          "params": {
            "array1": {
              "datatype": "text array",
              "name": "hash1",
              "scope": "local"
            },
            "array2": {
              "datatype": "text array",
              "name": "hash2",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "difference",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "8df0b651-a3cd-45b9-97c2-3003ba1265b8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "isEmpty",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "difference",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isEqual",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "af86557e-ee83-4244-b10e-d22443890c9d",
        "includeElse": false,
        "isCommented": false,
        "main": "b9dd749d-77e2-4f1b-ada5-01bf7257d170",
        "test": {
          "datatype": "boolean",
          "name": "isEqual",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "db7221d2-4e03-467a-a042-37c908891d28",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "isEqual",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "loadMethodData": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "80250591-2f72-49a2-97a2-7c352ecee20e",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": false
        },
        "variable": {
          "datatype": "boolean",
          "name": "bepChangeDetected",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "b6a240ba-97d1-43e4-90cd-996a8e0557b4",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "data"
            },
            "object": {
              "datatype": "text",
              "name": "allocationData",
              "objectType": "AllocationScheme",
              "scope": "field",
              "set-field": "allocationData",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "data",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "51b76056-ca3f-4274-8367-a7b41b0ce941",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "name": "data",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "61c0d03b-4144-440f-aa68-38fa3d73088e",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "onBEPChange",
        "id": "fff5c874-d034-4dff-99a7-3d0178a127a6",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "ifelse",
        "id": "0e497e97-da3e-4c1a-9616-dcc3d8c393a3",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "61c0d03b-4144-440f-aa68-38fa3d73088e",
        "test": {
          "datatype": "boolean",
          "name": "isDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "--- Create row data from surrent BEP ---",
        "id": "9496b845-bf37-412b-a0f8-ac89fe6d782e",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "9142c442-e6f9-437c-9450-23a3d83191ef",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "key,hierarchy,segment,hasChildren,members,targetVar,targetType,segmentFilter,allocationType,allocationMethod"
        },
        "variable": {
          "datatype": "text",
          "name": "attributes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9564ad2b-a058-41a2-9e40-e9dc1ce0128e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "split",
          "library": "CirrusLibString",
          "params": {
            "separator": {
              "datatype": "text",
              "scope": "fixed",
              "value": ","
            },
            "string": {
              "datatype": "text",
              "name": "attributes",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "attributesArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4267652b-5c24-4669-bd7e-23df6cf8412d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "object array",
              "name": "selectedBEPDataArray",
              "scope": "global"
            },
            "callback": {
              "function": "copyObject",
              "library": "$interactions$",
              "params": {
                "input_object": {
                  "datatype": "object",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                },
                "input_properties": {
                  "datatype": "text array",
                  "name": "attributesArray",
                  "scope": "local"
                }
              },
              "returnType": "object"
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "bepRowData",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "--- Update row data with stored data ---",
        "id": "6a9fa67d-324c-4d22-af40-88c13dccbadd",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "c576e81f-1222-45b3-bac0-44d5e51754ef",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewStringArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "updateArray",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "62477963-2901-42c3-ba21-b24d15029bb0",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "name": "data",
            "scope": "local"
          },
          "callback": {
            "function": "createMethodRowUpdate",
            "library": "$interactions$",
            "params": {
              "input_outputArray": {
                "datatype": "text array",
                "name": "updateArray",
                "scope": "local"
              },
              "input_rowObject": {
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              }
            }
          }
        }
      },
      {
        "action": "setvar",
        "id": "fa931812-afab-4ec9-8a7d-51623877b96d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "updateObjArray",
          "library": "CirrusLibArray",
          "params": {
            "arrayToBeUpdated": {
              "datatype": "object array",
              "name": "bepRowData",
              "scope": "local"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "key"
            },
            "reflectedArray": {
              "datatype": "object array",
              "name": "updateArray",
              "scope": "local"
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "rowData",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "d1be2d53-d1fa-437f-994a-02c19d825a46",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "object array",
            "name": "rowData",
            "scope": "local"
          },
          "callback": {
            "function": "adjustMethodRow",
            "library": "$interactions$",
            "params": {
              "input_object": {
                "datatype": "object",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              }
            }
          }
        }
      },
      {
        "action": "addComment",
        "commentStep": "--- Apply filter for method rows ---",
        "id": "82444e95-ec45-4bb4-9cb5-f412e70524cb",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "4f2b7873-4eb1-40c0-a63e-5517cd5fff32",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "object array",
              "name": "rowData",
              "scope": "local"
            },
            "operator": {
              "datatype": "enum",
              "scope": "fixed",
              "value": "neq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "isLeaf"
            },
            "referenceValue": {
              "scope": "fixed",
              "value": true
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "methodRows",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "setMethodSpreadsheetRowData",
        "id": "fb2921e5-d359-4581-b95c-ae443ee1b1e1",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_rowsArray": {
            "datatype": "\u003cIncoming\u003e array",
            "name": "methodRows",
            "scope": "local"
          }
        }
      },
      {
        "action": "addComment",
        "commentStep": "--- Update weight overrides ---",
        "id": "ed08090c-5c4a-48c0-8fe9-b58bc93c65ef",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "718c8baa-af31-4acd-869c-92ed362abc01",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getHierarchyData",
          "library": "$interactions$",
          "params": {},
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "hierarchyData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "560f928d-ef73-4efb-875d-42b3c61635c2",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "loadWeightData",
          "library": "$interactions$",
          "params": {
            "input_hierarchyData": {
              "datatype": "\u003cOutgoing\u003e",
              "name": "hierarchyData",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "rowData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7ba2270a-3483-4e7d-8ef4-19602538c762",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filter",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "data",
              "scope": "local"
            },
            "callback": {
              "function": "has",
              "library": "CirrusLibObject",
              "params": {
                "name": {
                  "datatype": "text",
                  "scope": "fixed",
                  "value": "weightOverride"
                },
                "object": {
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              },
              "returnType": "boolean"
            }
          },
          "returnType": "\u003cIncoming\u003e array"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array",
          "name": "overrideArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "959082a2-9496-42bc-9e2d-c22bf182d2c5",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToArray",
          "library": "CirrusLibArray",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "[\"key\",\"weightOverride\"]"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "attributesArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "ac931b5c-c415-4927-92c3-59dd5c4359d2",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "\u003cOutgoing\u003e array",
              "name": "overrideArray",
              "scope": "local"
            },
            "callback": {
              "function": "copyObject",
              "library": "$interactions$",
              "params": {
                "input_object": {
                  "datatype": "\u003cOutgoing\u003e array",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                },
                "input_properties": {
                  "datatype": "text array",
                  "name": "attributesArray",
                  "scope": "local"
                }
              },
              "returnType": "object"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "updateArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "89f84567-dabc-4b33-a55f-b0edb49247be",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "updateObjArray",
          "library": "CirrusLibArray",
          "params": {
            "arrayToBeUpdated": {
              "datatype": "\u003cIncoming\u003e array",
              "name": "rowData",
              "scope": "local"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "key"
            },
            "reflectedArray": {
              "datatype": "\u003cIncoming\u003e array array array",
              "name": "updateArray",
              "scope": "local"
            }
          },
          "returnType": "\u003cIncoming\u003e array array array array array array array"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array array array array array array array",
          "name": "rowData",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "--- Apply weight row data ---",
        "id": "41bb9fa8-a5d3-4372-b5c4-6d12a0d0b0a8",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "7b90b8e8-29c2-49f0-8702-b2e293653269",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isRowStateEqual",
          "library": "$interactions$",
          "params": {
            "input_rowState1": {
              "name": "data",
              "scope": "local"
            },
            "input_rowState2": {
              "datatype": "text array",
              "name": "rowData",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isRowDataEqual",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "e04fb42b-8bc8-4e98-addd-dd21fdf15937",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isRowDataEqual",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "setWeightSpreadsheetRowData",
        "id": "9dbe00c7-25fb-42cf-b8ca-6e1ec89f8355",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_rowData": {
            "name": "data",
            "scope": "local"
          }
        }
      },
      {
        "action": "ifelse",
        "id": "c4944546-0732-4cd5-a5c0-1c07d6961791",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "e04fb42b-8bc8-4e98-addd-dd21fdf15937",
        "test": {
          "datatype": "boolean",
          "name": "isRowDataEqual",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "setWeightSpreadsheetRowData",
        "id": "3aa048e9-6253-4c02-a926-e0050ee7ac38",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_rowData": {
            "name": "rowData",
            "scope": "local"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "9132a3da-06eb-4101-964d-18ba3a115abf",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "data"
          },
          "object": {
            "datatype": "text",
            "name": "allocationData",
            "objectType": "AllocationScheme",
            "scope": "field",
            "set-field": "allocationData",
            "target": "$self$"
          },
          "value": {
            "datatype": "\u003cIncoming\u003e array array array array array array array",
            "name": "rowData",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "6b268560-d8f3-4998-ad3c-6f01743f42cb",
        "includeElse": true,
        "isCommented": false,
        "main": "e04fb42b-8bc8-4e98-addd-dd21fdf15937",
        "test": {
          "datatype": "boolean",
          "name": "isRowDataEqual",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "650908ed-7b48-4493-9642-0ea2bd485c52",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "isRowDataEqual",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "bepChangeDetected",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "c044c658-c3f7-4907-ac1a-35b6b809b1a8",
        "includeElse": true,
        "isCommented": false,
        "main": "61c0d03b-4144-440f-aa68-38fa3d73088e",
        "test": {
          "datatype": "boolean",
          "name": "isDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "12b9b437-82d8-4d67-bdc8-b21c377c916e",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "bepChangeDetected",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "loadModelParameters": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_modelObject"
      },
      {
        "datatype": "text",
        "name": "input_modelParameterValues"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "e3c68f39-5fff-432c-a724-6815b77ebc82",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text",
              "name": "input_modelObject",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isModelEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "bf9425f6-95d4-46f8-8116-9c68fe65b309",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isModelEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setPageData",
        "id": "6e5e8d1e-011d-4af8-a31f-9c9f377c5aa8",
        "isCommented": false,
        "params": {
          "pageData": {
            "datatype": "object",
            "name": "emptyObject",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "DefaultModelParametersEBP"
      },
      {
        "action": "execfunc",
        "function": "setEmbeddedBuilderPageData",
        "id": "572eb02a-f3aa-4ad4-8dc8-1098bf0eab9b",
        "isCommented": false,
        "library": "CirrusLibPageData",
        "params": {
          "data": {
            "datatype": "object",
            "name": "emptyObject",
            "scope": "local"
          },
          "fieldName": {
            "datatype": "text",
            "scope": "fixed",
            "value": "DefaultModelParametersEBP"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "clearEmbeddedBuilderPageData",
        "id": "1b840067-d0fd-4237-bb00-93e544eacc6b",
        "isCommented": false,
        "library": "CirrusLibPageData",
        "params": {
          "fieldName": {
            "datatype": "text",
            "scope": "fixed",
            "value": "DefaultModelParametersEBP"
          }
        }
      },
      {
        "action": "ifelse",
        "id": "894b182c-e923-49b7-8283-bc000274c39b",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "bf9425f6-95d4-46f8-8116-9c68fe65b309",
        "test": {
          "datatype": "boolean",
          "name": "isModelEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "46c661a3-e7f0-4771-b1bf-974f2d511b27",
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "parameters"
            },
            "object": {
              "datatype": "text",
              "name": "input_modelObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "modelParamsUI",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "dad4ef8f-d4b0-4acf-965f-7948feba7877",
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "name": "modelParamsUI",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isModelParamsUINotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "47270e72-596d-4165-b68e-8f8faaae7ffd",
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "isModelParamsUINotEmpty",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isModelParamsUINotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "031ef0ce-41f5-4685-bdaf-0ec2582eb3e0",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isModelParamsUINotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setPageData",
        "id": "001d76d6-f496-41e7-8a66-75e3f6096616",
        "isCommented": false,
        "params": {
          "pageData": {
            "datatype": "\u003cany\u003e",
            "name": "modelParamsUI",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "DefaultModelParametersEBP"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "80b70663-44b5-4d3e-997c-c25c735a5d96",
        "isCommented": false,
        "main": "031ef0ce-41f5-4685-bdaf-0ec2582eb3e0",
        "test": {
          "datatype": "boolean",
          "name": "isModelParamsUINotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "997fbc3a-63bc-4fd4-8c03-e92a0d86bf84",
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text",
              "name": "input_modelParameterValues",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isParamsNotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "0c079963-539d-49cd-90d5-0cd5b449a6a1",
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "isParamsNotEmpty",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isParamsNotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "90edb82b-1855-46c8-929c-8726b83f468e",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isParamsNotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "setEmbeddedBuilderPageData",
        "id": "98523ad3-bc45-472e-963e-56c07fdce8de",
        "library": "CirrusLibPageData",
        "params": {
          "data": {
            "datatype": "object",
            "name": "input_modelParameterValues",
            "scope": "local"
          },
          "fieldName": {
            "datatype": "text",
            "scope": "fixed",
            "value": "DefaultModelParametersEBP"
          }
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "bea2be47-3acf-4638-aacd-30ecdcdd4f2b",
        "isCommented": false,
        "main": "90edb82b-1855-46c8-929c-8726b83f468e",
        "test": {
          "datatype": "boolean",
          "name": "isParamsNotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "7defa698-7e1e-462f-b1d0-8650566829af",
        "includeElse": true,
        "isCommented": false,
        "main": "bf9425f6-95d4-46f8-8116-9c68fe65b309",
        "test": {
          "datatype": "boolean",
          "name": "isModelEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3168e2cb-1b8c-45d1-b7b8-1eeb5eacf84b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getEmbeddedBuilderPageData",
          "library": "CirrusLibPageData",
          "params": {
            "fieldName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "DefaultModelParametersEBP"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "baselineParameters",
          "scope": "global"
        }
      }
    ],
    "sasProvided": true
  },
  "loadWeightData": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_hierarchyData"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "34dc05d7-81a6-42e9-8c52-707223ddf4ca",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "rowState"
            },
            "object": {
              "datatype": "object",
              "name": "MethodSpreadsheet",
              "scope": "data",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "methodRowStateData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "38613f21-1bda-4185-98cf-a7d81914a7f1",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "name": "methodRowStateData",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isRowStateUndefined",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "bdbd23f1-3a2d-4d05-a34c-3deda260637e",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isRowStateUndefined",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "f0e8a442-006d-45ab-94fc-322b3a6d643a",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "object array",
          "name": "knownMethodRowData",
          "scope": "global"
        },
        "variable": {
          "datatype": "object array",
          "name": "methodRowStateData",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "27d781f5-9101-4f65-8ac6-f4ad246948ae",
        "isCommented": false,
        "main": "bdbd23f1-3a2d-4d05-a34c-3deda260637e",
        "test": {
          "datatype": "boolean",
          "name": "isRowStateUndefined",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "65327408-3c34-4c17-8108-c5cd2e5ceec1",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "key,hierarchy,segment,hasChildren,members,targetVar,targetType,segmentFilter,allocationType,allocationMethod"
        },
        "variable": {
          "datatype": "text",
          "name": "attributes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "238882b7-cfe5-4290-b6f0-f92156fd0ad3",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "split",
          "library": "CirrusLibString",
          "params": {
            "separator": {
              "datatype": "text",
              "scope": "fixed",
              "value": ","
            },
            "string": {
              "datatype": "text",
              "name": "attributes",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "attributesArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a6bc585b-a078-4d69-8873-d639548b5a71",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToArray",
          "library": "CirrusLibArray",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "[\"RUNOFF\",\"STATIC\"]"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "valuesToFilter",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c319c4ce-8d72-482f-93a3-0f21c1cdb930",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "removeRows",
          "library": "CirrusLibSpreadsheet",
          "params": {
            "cutEmptyBranches": {
              "datatype": "boolean",
              "scope": "fixed",
              "value": true
            },
            "filterAttributeName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "targetType"
            },
            "filterAttributeValues": {
              "datatype": "\u003cOutgoing\u003e array",
              "name": "valuesToFilter",
              "scope": "local"
            },
            "rowData": {
              "datatype": "object array",
              "name": "methodRowStateData",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "rowData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c91bedee-e007-4360-bf88-5b96b15e9e3e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "object array",
              "name": "rowData",
              "scope": "local"
            },
            "operator": {
              "datatype": "enum",
              "scope": "fixed",
              "value": "eq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "hasChildren"
            },
            "referenceValue": {
              "datatype": "object",
              "scope": "fixed",
              "value": false
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "leafRows",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "794b1167-1abf-478c-a43c-f900a6dfa81f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewObjectArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "newRows",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "92ca926e-e6f5-4222-bb7b-16d1a6387392",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "object array",
            "name": "leafRows",
            "scope": "local"
          },
          "callback": {
            "function": "queryHierarchyData",
            "library": "$interactions$",
            "params": {
              "input_hierarchyData": {
                "datatype": "text array",
                "name": "input_hierarchyData",
                "scope": "local"
              },
              "input_outArray": {
                "datatype": "object array",
                "name": "rowData",
                "scope": "local"
              },
              "input_segment": {
                "datatype": "object",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              }
            }
          }
        }
      },
      {
        "action": "returnvar",
        "id": "3f584333-4ac5-475d-86a1-75fc4f6449dd",
        "isCommented": false,
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "rowData",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "onAnyEvent": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "d4c1dfc4-632b-46ae-a135-67a166a25ad6",
        "type": "calculated",
        "value": {
          "function": "isDraftObject",
          "library": "CirrusLibCirrusObject",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "cc54781b-1415-44a9-8d37-c174afb308e8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getAllData",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "All Data"
        },
        "variable": {
          "datatype": "All Data",
          "name": "pageData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "00364a5b-a411-474c-9fa5-96b96e4e0df5",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "createdFrom"
            },
            "object": {
              "datatype": "All Data",
              "name": "pageData",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "createFromKey",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3a4d5edf-39dd-4db5-80aa-fe175d90294e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNotEmpty",
          "library": "CirrusLibString",
          "params": {
            "string": {
              "name": "createFromKey",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isCreatedFromKeyNotEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "abe6cb4d-99b6-42ac-b9a4-e82a99afa92d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "and",
          "library": "CirrusLibBoolean",
          "params": {
            "bool1": {
              "datatype": "boolean",
              "name": "isDraft",
              "scope": "local"
            },
            "bool2": {
              "datatype": "boolean",
              "name": "isCreatedFromKeyNotEmpty",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDraftAndCreatedFrom",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "cc35cfbc-9673-40be-8ba6-fd548f845f8a",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isDraftAndCreatedFrom",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "setTabDirty",
        "id": "852dec59-16a7-4383-a7a3-759c6e496146",
        "isCommented": false,
        "library": "CirrusLibPageData",
        "params": {
          "isDirty": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        }
      },
      {
        "action": "setvar",
        "id": "2f0ebec1-8b17-444d-8f67-5fc54fa075e5",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": false
        },
        "variable": {
          "datatype": "boolean",
          "name": "isNotDirty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "068079fe-f96c-421d-93cf-0aa06aed158d",
        "includeElse": true,
        "iselse": true,
        "main": "cc35cfbc-9673-40be-8ba6-fd548f845f8a",
        "test": {
          "datatype": "boolean",
          "name": "isDraftAndCreatedFrom",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a615b4f8-571d-465a-8b83-731f1e8500a7",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "isPageDirty",
          "library": "$interactions$",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isPageDirty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "e6055f2e-50ad-4533-9434-54d42a84a4fc",
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "isPageDirty",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isNotDirty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "24cc7811-94c1-4777-a86a-7754a41b4827",
        "includeElse": true,
        "isCommented": false,
        "main": "cc35cfbc-9673-40be-8ba6-fd548f845f8a",
        "test": {
          "datatype": "boolean",
          "name": "isDraftAndCreatedFrom",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "44a76eb6-71b3-4e7b-84ce-d3481cb6c029",
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "name": "isNotDirty",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "save"
      },
      {
        "action": "execfunc",
        "function": "setTabDirty",
        "id": "989f93d8-d3c0-4878-a5d8-50b3b0739494",
        "library": "CirrusLibPageData",
        "params": {
          "isDirty": {
            "datatype": "boolean",
            "name": "isPageDirty",
            "scope": "local"
          }
        }
      }
    ],
    "sasProvided": true
  },
  "onBEPChange": {
    "inputs": [],
    "logic": [
      {
        "action": "ifelse",
        "id": "bf80b83f-a734-406c-92a8-aee597c74cfd",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "9371430d-8d2a-4b86-b31e-e2447806c562",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "3cceb83d-8d8a-4a1a-a063-79cfd20bb216",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "WEIGHT"
        },
        "variable": {
          "datatype": "text",
          "name": "defaultAllocationType",
          "objectType": "AllocationScheme",
          "scope": "field",
          "set-field": "defaultAllocationType",
          "target": "$self$"
        }
      },
      {
        "action": "setvar",
        "id": "a445d541-8a33-4565-9dfc-79a881871030",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getHierarchyData",
          "library": "$interactions$",
          "params": {},
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "hierarchyData",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "setSpreadsheetsColumnMeta",
        "id": "f49ebfa2-e1f4-4573-ba72-2f943dd7ea9e",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setMethodSpreadsheetRowData",
        "id": "e4aec02d-1612-485d-9e44-a10a9a6482d0",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_rowsArray": {
            "datatype": "object array",
            "name": "selectedBEPDataArray",
            "scope": "global"
          }
        }
      },
      {
        "action": "setvar",
        "id": "3fedabf0-046c-43e7-b525-de8b36ab1bff",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "loadWeightData",
          "library": "$interactions$",
          "params": {
            "input_hierarchyData": {
              "name": "hierarchyData",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "rowData",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "setWeightSpreadsheetRowData",
        "id": "474f51d6-310e-42cc-a4ef-3c57cf23f2c3",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_rowData": {
            "name": "rowData",
            "scope": "local"
          }
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "4d38a0e1-c7ba-4f24-9cff-ab76756f1081",
        "isCommented": false,
        "main": "9371430d-8d2a-4b86-b31e-e2447806c562",
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "9ec28c6d-cbd2-4e8a-89bd-710f6d3f819b",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "e83b201e-13b1-43a7-bbef-4fb7b2af2dc2",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "MODEL"
        },
        "variable": {
          "datatype": "text",
          "name": "defaultAllocationType",
          "objectType": "AllocationScheme",
          "scope": "field",
          "set-field": "defaultAllocationType",
          "target": "$self$"
        }
      },
      {
        "action": "setvar",
        "id": "3e44d6ca-b9f2-4952-b505-93747994d1dc",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "targetVars"
            },
            "object": {
              "datatype": "text",
              "name": "selectedBEPObject",
              "scope": "global"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "targetVars",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "abbaea1a-6055-4ac4-8e8e-2ddc1236c72b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "data"
            },
            "object": {
              "name": "targetVars",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "choices",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "filterValues",
        "id": "48201188-feef-4344-88ce-8c49b1235966",
        "isCommented": false,
        "params": {
          "filteredValues": {
            "datatype": "\u003cany\u003e",
            "name": "choices",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "targetVariable"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "6399852d-0efb-45d3-8b34-e73a31e5575e",
        "isCommented": false,
        "main": "9ec28c6d-cbd2-4e8a-89bd-710f6d3f819b",
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "32225f16-b942-4e68-8a1d-bfda4d314cf5",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "bf80b83f-a734-406c-92a8-aee597c74cfd",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "983c4e3d-1f56-414e-8705-5aaa9754955b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewObjectArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "emptyRows",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "setWeightSpreadsheetRowData",
        "id": "b9f4ea79-4872-4fbe-b8b7-398d13b214c6",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_rowData": {
            "datatype": "text array",
            "name": "emptyRows",
            "scope": "local"
          }
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "7cf9daa4-e59b-4cc8-be5c-1336daf337a5",
        "includeElse": true,
        "isCommented": false,
        "main": "bf80b83f-a734-406c-92a8-aee597c74cfd",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "execfunc",
        "function": "setRequiredFields",
        "id": "af4add38-e5c1-4ad7-879d-9e9c05707ac3",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setLayout",
        "id": "4b98444d-35c8-4642-b6a2-9e17a75f9090",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "onBEPRemove": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_added"
      },
      {
        "datatype": "text array",
        "name": "input_removedNow"
      },
      {
        "datatype": "text array",
        "name": "input_removedEarlier"
      }
    ],
    "logic": [
      {
        "action": "execfunc",
        "function": "setGlobalVariables",
        "id": "09fb47b4-32cf-44d3-8312-9c4d28c63d15",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "onBEPChange",
        "id": "d0a1089c-0b49-4a35-853f-962eb2ad211c",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      }
    ],
    "sasProvided": true
  },
  "onBEPSelect": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_addedNow"
      },
      {
        "datatype": "text array",
        "name": "input_addedEarlier"
      },
      {
        "datatype": "text array",
        "name": "input_removed"
      }
    ],
    "logic": [
      {
        "action": "execfunc",
        "function": "setGlobalVariables",
        "id": "881323cf-9798-4d08-8922-b102cc79a0c6",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setGlobalVariablesFromBEP",
        "id": "16137563-5c30-42da-84d5-19415c8ec98f",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_addedEarlier": {
            "datatype": "text array",
            "name": "input_addedEarlier",
            "scope": "local"
          },
          "input_addedNow": {
            "datatype": "text array",
            "name": "input_addedNow",
            "scope": "local"
          },
          "input_removed": {
            "datatype": "text array",
            "name": "input_removed",
            "scope": "local"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "setGlobalVariablesFromDD",
        "id": "44fd0a1c-a152-4bb9-b72c-06f445fd5a41",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "onBEPChange",
        "id": "29a6106b-ea5c-43d5-9489-9c0abb81c5e2",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "ifelse",
        "id": "94d8c184-8044-4ee9-ac65-ed5dcab4a23c",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "003a8f63-538f-41f3-8f7c-344ed85cbe53",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "94d8c184-8044-4ee9-ac65-ed5dcab4a23c",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "setprop",
        "function": "setIsOpen",
        "id": "5779d7c9-9ea5-4c35-b208-c8fc677dec4e",
        "isCommented": false,
        "params": {
          "isOpen": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "bepInvalidErrorMessage"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "33b195a6-3bab-42ce-926c-7d8a746c9f54",
        "includeElse": true,
        "isCommented": false,
        "main": "94d8c184-8044-4ee9-ac65-ed5dcab4a23c",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      }
    ],
    "sasProvided": true
  },
  "onCopyLoad": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_key"
      }
    ],
    "logic": [
      {
        "action": "execfunc",
        "function": "loadObjectCopyAsDraft",
        "id": "bfb70614-5817-402b-a8ab-415e35d563ad",
        "isCommented": false,
        "library": "CirrusLibCirrusObject",
        "params": {
          "copyObjectLinks": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          },
          "copySuffix": {
            "datatype": "text",
            "scope": "fixed",
            "value": "_copy"
          },
          "objectKey": {
            "datatype": "text",
            "name": "input_key",
            "scope": "local"
          }
        },
        "returnType": "All Data"
      },
      {
        "action": "execfunc",
        "function": "onDraftLoad",
        "id": "26bcfb9c-fd0a-4a74-a153-4b788c598e0d",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "onDraftLoad": {
    "inputs": [
      {
        "datatype": "numeric",
        "name": "input_id"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "bb7342d9-7587-4aab-9f00-9beca28682bb",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getAllData",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "All Data"
        },
        "variable": {
          "datatype": "All Data",
          "name": "pageData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "83a1807b-328c-487a-9e2b-1306d1e7a6c6",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "createdFrom"
            },
            "object": {
              "datatype": "All Data",
              "name": "pageData",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "createdFrom",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "bdd4f463-f21a-43a2-900f-4ded4670c36c",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "name": "createdFrom",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isCreatedFromEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "setGlobalVariables",
        "id": "889c5c8c-1f18-4c38-9d7f-77bf3485ae1a",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "ifelse",
        "id": "2152a3d6-7d1e-4f91-9e4a-09bb7bd1e006",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isCreatedFromEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "loadDraftObject",
        "id": "e5c12f08-3c9a-440a-9e6e-eb088be9c4b0",
        "library": "CirrusLibCirrusObject",
        "params": {},
        "returnType": "All Data"
      },
      {
        "action": "setvar",
        "id": "2bca7061-a38c-4e6b-a5c2-0f682c98af3f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getLocalisedObjectType",
          "library": "$interactions$",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "objectType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "b5742c67-ab43-45e4-a642-1adea308c059",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "objectType",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": ": "
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "name_str",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "abc939d1-45df-44b5-a739-898dec76a0a9",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "text",
          "name": "name_str",
          "scope": "local"
        },
        "variable": {
          "datatype": "text",
          "name": "name_readonly",
          "scope": "data",
          "target": "$self$"
        }
      },
      {
        "action": "setvar",
        "id": "897aacb6-5950-4e02-b6c9-215a08894ff1",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "WEIGHT"
        },
        "variable": {
          "datatype": "text",
          "name": "defaultAllocationType",
          "objectType": "AllocationScheme",
          "scope": "field",
          "set-field": "defaultAllocationType",
          "target": "$self$"
        }
      },
      {
        "action": "setvar",
        "id": "dc5557e7-916a-4244-bc08-b44041dbcc5c",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "EQUAL"
        },
        "variable": {
          "datatype": "text",
          "name": "defaultAllocationMethod",
          "objectType": "AllocationScheme",
          "scope": "field",
          "set-field": "defaultAllocationMethod",
          "target": "$self$"
        }
      },
      {
        "action": "ifelse",
        "id": "349d12f7-2a32-4959-a1c5-0372aa4e583d",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "2152a3d6-7d1e-4f91-9e4a-09bb7bd1e006",
        "test": {
          "datatype": "boolean",
          "name": "isCreatedFromEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "onNameChange",
        "id": "1ca4472f-4df6-46c1-98ce-805b85911bae",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_value": {
            "datatype": "text",
            "name": "name",
            "objectType": "RuleSet",
            "scope": "field",
            "set-field": "name",
            "target": "$self$"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "setGlobalVariablesFromBEP",
        "id": "13bfe7a4-0be3-4541-a900-45bf8bbad8fb",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "f212f312-1b4c-4b17-91ca-86c35e6399ce",
        "includeElse": true,
        "isCommented": false,
        "main": "2152a3d6-7d1e-4f91-9e4a-09bb7bd1e006",
        "test": {
          "datatype": "boolean",
          "name": "isCreatedFromEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "48e8913d-1362-4c80-a034-27c0ede0eb7b",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "DEV"
        },
        "variable": {
          "datatype": "text",
          "name": "statusCd",
          "objectType": "RuleSet",
          "scope": "field",
          "set-field": "statusCd",
          "target": "$self$"
        }
      },
      {
        "action": "execfunc",
        "function": "setTypeDropdown",
        "id": "a3aa9d60-ec63-4703-b1a0-0de826edad06",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setMethodDropdown",
        "id": "155ceb0e-4834-4cd5-b3db-f06703e9b12f",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setStatusDropdown",
        "id": "61ed38a9-59e0-4490-b38e-998ea2d272c2",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setRequiredFields",
        "id": "b2a4821a-0ba6-4068-a529-c1bd1efdd1df",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setReadOnlyFields",
        "id": "728dd132-0254-45bb-8276-f739968d9e48",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setScreenReadOnly",
        "id": "d8d90539-a911-4400-bab0-7b99da3b88c9",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setLayout",
        "id": "d81d8c2e-0e84-46b5-b891-afd8c9da1271",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      }
    ],
    "sasProvided": true
  },
  "onEditLoad": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_key"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "49600550-dcb4-4e72-b457-d07dabbe77ce",
        "type": "calculated",
        "value": {
          "function": "isObjectDeleted",
          "library": "CirrusLibCirrusObject",
          "params": {
            "objectKey": {
              "datatype": "text",
              "name": "input_key",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "objectIsDeleted",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "82146ff6-2e6b-4dc5-a98b-87b5e84f293c",
        "test": {
          "datatype": "boolean",
          "name": "objectIsDeleted",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "2e4a5b7c-264e-4fe0-9e8f-fdf8eac63ae2",
        "variable": {
          "datatype": "boolean",
          "name": "objectIsDeleted",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "6488acc7-78f1-4101-903d-08f95f55f490",
        "main": "82146ff6-2e6b-4dc5-a98b-87b5e84f293c",
        "test": {
          "datatype": "boolean",
          "name": "objectIsDeleted",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "loadExistingObject",
        "id": "5184325a-c10a-45a5-91f6-8ba51fbeda87",
        "library": "CirrusLibCirrusObject",
        "params": {
          "key": {
            "datatype": "text",
            "name": "input_key",
            "scope": "local"
          }
        },
        "returnType": "All Data"
      },
      {
        "action": "execfunc",
        "function": "setGlobalVariables",
        "id": "c718cea5-90a6-4bc4-9c4b-2727bbabcfa2",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setGlobalVariablesFromBEP",
        "id": "843688f0-32d5-4186-8d82-fadefc881134",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setGlobalVariablesFromDD",
        "id": "0d2b1090-2e93-49d9-8f52-88ef0f360104",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setTypeDropdown",
        "id": "c01f156f-e221-4810-b769-c1b14a00aead",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setMethodDropdown",
        "id": "4a144117-2899-4997-ac32-d808e57831c5",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setStatusDropdown",
        "id": "283de5e0-990d-42d6-839c-77a768ddfd88",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setRequiredFields",
        "id": "db71d10c-18c3-46f0-ad40-6780bf2685e5",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setReadOnlyFields",
        "id": "541a4f8b-7880-4aa3-97b7-82bf6a252e39",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "setvar",
        "id": "6fb4a0a7-9100-4de8-993d-6ff5a88af103",
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": true
        },
        "variable": {
          "datatype": "boolean",
          "name": "true",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "ef3d8cb9-ac3a-4814-9364-e0875793260e",
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "name": "true",
            "scope": "local"
          }
        },
        "widgetId": "objectId"
      },
      {
        "action": "execfunc",
        "function": "onNameChange",
        "id": "bc1fe50d-5cc5-4e28-93c0-a254138bc43b",
        "library": "$interactions$",
        "params": {
          "input_value": {
            "datatype": "text",
            "name": "name",
            "scope": "field"
          }
        }
      },
      {
        "action": "setvar",
        "id": "dd6b3d67-2c05-4b0d-b767-83172f710374",
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": false
        },
        "variable": {
          "datatype": "boolean",
          "name": "showWarning",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "440c3826-4eac-4cae-b37b-54ec37ee6c20",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "ec4b95c6-355d-4595-a85e-87df52ddc997",
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "execfunc",
        "function": "setSpreadsheetsColumnMeta",
        "id": "10c123c4-7a56-4191-ac25-a3a950e2f2ff",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "setvar",
        "id": "65e403c6-e6c1-4c9e-934b-610d8009fc13",
        "type": "calculated",
        "value": {
          "function": "loadMethodData",
          "library": "$interactions$",
          "params": {}
        },
        "variable": {
          "datatype": "boolean",
          "name": "showWarning",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "153ae3e0-34d7-4a2b-997e-e23a027296c5",
        "main": "ec4b95c6-355d-4595-a85e-87df52ddc997",
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "c5bb3af5-fa31-487a-ac1f-beeaacf765b8",
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "execfunc",
        "function": "setTargetVarDropdown",
        "id": "a0cd7ae0-8b35-4e1e-900a-c7ffc2a25662",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "setvar",
        "id": "1ac8e5b3-e410-4a87-a4d8-3b2669740083",
        "type": "calculated",
        "value": {
          "function": "loadLinkInstances",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "linkTypeId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocationScheme_defaultModel"
            },
            "linkTypeSSC": {
              "datatype": "text",
              "scope": "fixed",
              "value": "RCC"
            },
            "linkedToKey": {
              "datatype": "text",
              "name": "input_key",
              "scope": "local"
            },
            "linkedToSchemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "AllocationScheme"
            },
            "schemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "Model"
            },
            "side": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 2
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedModels",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "fd6dd326-7e54-4542-88cc-b2166506b1db",
        "type": "calculated",
        "value": {
          "function": "hasAnyItems",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedModels",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "hasLinkedModel",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "9cd43894-ce74-4c82-94e1-8ad12342cebd",
        "test": {
          "datatype": "boolean",
          "name": "hasLinkedModel",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "1f03b540-9ad1-4959-9db5-0bc6dd333608",
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedModels",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "\u003cIncoming\u003e"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e",
          "name": "defaultModel",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "loadModelParameters",
        "id": "16999ecf-a219-4923-961b-5dbbe0293050",
        "library": "$interactions$",
        "params": {
          "input_modelObject": {
            "datatype": "\u003cIncoming\u003e",
            "name": "defaultModel",
            "scope": "local"
          },
          "input_modelParameterValues": {
            "datatype": "text",
            "name": "defaultModelParameters",
            "scope": "field"
          }
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "cb4e4e07-532f-48c3-aee5-dc7f5ae4c8ff",
        "main": "9cd43894-ce74-4c82-94e1-8ad12342cebd",
        "test": {
          "datatype": "boolean",
          "name": "hasLinkedModel",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "955f3805-4719-475c-8ef5-0c674bbd48eb",
        "main": "c5bb3af5-fa31-487a-ac1f-beeaacf765b8",
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "ffbf381a-f575-4c4f-8cde-bf13231f73a6",
        "main": "440c3826-4eac-4cae-b37b-54ec37ee6c20",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "execfunc",
        "function": "setScreenReadOnly",
        "id": "23187cef-e27d-4186-b480-9ac17bc1c3d0",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setLayout",
        "id": "0df60d7f-d48e-46c7-ac3c-e5a422e1047c",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "ifelse",
        "id": "cbf62eb7-7285-42d3-add8-18c18915f659",
        "test": {
          "datatype": "boolean",
          "name": "showWarning",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setIsOpen",
        "id": "76282523-5916-452f-898c-b1f112ac02b9",
        "params": {
          "isOpen": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "widgetId": "bepModifiedInfoMessage"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "47146338-1f7a-48cd-bdfc-a71f57b79e7c",
        "main": "cbf62eb7-7285-42d3-add8-18c18915f659",
        "test": {
          "datatype": "boolean",
          "name": "showWarning",
          "scope": "local"
        }
      }
    ],
    "sasProvided": true
  },
  "onMethodCellEdit": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_widgetID"
      },
      {
        "datatype": "object",
        "name": "input_colDef"
      },
      {
        "datatype": "object",
        "name": "input_data"
      },
      {
        "datatype": "text",
        "name": "input_newValue"
      },
      {
        "datatype": "text",
        "name": "input_oldValue"
      },
      {
        "datatype": "numeric",
        "name": "input_rowIndex"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "097e3b43-3f39-4bd0-b963-ea485ad69d8f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "rowState"
            },
            "object": {
              "datatype": "object",
              "name": "WeightSpreadsheet",
              "scope": "data",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "weightRowData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "095ee2dd-7d03-4929-b786-58118a24a044",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "\u003cany\u003e",
              "name": "weightRowData",
              "scope": "local"
            },
            "arg2": {
              "datatype": "object array",
              "name": "lastKnowWeightRowData",
              "scope": "global"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "weightRowData",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "updateWeights",
        "id": "97838a24-758a-46e3-98af-2da5b6e7252a",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_segmentFilterRowObject": {
            "datatype": "object",
            "name": "input_data",
            "scope": "local"
          },
          "input_weightRowsData": {
            "name": "weightRowData",
            "scope": "local"
          }
        }
      },
      {
        "action": "setvar",
        "id": "0b99a1b1-b820-4b2b-95a6-9f185d5b2cb0",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "weightRowData",
          "scope": "local"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "lastKnowWeightRowData",
          "scope": "global"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "4c09a599-2139-4ba5-a50f-6fc1d807d941",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "\u003cany\u003e",
            "name": "weightRowData",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "WeightSpreadsheet"
      },
      {
        "action": "dispatch",
        "id": "e9aa9e54-9a75-4a2b-ad0b-9e06d8285fc4",
        "isCommented": false
      }
    ],
    "sasProvided": true
  },
  "onModelRemove": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_added"
      },
      {
        "datatype": "text array",
        "name": "input_removedNow"
      },
      {
        "datatype": "text array",
        "name": "input_removedEarlier"
      }
    ],
    "logic": [
      {
        "action": "execfunc",
        "function": "loadModelParameters",
        "id": "d3ec12d9-000e-4327-adae-755e5d168a2c",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      }
    ],
    "sasProvided": true
  },
  "onModelSelect": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_addedNow"
      },
      {
        "datatype": "text array",
        "name": "input_addedEarlier"
      },
      {
        "datatype": "text array",
        "name": "input_removed"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "b8f85311-3bc7-49dc-be1a-91e07d73bfdc",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getCurrentObjectKey",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "key",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9660dd0d-7896-4d48-a751-3c29c8eec564",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "loadLinkInstances",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "added": {
              "datatype": "text array",
              "name": "input_addedNow",
              "scope": "local"
            },
            "linkTypeId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocationScheme_defaultModel"
            },
            "linkTypeSSC": {
              "datatype": "text",
              "scope": "fixed",
              "value": "RCC"
            },
            "linkedToKey": {
              "datatype": "text",
              "name": "key",
              "scope": "local"
            },
            "linkedToSchemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "AllocationScheme"
            },
            "removed": {
              "datatype": "text array",
              "name": "input_removed",
              "scope": "local"
            },
            "schemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "Model"
            },
            "side": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 2
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedModels",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a2076ae6-acb5-41d5-bc86-1d5987a90fd7",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "hasAnyItems",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedModels",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "hasLinkedModel",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "65f82592-649a-46d4-addf-306e4da0b7a1",
        "includeElse": false,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "hasLinkedModel",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "be779c85-0a4f-45d7-b34b-c606afe78165",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text array",
              "name": "input_addedNow",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "hasNoAddedNow",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "dcec3785-7152-4f66-82f9-6f2fac1d9949",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "hasNoAddedNow",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9be46bbb-74db-4418-98a5-52ab621b5da9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedModels",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedModel",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "aed24786-c94a-4778-9eef-d5fa1beeae08",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "dcec3785-7152-4f66-82f9-6f2fac1d9949",
        "test": {
          "datatype": "boolean",
          "name": "hasNoAddedNow",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "37eb4d10-07b0-4e7c-a595-d745893edbe8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_addedNow",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedModelKey",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "0cf12a33-dbee-47e1-b3d3-b8c5f785e427",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedModels",
              "scope": "local"
            },
            "operator": {
              "datatype": "enum",
              "scope": "fixed",
              "value": "eq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "key"
            },
            "referenceValue": {
              "datatype": "text",
              "name": "selectedModelKey",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "filteredModels",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "537c123e-8b0b-4a63-9fe6-146149197292",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "filteredModels",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedModel",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "1cbe5470-2c64-4fd4-a1d1-431176ce71ec",
        "includeElse": true,
        "isCommented": false,
        "main": "dcec3785-7152-4f66-82f9-6f2fac1d9949",
        "test": {
          "datatype": "boolean",
          "name": "hasNoAddedNow",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "loadModelParameters",
        "id": "3e8444e3-f49d-4b6d-914e-682b858ae33f",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_modelObject": {
            "datatype": "text",
            "name": "selectedModel",
            "scope": "local"
          }
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "6af18092-4f28-441c-90a7-4817065b7cb9",
        "includeElse": false,
        "isCommented": false,
        "main": "65f82592-649a-46d4-addf-306e4da0b7a1",
        "test": {
          "datatype": "boolean",
          "name": "hasLinkedModel",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "onNameChange": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_value"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "ee03cb54-7912-46d5-9133-ec9645ef904f",
        "type": "calculated",
        "value": {
          "function": "getLocalisedObjectType",
          "library": "$interactions$",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "objectType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7de7df33-1197-4ba0-b670-127b0688da4a",
        "type": "calculated",
        "value": {
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "objectType",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": ": "
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "name_str",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7edb0eab-2f82-48bf-b722-283144b5cbd8",
        "type": "calculated",
        "value": {
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "name_str",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "name": "input_value",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "name_readonly",
          "scope": "data",
          "target": "$self$"
        }
      }
    ],
    "sasProvided": true
  },
  "onSave": {
    "inputs": [],
    "logic": [
      {
        "action": "execfunc",
        "function": "clearPopups",
        "id": "00f41c18-0424-4de7-9201-a4a59907672a",
        "library": "CirrusLibPage",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "showLoadingOverlay",
        "id": "dbb27851-d242-4b8f-bfd6-14b7393403c9",
        "library": "CirrusLibPage",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "storeData",
        "id": "a8bbadfb-07fc-426a-8883-9cd2503775aa",
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "setvar",
        "id": "1b47ff54-821d-400e-9dfe-e1148e68d7f3",
        "type": "calculated",
        "value": {
          "function": "getAllData",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "All Data"
        },
        "variable": {
          "datatype": "All Data",
          "name": "data",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "0c922945-6007-4337-b0eb-1ca38f7c076e",
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "AllocationScheme"
        },
        "variable": {
          "datatype": "text",
          "name": "objectType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "dd1cfd8f-7641-4542-95d0-ef45f0cf7b16",
        "type": "calculated",
        "value": {
          "function": "isDraftObject",
          "library": "CirrusLibCirrusObject",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c07249d6-2c13-402c-ace9-c80b5653d20d",
        "type": "calculated",
        "value": {
          "function": "validateFields",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "areRequiredFieldsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "80b83872-a678-4f86-8575-4cf1c9d0cf61",
        "includeElse": true,
        "test": {
          "datatype": "boolean",
          "name": "areRequiredFieldsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "465d4c43-cb4e-4cc7-bd4f-bcbdbc7f1172",
        "includeElse": true,
        "iselse": true,
        "main": "80b83872-a678-4f86-8575-4cf1c9d0cf61",
        "test": {
          "datatype": "boolean",
          "name": "areRequiredFieldsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "46107635-2de4-4698-9b07-bcee299419a7",
        "includeElse": true,
        "test": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "d2eb1282-16f5-40ac-97de-f8d2202233dc",
        "type": "calculated",
        "value": {
          "function": "saveDraft",
          "library": "CirrusLibCirrusObject",
          "params": {
            "data": {
              "datatype": "All Data",
              "name": "data",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "newKey",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "b042ffb1-b48a-4d2c-93d1-3e8ef9d705c9",
        "type": "calculated",
        "value": {
          "function": "toString",
          "library": "CirrusLibString",
          "params": {
            "value": {
              "datatype": "text",
              "name": "newKey",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "newKeyString",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "afaf95d6-edc7-48fc-936d-929359796d14",
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "false"
        },
        "variable": {
          "datatype": "text",
          "name": "falseString",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "5fc8c078-50be-4581-b4ab-485a02df5a79",
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "newKeyString",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "name": "falseString",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isKeyFalse",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "c23276f7-9ec4-4d4a-b172-ed6196a967a5",
        "includeElse": true,
        "test": {
          "datatype": "boolean",
          "name": "isKeyFalse",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "2904e8b6-05a5-4d12-8b99-7358bc784995",
        "includeElse": true,
        "iselse": true,
        "main": "c23276f7-9ec4-4d4a-b172-ed6196a967a5",
        "test": {
          "datatype": "boolean",
          "name": "isKeyFalse",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "ebfc8ab9-e64a-4458-a5b2-9719b46eadf7",
        "type": "calculated",
        "value": {
          "function": "getEditLocation",
          "library": "CirrusLibNav",
          "params": {
            "key": {
              "datatype": "text",
              "name": "newKey",
              "scope": "local"
            },
            "objectType": {
              "datatype": "text",
              "name": "objectType",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "newLocation",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "68afb7dc-a494-4900-a1ba-832d619f7dc9",
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": true
        },
        "variable": {
          "datatype": "boolean",
          "name": "replaceInBrowser",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "navigate",
        "id": "858735fb-a5ba-4032-b730-80e0cf2c3a69",
        "library": "CirrusLibNav",
        "params": {
          "location": {
            "datatype": "text",
            "name": "newLocation",
            "scope": "local"
          },
          "replace": {
            "datatype": "boolean",
            "name": "replaceInBrowser",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "execfunc",
        "function": "showSuccess",
        "id": "c6e8f6bc-943b-409e-a479-39a679096a6e",
        "library": "CirrusLibPage",
        "params": {}
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "da81dd71-addc-46b5-a712-9f2f05cfde51",
        "includeElse": true,
        "main": "c23276f7-9ec4-4d4a-b172-ed6196a967a5",
        "test": {
          "datatype": "boolean",
          "name": "isKeyFalse",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "0b7b5985-939e-4deb-840b-51aad70e012e",
        "includeElse": true,
        "iselse": true,
        "main": "46107635-2de4-4698-9b07-bcee299419a7",
        "test": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7f74746c-24ec-4f4d-81db-e57e7c7d78e2",
        "type": "calculated",
        "value": {
          "function": "getCurrentObjectKey",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "instanceKey",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a4ae11f6-4d38-49f0-ae02-77f133120159",
        "type": "calculated",
        "value": {
          "function": "isObjectDeleted",
          "library": "CirrusLibCirrusObject",
          "params": {
            "objectKey": {
              "datatype": "text",
              "name": "instanceKey",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isObjectDeleted",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "a04fccb8-c36b-4480-802d-7a80f917a962",
        "test": {
          "datatype": "boolean",
          "name": "isObjectDeleted",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "1edf88af-41d0-4bd3-b10f-306875bba170",
        "variable": {
          "datatype": "boolean",
          "name": "isObjectDeleted",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "3ba40b13-fada-4a7a-8870-9f2dadfdf62f",
        "main": "a04fccb8-c36b-4480-802d-7a80f917a962",
        "test": {
          "datatype": "boolean",
          "name": "isObjectDeleted",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "29eadce2-eefc-44bd-836b-d67c7c12d298",
        "type": "calculated",
        "value": {
          "function": "saveObject",
          "library": "CirrusLibCirrusObject",
          "params": {
            "data": {
              "datatype": "All Data",
              "name": "data",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "saveSuccessful",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "e0834f17-76c1-4be4-a9c7-f8debb63caff",
        "test": {
          "datatype": "boolean",
          "name": "saveSuccessful",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "onEditLoad",
        "id": "22dfd989-44a6-42de-9631-59499d1c2c28",
        "library": "$interactions$",
        "params": {
          "input_key": {
            "datatype": "text",
            "name": "instanceKey",
            "scope": "local"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "showSuccess",
        "id": "c8e0f92c-8815-47c4-b293-9778b5ae43cf",
        "library": "CirrusLibPage",
        "params": {}
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "8bc1ecdf-c8cb-4f07-8c17-e542a62b7625",
        "main": "e0834f17-76c1-4be4-a9c7-f8debb63caff",
        "test": {
          "datatype": "boolean",
          "name": "saveSuccessful",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "135b170a-64dd-400a-8cb6-cc271b14d68b",
        "includeElse": true,
        "main": "46107635-2de4-4698-9b07-bcee299419a7",
        "test": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "fa9392e4-8a32-4913-8951-3460da2311da",
        "includeElse": true,
        "main": "80b83872-a678-4f86-8575-4cf1c9d0cf61",
        "test": {
          "datatype": "boolean",
          "name": "areRequiredFieldsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "hideLoadingOverlay",
        "id": "2d549016-2af6-4685-a411-b87772135fde",
        "library": "CirrusLibPage",
        "params": {}
      }
    ],
    "sasProvided": true
  },
  "onTabClose": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "d4bc8813-7b01-4a4a-aa39-9179a9f3f8b6",
        "type": "calculated",
        "value": {
          "function": "getDiffJSONPatch",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "Patch array"
        },
        "variable": {
          "datatype": "Patch array",
          "name": "patch",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7137fef9-ed0f-4eeb-bb91-312044fd126e",
        "type": "calculated",
        "value": {
          "function": "isObjectPageDirty",
          "library": "CirrusLibCirrusObject",
          "params": {
            "patch": {
              "datatype": "Patch array",
              "name": "patch",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDirty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "b4baa254-da5a-4791-85dd-4cf604d92946",
        "includeElse": false,
        "test": {
          "datatype": "boolean",
          "name": "isDirty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4cb612e0-2294-4e78-b25f-7afea93e4d5d",
        "type": "calculated",
        "value": {
          "function": "promptForConfirmNavigation",
          "library": "CirrusLibPage",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "closeAnyway",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "d40aa399-590e-4b19-b8c5-0ea908c08bdf",
        "variable": {
          "datatype": "boolean",
          "name": "closeAnyway",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "817bd86e-4653-4dbf-9408-3471d42e4f6e",
        "includeElse": false,
        "main": "b4baa254-da5a-4791-85dd-4cf604d92946",
        "test": {
          "datatype": "boolean",
          "name": "isDirty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "bc1b02e8-8f69-4079-b6f4-ec2b58cbf408",
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "isDirty",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "canClose",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "91f8c96d-6a83-4f16-9083-517045695ad4",
        "variable": {
          "datatype": "boolean",
          "name": "canClose",
          "scope": "local"
        }
      }
    ],
    "sasProvided": true
  },
  "onWeightCellEdit": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_widgetID"
      },
      {
        "datatype": "object",
        "name": "input_colDef"
      },
      {
        "datatype": "object",
        "name": "input_data"
      },
      {
        "datatype": "text",
        "name": "input_newValue"
      },
      {
        "datatype": "text",
        "name": "input_oldValue"
      },
      {
        "datatype": "numeric",
        "name": "input_rowIndex"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "097e3b43-3f39-4bd0-b963-ea485ad69d8f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "rowState"
            },
            "object": {
              "datatype": "object",
              "name": "WeightSpreadsheet",
              "scope": "data",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "weightRowData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "095ee2dd-7d03-4929-b786-58118a24a044",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "\u003cany\u003e",
              "name": "weightRowData",
              "scope": "local"
            },
            "arg2": {
              "datatype": "object array",
              "name": "lastKnowWeightRowData",
              "scope": "global"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "weightRowData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7b4dd64d-ecc6-4921-983e-85d3561063e8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "weightRowData",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "name": "input_rowIndex",
              "scope": "local"
            }
          },
          "returnType": "\u003cIncoming\u003e"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e",
          "name": "rowToUpdate",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "23c1acee-920a-4af7-8c46-6a66846745bd",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getTypeOf",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text",
              "name": "input_newValue",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "newValueType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c169d10d-b8a0-48f2-a50a-f9d4a89d92c9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "newValueType",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "number"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isNumeric",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "c55e9c71-2942-4a5f-bde8-607259ccd003",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isNumeric",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "7e64f112-cae5-462b-924c-f62c7b9d69c9",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "weightOverride"
          },
          "object": {
            "name": "rowToUpdate",
            "scope": "local"
          },
          "value": {
            "datatype": "text",
            "name": "input_newValue",
            "scope": "local"
          }
        },
        "returnType": "\u003cIncoming\u003e"
      },
      {
        "action": "ifelse",
        "id": "090d9520-e681-4a91-b171-fe15ec413524",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "c55e9c71-2942-4a5f-bde8-607259ccd003",
        "test": {
          "datatype": "boolean",
          "name": "isNumeric",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "remove",
        "id": "c6f599d0-0e86-480f-ab85-f5b19dc71d99",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "weightOverride"
          },
          "object": {
            "name": "rowToUpdate",
            "scope": "local"
          }
        },
        "returnType": "\u003cIncoming\u003e"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "3566b43a-1cd8-4a1b-9dc7-9e50816c6d88",
        "includeElse": true,
        "isCommented": false,
        "main": "c55e9c71-2942-4a5f-bde8-607259ccd003",
        "test": {
          "datatype": "boolean",
          "name": "isNumeric",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "updateWeights",
        "id": "97838a24-758a-46e3-98af-2da5b6e7252a",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_segmentFilterRowObject": {
            "datatype": "object",
            "name": "input_data",
            "scope": "local"
          },
          "input_weightRowsData": {
            "name": "weightRowData",
            "scope": "local"
          }
        }
      },
      {
        "action": "setvar",
        "id": "0b99a1b1-b820-4b2b-95a6-9f185d5b2cb0",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "weightRowData",
          "scope": "local"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "lastKnowWeightRowData",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "d4516afc-11a3-41cb-a44e-91c854893d27",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToArray",
          "library": "CirrusLibArray",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "[{\"key\": \"   \", \"hierarchy\": [\"   \"], \"hasChildren\": true}]"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "emptyWeightData",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "4c09a599-2139-4ba5-a50f-6fc1d807d941",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "\u003cOutgoing\u003e array",
            "name": "emptyWeightData",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "WeightSpreadsheet"
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "37eca5d8-9231-4126-9759-c1dd8068865c",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "\u003cany\u003e",
            "name": "weightRowData",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "WeightSpreadsheet"
      },
      {
        "action": "dispatch",
        "id": "e9aa9e54-9a75-4a2b-ad0b-9e06d8285fc4",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "cc53e2e9-e246-4f9b-8be0-c66382afff79",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "rowState"
            },
            "object": {
              "datatype": "object",
              "name": "WeightSpreadsheet",
              "scope": "data",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "updatedWeightRowData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "114c2836-bb4b-4f21-a829-69c5d2d481ba",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": true
        },
        "variable": {
          "datatype": "boolean",
          "name": "true",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "05fb712d-4cca-494e-a95c-d1c09df32ef6",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "true",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "promoteWeightRow": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_object"
      },
      {
        "datatype": "text array",
        "name": "input_properties"
      },
      {
        "datatype": "text array",
        "name": "input_outputArray"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "160b897c-1506-4ab7-96fa-59fa71ee6847",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "hasChildren"
            },
            "object": {
              "datatype": "text",
              "name": "input_object",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "hasChildren",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "8191cb6f-cf1d-4c92-8d7a-d3447a7f2daa",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "\u003cany\u003e",
          "name": "hasChildren",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "249effd3-b7f2-4cb2-9fb9-35ead283342d",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": true
        },
        "variable": {
          "datatype": "boolean",
          "name": "promoteRow",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "40014b1e-aa6e-424f-9fd6-e4897870e330",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "8191cb6f-cf1d-4c92-8d7a-d3447a7f2daa",
        "test": {
          "datatype": "\u003cany\u003e",
          "name": "hasChildren",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "f1abe1df-5e87-4486-9d2d-720a4f359b1e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "targetType"
            },
            "object": {
              "datatype": "text",
              "name": "input_object",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "targetType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "386792ba-e59d-4e00-96ac-9d7554f67c3e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "includes",
          "library": "CirrusLibString",
          "params": {
            "mainString": {
              "datatype": "text",
              "scope": "fixed",
              "value": "GROWTH_LIQ_NO_ROLL|GROWTH_LIQ_W_ROLL"
            },
            "subString": {
              "datatype": "boolean",
              "name": "targetType",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "promoteRow",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "f87a7571-104e-4380-be07-8ee952a2530d",
        "includeElse": true,
        "isCommented": false,
        "main": "8191cb6f-cf1d-4c92-8d7a-d3447a7f2daa",
        "test": {
          "datatype": "\u003cany\u003e",
          "name": "hasChildren",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "30adfbf2-5981-4524-bdc2-037c94e26ff7",
        "includeElse": false,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "promoteRow",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4d746367-9353-402e-9eba-7eebaabbbb34",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createEmptyObject",
          "library": "CirrusLibObject",
          "params": {},
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "targetObject",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "61eea872-ebd3-458d-81a2-84aadc8d681d",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "input_properties",
            "scope": "local"
          },
          "callback": {
            "function": "copyObjectAttribute",
            "library": "$interactions$",
            "params": {
              "input_attribute": {
                "datatype": "object",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              },
              "input_inObject": {
                "datatype": "object",
                "name": "input_object",
                "scope": "local"
              },
              "input_outObject": {
                "datatype": "object",
                "name": "targetObject",
                "scope": "local"
              }
            }
          }
        }
      },
      {
        "action": "execfunc",
        "function": "push",
        "id": "01472f86-aa02-4818-9ba1-40ad3643e28b",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "input_outputArray",
            "scope": "local"
          },
          "value": {
            "datatype": "object",
            "name": "targetObject",
            "scope": "local"
          }
        },
        "returnType": "numeric"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "a48290a7-defa-49d0-8439-3636d5e12d9b",
        "includeElse": false,
        "isCommented": false,
        "main": "30adfbf2-5981-4524-bdc2-037c94e26ff7",
        "test": {
          "datatype": "boolean",
          "name": "promoteRow",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "queryHierarchyData": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_segment"
      },
      {
        "datatype": "text array",
        "name": "input_outArray"
      },
      {
        "datatype": "text array",
        "name": "input_hierarchyData"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "b6d33d73-a8be-4992-b571-da731a8b2cf7",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "segmentFilter"
            },
            "object": {
              "datatype": "text",
              "name": "input_segment",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "segmentFilter",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7a0fb1d9-ffc0-4a87-a7e2-22802e33e904",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "key"
            },
            "object": {
              "datatype": "text",
              "name": "input_segment",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "segmentKey",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4981246a-22a4-401d-bf0f-d03463d334c7",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "hierarchy"
            },
            "object": {
              "datatype": "text",
              "name": "input_segment",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "hierarchy",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a134ca96-6ba2-44e4-979d-8bb7d179c058",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "hasChildren,members,targetVar,targetType,segmentFilter,allocationType,allocationMethod"
        },
        "variable": {
          "datatype": "text",
          "name": "attributes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "418d97bf-b580-43c0-8c68-f407cf592f21",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "split",
          "library": "CirrusLibString",
          "params": {
            "separator": {
              "datatype": "text",
              "scope": "fixed",
              "value": ","
            },
            "string": {
              "datatype": "text",
              "name": "attributes",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "attributesArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "79fe7b3c-75b6-4c6f-8226-d70a31c2ce4c",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "copyObject",
          "library": "$interactions$",
          "params": {
            "input_object": {
              "datatype": "text",
              "name": "input_segment",
              "scope": "local"
            },
            "input_properties": {
              "datatype": "text array",
              "name": "attributesArray",
              "scope": "local"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "newRow",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "8b31dc93-00f4-4d68-95b2-bae36102d7e3",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "segment"
          },
          "object": {
            "datatype": "object",
            "name": "newRow",
            "scope": "local"
          },
          "value": {
            "scope": "fixed",
            "value": "  "
          }
        },
        "returnType": "object"
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "e1843132-2239-4031-a2b7-d679663da9e4",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "isLeaf"
          },
          "object": {
            "datatype": "object",
            "name": "newRow",
            "scope": "local"
          },
          "value": {
            "scope": "fixed",
            "value": true
          }
        },
        "returnType": "object"
      },
      {
        "action": "execfunc",
        "function": "push",
        "id": "f1b33b61-65a6-4eef-b44f-a7ea9f2c9231",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "attributesArray",
            "scope": "local"
          },
          "value": {
            "datatype": "text",
            "scope": "fixed",
            "value": "segment"
          }
        },
        "returnType": "numeric"
      },
      {
        "action": "execfunc",
        "function": "push",
        "id": "7142fdaf-cf35-4a06-bd52-f418739cbc2d",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "attributesArray",
            "scope": "local"
          },
          "value": {
            "datatype": "text",
            "scope": "fixed",
            "value": "isLeaf"
          }
        },
        "returnType": "numeric"
      },
      {
        "action": "addComment",
        "commentStep": "filter hierarchy data with segment filter",
        "id": "fd0edb8d-e7b6-44cc-88a3-1d5d3af37438",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "4b9faf83-180e-4302-a8be-c9081bebc3ba",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filterHierarchyData",
          "library": "$interactions$",
          "params": {
            "input_hierarchyData": {
              "datatype": "text array",
              "name": "input_hierarchyData",
              "scope": "local"
            },
            "input_object": {
              "datatype": "text",
              "name": "input_segment",
              "scope": "local"
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "filteredRows",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "copy primary key attributes from the result",
        "id": "ff00b80d-f725-4520-8288-fcb00c589b42",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "8b9df03d-dc5b-4a43-aaf2-8d4e14f04a17",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "object array",
              "name": "filteredRows",
              "scope": "local"
            },
            "callback": {
              "function": "copyObject",
              "library": "$interactions$",
              "params": {
                "input_object": {
                  "datatype": "object",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                },
                "input_properties": {
                  "datatype": "text array",
                  "name": "selectedPrimaryKeyColumns",
                  "scope": "global"
                }
              },
              "returnType": "object"
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "filteredRowsCopy",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "merge segment row attributes",
        "id": "c94427be-357b-4357-b873-9b0523722e1a",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "5cdd80c5-2e70-4db4-876b-d32a184f55ac",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "object array",
              "name": "filteredRows",
              "scope": "local"
            },
            "callback": {
              "function": "copyObject",
              "library": "$interactions$",
              "params": {
                "input_object": {
                  "datatype": "object",
                  "name": "newRow",
                  "scope": "local"
                },
                "input_properties": {
                  "datatype": "text array",
                  "name": "attributesArray",
                  "scope": "local"
                },
                "input_targetObject": {
                  "datatype": "object",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              },
              "returnType": "object"
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "filteredRowsCopy",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "add key and hierarchy attibute",
        "id": "f01ee937-54cb-48a6-88b9-ac9350faf801",
        "isCommented": false
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "f9e36092-c11f-4c8b-8264-e9a6a1ba2fc5",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "object array",
            "name": "filteredRowsCopy",
            "scope": "local"
          },
          "callback": {
            "function": "addLeafRowKey",
            "library": "$interactions$",
            "params": {
              "input_hierarchy": {
                "name": "hierarchy",
                "scope": "local"
              },
              "input_object": {
                "datatype": "object",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              }
            }
          }
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "9b4baa35-0b6e-4e98-854a-75fbb4c2c27b",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "object array",
            "name": "filteredRowsCopy",
            "scope": "local"
          },
          "callback": {
            "function": "push",
            "library": "CirrusLibArray",
            "params": {
              "array": {
                "datatype": "text array",
                "name": "input_outArray",
                "scope": "local"
              },
              "value": {
                "datatype": "object",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              }
            },
            "returnType": "numeric"
          }
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setDefaultName": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_value"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "8f16928d-f7cd-468b-b70f-a9bd200b67ca",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "toBoolean",
          "library": "CirrusLibBoolean",
          "params": {
            "value": {
              "datatype": "text",
              "name": "name",
              "objectType": "RuleSet",
              "scope": "field",
              "set-field": "name",
              "target": "$self$"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isNameSet",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7456feb8-1286-4ace-b01d-aa941a2e510e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "isNameSet",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isNameSet",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "6c15e3e2-1a54-424b-ad63-2f9e76cd826d",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isNameSet",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "1ea1c463-a984-4034-9730-423d9ca4c004",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getLocalisedObjectType",
          "library": "$interactions$",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "objectType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "87853f6d-4274-4e63-ac9c-763776cce1ed",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "objectType",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": ": "
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "name_str",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "ed0d51a2-92ce-47c0-b511-0a7a20662e17",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "name_str",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "name": "input_value",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "name_readonly",
          "scope": "data",
          "target": "$self$"
        }
      },
      {
        "action": "setvar",
        "id": "70eff02a-536d-44cb-ba69-436d207fe667",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "text",
          "name": "input_value",
          "scope": "local"
        },
        "variable": {
          "datatype": "text",
          "name": "name",
          "objectType": "RuleSet",
          "scope": "field",
          "set-field": "name",
          "target": "$self$"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "b84c01a7-b764-4549-95c1-6ccdd717b0d5",
        "isCommented": false,
        "main": "6c15e3e2-1a54-424b-ad63-2f9e76cd826d",
        "test": {
          "datatype": "boolean",
          "name": "isNameSet",
          "scope": "local"
        }
      }
    ],
    "sasProvided": true
  },
  "setGlobalVariables": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "497a4ba2-f7ad-4855-9b89-c118a226484a",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": ""
        },
        "variable": {
          "datatype": "text",
          "name": "selectedBEPKey",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "bd7b6aa7-8bfc-4f87-a3f7-bfb47535d33d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "setNull",
          "library": "CirrusLibGeneral",
          "params": {},
          "returnType": "\u003cIncoming\u003e"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedBEPObject",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "d8eebcec-3506-4b1e-a130-3c55895a060f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewObjectArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "selectedBEPDataArray",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "01b064a8-a4a9-4dd9-84b1-f91d997a73d1",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "setNull",
          "library": "CirrusLibGeneral",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedPlanningData",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "32719bae-5be3-47da-bbab-d695f204d801",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "setNull",
          "library": "CirrusLibGeneral",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedDataDefinition",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "ed70823c-e7fe-45c8-909e-c55522d4637b",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": false
        },
        "variable": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "144d9ce4-35f5-42eb-8132-e23d569992a0",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": false
        },
        "variable": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "ad14c091-5fcc-411e-b1c5-8016d2efde76",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": false
        },
        "variable": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setGlobalVariablesFromBEP": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_addedNow"
      },
      {
        "datatype": "text array",
        "name": "input_addedEarlier"
      },
      {
        "datatype": "text array",
        "name": "input_removed"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "b8f85311-3bc7-49dc-be1a-91e07d73bfdc",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getCurrentObjectKey",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "key",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "8f5c2cef-0dc2-461e-89f9-a786e7427e25",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewObjectArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "linkedBEPs",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a6dc9b95-eb56-4b4a-81da-112b0c0b2783",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "loadLinkInstances",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "added": {
              "datatype": "text array",
              "name": "input_addedNow",
              "scope": "local"
            },
            "linkTypeId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocationScheme_bep"
            },
            "linkTypeSSC": {
              "datatype": "text",
              "scope": "fixed",
              "value": "RCC"
            },
            "linkedToKey": {
              "datatype": "text",
              "name": "key",
              "scope": "local"
            },
            "linkedToSchemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "AllocationScheme"
            },
            "schemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "BusinessEvolutionPlan"
            },
            "side": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 2
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedBEPs",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a2076ae6-acb5-41d5-bc86-1d5987a90fd7",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "hasAnyItems",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedBEPs",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "hasLinkedBEP",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "c53afeb9-522a-47a1-bfcf-0a3c62a08017",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "hasLinkedBEP",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "be779c85-0a4f-45d7-b34b-c606afe78165",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text array",
              "name": "input_addedNow",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "hasNoAddedNow",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "76b805c0-ac92-4ac5-8e46-f7bb282160a5",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "hasNoAddedNow",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9be46bbb-74db-4418-98a5-52ab621b5da9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedBEPs",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedBEPObject",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "6a01695b-f1bf-43be-80f8-9c5aa4f1cb9b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "key"
            },
            "object": {
              "datatype": "text",
              "name": "selectedBEPObject",
              "scope": "global"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "selectedBEPKey",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "48f376d4-cce9-4657-8831-8a33b5e4bf24",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "76b805c0-ac92-4ac5-8e46-f7bb282160a5",
        "test": {
          "datatype": "boolean",
          "name": "hasNoAddedNow",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "37eb4d10-07b0-4e7c-a595-d745893edbe8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_addedNow",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedBEPKey",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "0cf12a33-dbee-47e1-b3d3-b8c5f785e427",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedBEPs",
              "scope": "local"
            },
            "operator": {
              "datatype": "enum",
              "scope": "fixed",
              "value": "eq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "key"
            },
            "referenceValue": {
              "datatype": "text",
              "name": "selectedBEPKey",
              "scope": "global"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "filteredLinkedBEPs",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9e50ccc6-03e4-4ebf-8c4b-d302c0e29676",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "filteredLinkedBEPs",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedBEPObject",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "3388e430-c981-4e8e-9669-9c2093c9da97",
        "includeElse": true,
        "isCommented": false,
        "main": "76b805c0-ac92-4ac5-8e46-f7bb282160a5",
        "test": {
          "datatype": "boolean",
          "name": "hasNoAddedNow",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9026e8f7-20fc-4963-9381-4e387cad855f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "initType"
            },
            "object": {
              "datatype": "text",
              "name": "selectedBEPObject",
              "scope": "global"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "initType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "549b297e-6cd4-4ab4-af7b-cd862873e7e5",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "scope": "fixed",
              "value": "SINGLE"
            },
            "string2": {
              "datatype": "boolean",
              "name": "initType",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "a8fb75b6-e599-4e06-a5cf-d084b19a2b83",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "scope": "fixed",
              "value": "MULTI"
            },
            "string2": {
              "datatype": "boolean",
              "name": "initType",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "cbb02525-5f28-47fd-bd0d-9605d547b8be",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "bepData"
            },
            "object": {
              "datatype": "text",
              "name": "selectedBEPObject",
              "scope": "global"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "bepData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "2fa4d868-b64a-47ed-8fbc-6e1c2f8defd3",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "data"
            },
            "object": {
              "datatype": "object array",
              "name": "bepData",
              "scope": "local"
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "selectedBEPDataArray",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "7ec2ef54-b62e-4dd7-a7e4-937f007afa4e",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "53c2181c-7ed2-4aa2-85e3-f9f36ee73f73",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "loadLinkInstances",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "linkTypeId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "businessEvolutionPlan_hierarchyData"
            },
            "linkTypeSSC": {
              "datatype": "text",
              "scope": "fixed",
              "value": "RCC"
            },
            "linkedToKey": {
              "datatype": "text",
              "name": "selectedBEPKey",
              "scope": "global"
            },
            "linkedToSchemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "BusinessEvolutionPlan"
            },
            "schemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "AnalysisData"
            },
            "side": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 2
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedPlanningData",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "86f13cd9-eb87-470c-9ad4-faf93e00867a",
        "isCommented": false,
        "main": "7ec2ef54-b62e-4dd7-a7e4-937f007afa4e",
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "be69320f-de45-4fe1-be70-19239ab81934",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "7db1bdc0-4113-4ba4-b3ff-0fe5e9f595b3",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "loadLinkInstances",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "linkTypeId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "businessEvolutionPlan_planningData"
            },
            "linkTypeSSC": {
              "datatype": "text",
              "scope": "fixed",
              "value": "RCC"
            },
            "linkedToKey": {
              "datatype": "text",
              "name": "selectedBEPKey",
              "scope": "global"
            },
            "linkedToSchemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "BusinessEvolutionPlan"
            },
            "schemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "AnalysisData"
            },
            "side": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 2
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedPlanningData",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "c4fed747-1bfa-464e-9b33-1dc6d416e60f",
        "isCommented": false,
        "main": "be69320f-de45-4fe1-be70-19239ab81934",
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "59b6d951-275f-4923-a07f-8eeccef0c818",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "size",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedPlanningData",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "planningDataItemsCount",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "cc3e0cbf-2878-4783-be61-f813e21f6056",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "eq",
          "library": "CirrusLibMath",
          "params": {
            "number1": {
              "datatype": "numeric",
              "name": "planningDataItemsCount",
              "scope": "local"
            },
            "number2": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 1
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "dc75ec1a-b443-4c81-8a85-edb61de7c8d6",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "de8a3ec8-f066-4097-9137-336b9d74286e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedPlanningData",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedPlanningData",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "a45a2088-b175-43d2-b7bc-36764e70f098",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "key"
            },
            "object": {
              "datatype": "text",
              "name": "selectedPlanningData",
              "scope": "global"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "planningDataKey",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "44ffcf37-8a56-41d7-8a01-15d79bd86a2e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "loadLinkInstances",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "linkTypeId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "analysisData_dataDefinition"
            },
            "linkTypeSSC": {
              "datatype": "text",
              "scope": "fixed",
              "value": "RCC"
            },
            "linkedToKey": {
              "name": "planningDataKey",
              "scope": "local"
            },
            "linkedToSchemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "AnalysisData"
            },
            "schemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "DataDefinition"
            },
            "side": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 2
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedDataDefinitions",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "8a10a2df-fa2f-4d0d-8491-716ee23e16d3",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "size",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedDataDefinitions",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "dataDefinitionItemsCount",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4609757d-ad3d-4d75-83d1-a0a685bb4aec",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "eq",
          "library": "CirrusLibMath",
          "params": {
            "number1": {
              "datatype": "numeric",
              "name": "dataDefinitionItemsCount",
              "scope": "local"
            },
            "number2": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 1
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "acc53420-172b-465e-888c-e9dc13e3b1e2",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "fe32ff37-a96f-4726-8653-ff25084d6a2e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedDataDefinitions",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedDataDefinition",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "05a46e09-7b41-4b88-9730-72de07a4642f",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "acc53420-172b-465e-888c-e9dc13e3b1e2",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "a9cb0989-72e9-4d60-9238-2acd944a9df2",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "setNull",
          "library": "CirrusLibGeneral",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedDataDefinition",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "5dc698ef-8f1f-4c07-8169-ba71ceaf5cdf",
        "includeElse": true,
        "isCommented": false,
        "main": "acc53420-172b-465e-888c-e9dc13e3b1e2",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "317754f8-a753-4273-9b9d-38ff59cf6285",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "dc75ec1a-b443-4c81-8a85-edb61de7c8d6",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "46ad4675-ea6f-43d6-949c-e4671bb6f249",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "setNull",
          "library": "CirrusLibGeneral",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "selectedPlanningData",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "594f0962-6635-4767-861e-c562186be031",
        "includeElse": true,
        "isCommented": false,
        "main": "dc75ec1a-b443-4c81-8a85-edb61de7c8d6",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "3d45a33c-be52-4a8b-b328-e047526d5fe5",
        "isCommented": false,
        "main": "c53afeb9-522a-47a1-bfcf-0a3c62a08017",
        "test": {
          "datatype": "boolean",
          "name": "hasLinkedBEP",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setGlobalVariablesFromDD": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "c3b5b867-df4b-49dc-bf3c-9295b6d70818",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text",
              "name": "selectedDataDefinition",
              "scope": "global"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDataDefinitionNotSelected",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "71d962a5-4fdc-4e97-96de-3db14a9f2639",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isDataDefinitionNotSelected",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "605c8f98-c9e3-4b3a-a4d9-44aff5f250a9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewObjectArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "selectedPrimaryKeyColumns",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "5978bbb7-1dd7-4354-9e03-439ec264f473",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewObjectArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "selectedSegmentationColumns",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "92cfb30c-b8c8-42bf-9b7b-55dce34e5b9a",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "71d962a5-4fdc-4e97-96de-3db14a9f2639",
        "test": {
          "datatype": "boolean",
          "name": "isDataDefinitionNotSelected",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "12ae3aeb-040d-4f00-87b8-cbdfa111ac5d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "columnInfo"
            },
            "object": {
              "datatype": "text",
              "name": "selectedDataDefinition",
              "scope": "global"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "columnInfo",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7274ef6d-eb45-478c-8e17-5a1091e66218",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "columnInfo",
              "scope": "local"
            },
            "operator": {
              "datatype": "enum",
              "scope": "fixed",
              "value": "eq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "primaryKeyFlag"
            },
            "referenceValue": {
              "scope": "fixed",
              "value": true
            }
          },
          "returnType": "\u003cIncoming\u003e array"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array",
          "name": "primaryKeyColumns",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "d1526126-686a-496c-98ba-a249cd8ee71b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "primaryKeyColumns",
              "scope": "local"
            },
            "callback": {
              "function": "get",
              "library": "CirrusLibObject",
              "params": {
                "name": {
                  "datatype": "text",
                  "scope": "fixed",
                  "value": "name"
                },
                "object": {
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              },
              "returnType": "\u003cany\u003e"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "text array",
          "name": "selectedPrimaryKeyColumns",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "a91d0e70-2bdd-4a4d-8e11-b0bcd8b664a9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "\u003cOutgoing\u003e array",
              "name": "selectedPrimaryKeyColumns",
              "scope": "global"
            },
            "callback": {
              "function": "lowercase",
              "library": "CirrusLibString",
              "params": {
                "string": {
                  "datatype": "\u003cOutgoing\u003e array",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              },
              "returnType": "text"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "text array",
          "name": "selectedPrimaryKeyColumns",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "8828c3d6-28b3-4af1-9fb8-aaf8d7b4ea13",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "columnInfo",
              "scope": "local"
            },
            "operator": {
              "datatype": "enum",
              "scope": "fixed",
              "value": "eq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "segmentationFlag"
            },
            "referenceValue": {
              "scope": "fixed",
              "value": true
            }
          },
          "returnType": "\u003cIncoming\u003e array"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array",
          "name": "segmentationColumns",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "e91044fe-541e-4731-8ff1-99c3307e6a01",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "segmentationColumns",
              "scope": "local"
            },
            "callback": {
              "function": "get",
              "library": "CirrusLibObject",
              "params": {
                "name": {
                  "datatype": "text",
                  "scope": "fixed",
                  "value": "name"
                },
                "object": {
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              },
              "returnType": "\u003cany\u003e"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "text array",
          "name": "selectedSegmentationColumns",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "618ea35c-ba6e-463d-bebd-04e61e92c331",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "selectedSegmentationColumns",
              "scope": "global"
            },
            "callback": {
              "function": "lowercase",
              "library": "CirrusLibString",
              "params": {
                "string": {
                  "datatype": "\u003cOutgoing\u003e array",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              },
              "returnType": "text"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "selectedSegmentationColumns",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "db63a82e-3b7a-4240-a556-324d5587aba0",
        "includeElse": true,
        "isCommented": false,
        "main": "71d962a5-4fdc-4e97-96de-3db14a9f2639",
        "test": {
          "datatype": "boolean",
          "name": "isDataDefinitionNotSelected",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setLayout": {
    "inputs": [],
    "logic": [
      {
        "action": "ifelse",
        "id": "e7629cc1-b04e-49b6-9c73-6c9eaf3c8ca5",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "e3857314-2352-4119-ab70-9ece584d3daa",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "initType"
            },
            "object": {
              "datatype": "text",
              "name": "selectedBEPObject",
              "scope": "global"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "layout",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "5f0ac064-27c2-4262-aac4-f1c720df787e",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "\u003cany\u003e",
            "name": "layout",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "details_container"
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "ef779efe-97ee-413f-8be4-7f60c4f841c9",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "\u003cany\u003e",
            "name": "layout",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "ModelGroupableContainer"
      },
      {
        "action": "ifelse",
        "id": "10a92c9d-dc6a-4062-80ee-fe059fc2a349",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "1fbf4ca6-ff80-413a-a617-038f904337c0",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToArray",
          "library": "CirrusLibArray",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "[\"tabWeights\"]"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "hiddenTabs",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "comment": "Sets the model options to only show models where modelType is ALLOCATION",
        "function": "setModelOptions",
        "id": "8f3b2b39-6747-4300-bc37-fd561abdbc1e",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "7ce000bd-231d-445b-b822-11f869eb5895",
        "isCommented": false,
        "main": "10a92c9d-dc6a-4062-80ee-fe059fc2a349",
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "496e2e31-39b7-4c13-8eac-2a6c9014052c",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "3a2c730b-8527-4893-a6f9-fab32e732689",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToArray",
          "library": "CirrusLibArray",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "[]"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "hiddenTabs",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "22205100-752e-418d-b5a8-13a48cd5f2d0",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewNumericArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "numeric array"
        },
        "variable": {
          "datatype": "numeric array",
          "name": "emptyArray",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setActiveTabIndices",
        "id": "99f76f86-09d6-40b9-90d8-254b2efacd44",
        "isCommented": false,
        "params": {
          "activeIndex": {
            "datatype": "numeric array",
            "name": "emptyArray",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "methodSpreadshetAccordion"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "d5d525d1-9660-4a49-a629-1a17d37c88ab",
        "isCommented": false,
        "main": "496e2e31-39b7-4c13-8eac-2a6c9014052c",
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "7a8f0b8b-042a-4b48-b3bf-12a362af3904",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "e7629cc1-b04e-49b6-9c73-6c9eaf3c8ca5",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "f25a59d5-ece6-4a62-8da3-e11f27a8578c",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "default"
          }
        },
        "scope": "currentPage",
        "widgetId": "details_container"
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "ad0fc3c2-3ae5-4cba-ac01-11abf698cb66",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "default"
          }
        },
        "scope": "currentPage",
        "widgetId": "ModelGroupableContainer"
      },
      {
        "action": "setvar",
        "id": "eea2a7a5-d0db-4454-ae66-fc081e88c764",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToArray",
          "library": "CirrusLibArray",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "[\"tabWeights\"]"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "hiddenTabs",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "f25cf508-756c-4104-8583-8e7cd986aea0",
        "includeElse": true,
        "isCommented": false,
        "main": "e7629cc1-b04e-49b6-9c73-6c9eaf3c8ca5",
        "test": {
          "datatype": "boolean",
          "name": "isBEPValid",
          "scope": "global"
        }
      },
      {
        "action": "setprop",
        "function": "setHiddenTabsById",
        "id": "3c779770-8056-469f-b50f-ad2a83ca916f",
        "isCommented": false,
        "params": {
          "hiddenTabIds": {
            "datatype": "text array",
            "name": "hiddenTabs",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "main_tabs"
      },
      {
        "action": "dispatch",
        "id": "af2223ad-1de2-409e-ab54-9963edcc3480",
        "isCommented": false
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setMethodDropdown": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "8addcad1-17a6-4847-b5c2-869fe65d9a20",
        "type": "calculated",
        "value": {
          "function": "createNewStringArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "schemeMethods",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a3bb055d-9334-4e33-a105-1fffceea815e",
        "type": "calculated",
        "value": {
          "function": "getNamedListOptionsAsValueLabelPair",
          "library": "CirrusLibCirrusObjectNamedList",
          "params": {
            "listName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocation_scheme_methods"
            }
          },
          "returnType": "text array array array array array array array array array array array array array"
        },
        "variable": {
          "datatype": "text array array array array array array array array array array array array array",
          "name": "schemeMethods",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "localizeValueLabelArray",
        "id": "9205c1c7-dfb8-4e5e-8a15-92d18eeb3b7d",
        "library": "CirrusLibLocalization",
        "params": {
          "array": {
            "datatype": "text array array array array array array array array array array array array array",
            "name": "schemeMethods",
            "scope": "local"
          },
          "i18nPrefix": {
            "datatype": "text",
            "scope": "fixed",
            "value": "AllocationScheme.schema.field.defaultAllocationMethod.options."
          },
          "i18nSuffix": {
            "datatype": "text",
            "scope": "fixed",
            "value": ".label"
          },
          "useLabelAsI18nProp": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          }
        },
        "returnType": "text array array array array array array array array array array array array array"
      },
      {
        "action": "setprop",
        "function": "filterValues",
        "id": "9a18c48c-cdeb-4a11-8825-e6714bf370e0",
        "params": {
          "filteredValues": {
            "datatype": "text array array array array array array array array array array array array array",
            "name": "schemeMethods",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "defaultAllocationMethod"
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setMethodSpreadsheetRowData": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_rowsArray"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "65327408-3c34-4c17-8108-c5cd2e5ceec1",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "key,segment,hierarchy,hasChildren,members,targetVar,targetType,segmentFilter,allocationType,allocationMethod"
        },
        "variable": {
          "datatype": "text",
          "name": "attributes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "238882b7-cfe5-4290-b6f0-f92156fd0ad3",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "split",
          "library": "CirrusLibString",
          "params": {
            "separator": {
              "datatype": "text",
              "scope": "fixed",
              "value": ","
            },
            "string": {
              "datatype": "text",
              "name": "attributes",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "attributesArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "1326459a-797d-40b0-9411-7230c9064fc0",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_rowsArray",
              "scope": "local"
            },
            "callback": {
              "function": "copyObject",
              "library": "$interactions$",
              "params": {
                "input_object": {
                  "datatype": "object",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                },
                "input_properties": {
                  "datatype": "text array",
                  "name": "attributesArray",
                  "scope": "local"
                }
              },
              "returnType": "object"
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "rowData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "01a77007-cf27-48a3-b234-5958f31f3f14",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "object array",
          "name": "rowData",
          "scope": "local"
        },
        "variable": {
          "datatype": "object array",
          "name": "knownMethodRowData",
          "scope": "global"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "b8f9ac3a-b256-4b6e-9b37-8056f1e4a34d",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "object array",
            "name": "rowData",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "MethodSpreadsheet"
      },
      {
        "action": "dispatch",
        "id": "fb054785-33b0-4601-ac21-6236451f6e07",
        "isCommented": false
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setModelOptions": {
    "inputs": [],
    "logic": [
      {
        "action": "setprop",
        "function": "setFilter",
        "id": "0a4ae493-075d-4265-b780-fe22ab6e29ea",
        "isCommented": false,
        "params": {
          "filter": {
            "datatype": "text",
            "scope": "fixed",
            "value": "in(execTypeCd,\"ALL\")"
          }
        },
        "widgetId": "Model"
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setReadOnlyFields": {
    "inputs": [],
    "logic": [
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "db7e48cd-c8d0-47fe-ba01-225d7735c353",
        "isCommented": false,
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "Cycle"
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "152420f3-0178-4272-bd44-1a673bdd6b72",
        "isCommented": false,
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "AnalysisRun"
      },
      {
        "action": "setprop",
        "comment": "prevent change since the only type currently supported for SINGLE is WEIGHT and for MULTI is MODEL",
        "function": "setReadOnly",
        "id": "94608350-3a8c-41b9-9e7b-1d16e965b938",
        "isCommented": false,
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "defaultAllocationType"
      }
    ],
    "sasProvided": true
  },
  "setRequiredFields": {
    "inputs": [],
    "logic": [
      {
        "action": "setprop",
        "function": "setRequired",
        "id": "e1b76625-6705-4665-9141-319fcffc6d43",
        "isCommented": false,
        "params": {
          "required": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "objectId"
      },
      {
        "action": "setprop",
        "function": "setRequired",
        "id": "135153f4-ec0e-4367-88a5-5e9e8be7ba40",
        "isCommented": false,
        "params": {
          "required": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "name"
      },
      {
        "action": "setprop",
        "function": "setRequired",
        "id": "bebcaf4b-de29-46a0-84a5-4c869c93292f",
        "isCommented": false,
        "params": {
          "required": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "BusinessEvolutionPlan"
      },
      {
        "action": "ifelse",
        "id": "518720b7-bd29-4416-9a61-689a2716e413",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setprop",
        "function": "setRequired",
        "id": "58fb9c10-f7c7-4d33-bb2f-e687e659a474",
        "isCommented": false,
        "params": {
          "required": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "Model"
      },
      {
        "action": "setprop",
        "function": "setRequired",
        "id": "ca71278e-2d66-4eec-a63e-26e1d293cbce",
        "isCommented": false,
        "params": {
          "required": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "targetVariable"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "01ca2670-0667-4cdb-b4dd-31e8b32a9d07",
        "isCommented": false,
        "main": "518720b7-bd29-4416-9a61-689a2716e413",
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "2cea6a60-4a6c-4147-9586-57c1a2a1975a",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setprop",
        "function": "setRequired",
        "id": "6b160c99-1316-4d0d-9fe5-172e07f4b805",
        "isCommented": false,
        "params": {
          "required": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          }
        },
        "scope": "currentPage",
        "widgetId": "Model"
      },
      {
        "action": "setprop",
        "function": "setRequired",
        "id": "bea98400-fe3c-4f4a-8ef8-ac37f5601024",
        "isCommented": false,
        "params": {
          "required": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          }
        },
        "scope": "currentPage",
        "widgetId": "targetVariable"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "d4f0e43e-5ba7-4f42-bf72-dd92e27380d8",
        "isCommented": false,
        "main": "2cea6a60-4a6c-4147-9586-57c1a2a1975a",
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      }
    ],
    "sasProvided": true
  },
  "setScreenReadOnly": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "4624868d-af97-40fc-a227-5cd90b4d98f2",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isLinkedToProductionCycle",
          "library": "$interactions$",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isLinkedToProductionCycle",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "5fe2ce26-ca65-48b9-bea5-3200219130de",
        "isCommented": false,
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "name": "isLinkedToProductionCycle",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "statusCd"
      },
      {
        "action": "setvar",
        "id": "f0f904df-7a4c-4ae3-aefb-f1b7fc30f1c1",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "statusCd",
              "objectType": "AllocationScheme",
              "scope": "field",
              "set-field": "statusCd",
              "target": "$self$"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "PROD"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isProd",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "db3f288c-45a5-4b1a-aebb-9d9825329758",
        "isCommented": false,
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "name": "isProd",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "main_tabs"
      },
      {
        "action": "addComment",
        "commentStep": "------------- user capabilities -------------",
        "id": "95b8cf59-583f-4e95-b711-1bd6250ff249",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "a97f1afb-45f1-417b-8a8c-d706cfbfd89d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getObjectCapabilities",
          "library": "CirrusLibCirrusObject",
          "params": {
            "objectType": {
              "datatype": "text",
              "scope": "fixed",
              "value": "AllocationScheme"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "userCapabilities",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "dbe88297-c94c-44ff-8c38-6ed9267e1ca5",
        "type": "calculated",
        "value": {
          "function": "contains",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "userCapabilities",
              "scope": "local"
            },
            "value": {
              "datatype": "text",
              "scope": "fixed",
              "value": "create"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "userCanCreate",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "5f06816f-8910-4dce-923a-b8bdceea6df8",
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "userCanCreate",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "userCannotCreate",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "face70f0-c5bd-4555-b99a-1512689c7fae",
        "type": "calculated",
        "value": {
          "function": "contains",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "userCapabilities",
              "scope": "local"
            },
            "value": {
              "datatype": "text",
              "scope": "fixed",
              "value": "update"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "userCanUpdate",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "be42518a-b1dd-4d2e-a9e6-fc9c1742b483",
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "userCanUpdate",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "userCannotUpdate",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c28d7249-840d-40e3-ae70-3bf77011e61a",
        "type": "calculated",
        "value": {
          "function": "isDraftObject",
          "library": "CirrusLibCirrusObject",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "ad6e6eaf-7658-4d2d-8536-86a7d6964dd3",
        "includeElse": true,
        "test": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "961de226-760b-47d5-af0d-267d224d1968",
        "includeElse": true,
        "iselse": true,
        "main": "ad6e6eaf-7658-4d2d-8536-86a7d6964dd3",
        "test": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "3ba62cd5-3155-48f8-9777-a141f69debb2",
        "test": {
          "datatype": "boolean",
          "name": "userCannotUpdate",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "7cc06cf1-2af6-4a5f-801d-8672ddc48806",
        "isCommented": false,
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "name": "userCannotCreate",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "main_tabs"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "86ff5309-6936-4114-a470-c69db3d9bb45",
        "main": "3ba62cd5-3155-48f8-9777-a141f69debb2",
        "test": {
          "datatype": "boolean",
          "name": "userCannotUpdate",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "1d72fc40-2f5c-410c-b95a-67178b65ef9f",
        "includeElse": true,
        "main": "ad6e6eaf-7658-4d2d-8536-86a7d6964dd3",
        "test": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      }
    ],
    "sasProvided": true
  },
  "setSpreadsheetsColumnMeta": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "0c8deade-fda5-4cd6-9d24-3a3e839d8312",
        "type": "calculated",
        "value": {
          "function": "createNewStringArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "schemeTypes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "24a3e303-33cd-407d-85af-74c0ee4b742a",
        "type": "calculated",
        "value": {
          "function": "createNewStringArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "schemeMethods",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "2f6cc766-2f27-4e38-bdc2-53853fca9f04",
        "type": "calculated",
        "value": {
          "function": "createNewStringArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "bepTargetTypes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "2f28fca2-84e6-4d06-8dda-e2e26998a738",
        "type": "calculated",
        "value": {
          "function": "getSchemeTypes",
          "library": "$interactions$",
          "params": {}
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array array array",
          "name": "schemeTypes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "6d107dde-374a-47aa-ab7d-e9383c3dffd9",
        "type": "calculated",
        "value": {
          "function": "getNamedListOptionsAsValueLabelPair",
          "library": "CirrusLibCirrusObjectNamedList",
          "params": {
            "listName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocation_scheme_methods"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "schemeMethods",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "fc5503cf-7b45-444c-bc32-b3a186a20370",
        "type": "calculated",
        "value": {
          "function": "getNamedListOptionsAsValueLabelPair",
          "library": "CirrusLibCirrusObjectNamedList",
          "params": {
            "listName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "bep_target_types"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "bepTargetTypes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "ae76d7bf-5863-4641-9bd8-c85e7cd52eb0",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getTargetVarChoices",
          "library": "$interactions$",
          "params": {},
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "targetVarChoices",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "comment": "Methods_columnMeta_20230606_9_tableeditable.json",
        "id": "c48371d6-3126-4919-a052-db3f001d10cc",
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "{    \"columns\": [          {             \"options\": {                \"quickSearch\": true,                \"sortProperty\": \"segment\",                \"id\": \"segment\",                \"label\": [                      \"\",                      \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.segment.title\"                ]             },             \"cellOptions\": {                \"readonly\": true             }          },          {             \"options\": {                 \"quickSearch\": true,                \"defaultVisible\": false,                \"id\": \"segmentFilter\",                \"label\": [                      \"\",                      \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.segmentFilter.title\"                ]             },             \"cellOptions\": {                \"readonly\": true             }          },          {             \"options\": {                \"columnType\": \"boolean\",                \"visible\": false,                \"defaultVisible\": false,                \"id\": \"hasChildren\",                \"label\": [                      \"\",                      \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.hasChildren.title\"                ]             }          },          {             \"options\": {                \"cellType\": \"dropdown\",                \"quickSearch\": true,                \"id\": \"targetVar\",                \"label\": [                      \"\",                      \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetVar.title\"                ]             },             \"cellOptions\": {                \"cellType\": \"dropdown\",                \"readonly\": true,                \"choices\": [                      {                         \"label\": \"BOOK_VALUE\",                         \"value\": \"BOOK_VALUE\"                      },                      {                         \"label\": \"MARKET_VALUE\",                         \"value\": \"MARKET_VALUE\"                      },                      {                         \"label\": \"PAR_VALUE\",                         \"value\": \"PAR_VALUE\"                      }                ]             }          },          {             \"options\": {                \"columnType\": \"dropdown\",                \"defaultVisible\": false,                \"id\": \"targetType\",                \"label\": [                      \"\",                      \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetType.title\"                ]             },             \"cellOptions\": {                \"cellType\": \"dropdown\",                \"readonly\": true,                \"choices\": [                      {                         \"label\": \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetType.options.RUNOFF.label\",                         \"value\": \"RUNOFF\"                      },                      {                         \"label\": \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetType.options.STATIC.label\",                         \"value\": \"STATIC\"                      },                      {                         \"label\": \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetType.options.GROWTH_LIQ_NO_ROLL.label\",                         \"value\": \"GROWTH_LIQ_NO_ROLL\"                      },                      {                         \"label\": \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetType.options.GROWTH_LIQ_W_ROLL.label\",                         \"value\": \"GROWTH_LIQ_W_ROLL\"                      }                ]             }          },          {             \"options\": {                \"id\": \"allocationType\",                \"label\": [                   \"\",                   \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.allocationType.title\"                ]             },             \"cellOptions\": {                \"readonly\": true             }          },          {             \"options\": {                \"id\": \"allocationMethod\",                \"label\": [                   \"\",                   \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.allocationMethod.title\"                ]             },             \"cellOptions\": {                \"readonly\": true             }          }    ],    \"table\": {          \"options\": {             \"fixedColumnCount\": 1,             \"isTree\": true,             \"numberOfExpandedLevels\": 5,             \"selectionMode\": \"None\"          },          \"columnOptions\": {             \"visible\": true,             \"autoResizable\": true,             \"defaultVisible\": true,             \"width\": \"150px\",             \"areLabelsLocalized\": true          },          \"cellOptions\": {             \"cellType\": \"string\",             \"readonly\": false,             \"suppressRowDragIndicator\": true          }    },    \"metaRules\": {          \"hasChildren\": [             {                \"cellOptions\": {                      \"cellType\": \"string\",                      \"readonly\": true                },                \"value\": true,                \"toColumn\": \"allocationMethod\"             },             {                \"cellOptions\": {                      \"cellType\": \"string\",                      \"readonly\": true                },                \"value\": true,                \"toColumn\": \"allocationType\"             }          ],          \"allocationType\": [             {                \"cellOptions\": {                   \"readonly\": false,                   \"cellType\": \"dropdown\",                   \"choices\": [                      {                         \"label\": \"Equal distribution\",                         \"value\": \"EQUAL\"                      }                   ]                },                \"value\": [\"WEIGHT\"],                \"toColumn\": \"allocationMethod\"             }          ],          \"targetType\": [             {                 \"cellOptions\": {                   \"readonly\": false,                   \"cellType\": \"dropdown\",                   \"choices\": [                      {                         \"label\": \"Weight-based\",                         \"value\": \"WEIGHT\"                      }                   ]                },                \"value\": [\"GROWTH_LIQ_NO_ROLL\",\"GROWTH_LIQ_W_ROLL\"],                \"toColumn\": \"allocationType\"             }          ]    } }"
        },
        "variable": {
          "datatype": "text",
          "name": "methodMetaText",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "14b0e134-5fba-4008-a874-b0d8f698bc5a",
        "type": "calculated",
        "value": {
          "function": "convertStringToObject",
          "library": "CirrusLibObject",
          "params": {
            "string": {
              "datatype": "text",
              "name": "methodMetaText",
              "scope": "local"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "methodMetaObject",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "756b8697-8993-42be-9cb8-5cfe53455045",
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "metaRules"
            },
            "object": {
              "datatype": "object",
              "name": "methodMetaObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "metarules",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "updateSpreadsheetMetarules",
        "id": "cf35fbf4-1056-403d-86ff-281524cff8dc",
        "library": "$interactions$",
        "params": {
          "input_choices": {
            "datatype": "\u003cIncoming\u003e array array array",
            "name": "schemeTypes",
            "scope": "local"
          },
          "input_column": {
            "datatype": "text",
            "scope": "fixed",
            "value": "targetType"
          },
          "input_metarules": {
            "datatype": "\u003cany\u003e",
            "name": "metarules",
            "scope": "local"
          },
          "input_toColumn": {
            "datatype": "text",
            "scope": "fixed",
            "value": "allocationType"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "updateSpreadsheetMetarules",
        "id": "e493404d-b976-452d-b58f-1780bf4c23c1",
        "library": "$interactions$",
        "params": {
          "input_choices": {
            "datatype": "\u003cOutgoing\u003e array",
            "name": "schemeMethods",
            "scope": "local"
          },
          "input_column": {
            "datatype": "text",
            "scope": "fixed",
            "value": "allocationType"
          },
          "input_metarules": {
            "datatype": "\u003cany\u003e",
            "name": "metarules",
            "scope": "local"
          },
          "input_toColumn": {
            "datatype": "text",
            "scope": "fixed",
            "value": "allocationMethod"
          }
        }
      },
      {
        "action": "setvar",
        "id": "00b98ff4-aff8-4811-9ea1-01cfc33c15e7",
        "type": "calculated",
        "value": {
          "function": "updateColumnMetadata",
          "library": "CirrusLibSpreadsheet",
          "params": {
            "columnId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "targetType"
            },
            "metadata": {
              "datatype": "object",
              "name": "methodMetaObject",
              "scope": "local"
            },
            "values": {
              "datatype": "\u003cOutgoing\u003e array",
              "name": "bepTargetTypes",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "methodMetaObject",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "445a9737-b2df-453f-9d36-b0a1bee66708",
        "type": "calculated",
        "value": {
          "function": "updateColumnMetadata",
          "library": "CirrusLibSpreadsheet",
          "params": {
            "columnId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "targetVar"
            },
            "metadata": {
              "datatype": "object",
              "name": "methodMetaObject",
              "scope": "local"
            },
            "values": {
              "datatype": "object array",
              "name": "targetVarChoices",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "methodMetaObject",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetColumnMetaData",
        "id": "6f792b4d-1403-4d78-87fa-c6d77965d044",
        "params": {
          "spreadsheetColumnMetaData": {
            "datatype": "\u003cOutgoing\u003e",
            "name": "methodMetaObject",
            "scope": "local"
          }
        },
        "widgetId": "MethodSpreadsheet"
      },
      {
        "action": "setvar",
        "comment": "Weights_columnMeta_20230606_9_isLeafMetarule.json",
        "id": "20cd676b-a0df-4b2b-b3e6-234546c91712",
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "{    \"columns\": [          {             \"options\": {                \"quickSearch\": true,                \"sortProperty\": \"segment\",                \"id\": \"segment\",                \"label\": [                      \"\",                      \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.segment.title\"                ]             },             \"cellOptions\": {                   \"readonly\": true             }          },          {             \"options\": {                 \"quickSearch\": true,                \"defaultVisible\": false,                \"id\": \"segmentFilter\",                \"label\": [                      \"\",                      \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.segmentFilter.title\"                ]             },             \"cellOptions\": {                   \"readonly\": true             }          },          {             \"options\": {                \"columnType\": \"boolean\",                \"visible\": false,                \"defaultVisible\": false,                \"id\": \"hasChildren\",                \"label\": [                      \"\",                      \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.hasChildren.title\"                ]             },             \"cellOptions\": {                   \"readonly\": true             }          },          {             \"options\": {                \"columnType\": \"boolean\",                \"visible\": false,                \"defaultVisible\": false,                \"id\": \"isLeaf\",                \"label\": [                      \"\",                      \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.isLeaf.title\"                ]             },             \"cellOptions\": {                \"readonly\": true          }       },          {             \"options\": {                \"cellType\": \"dropdown\",                \"defaultVisible\": false,                \"quickSearch\": true,                \"id\": \"targetVar\",                \"label\": [                      \"\",                      \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetVar.title\"                ]             },             \"cellOptions\": {                \"cellType\": \"dropdown\",                \"readonly\": true,                \"choices\": [                      {                         \"label\": \"BOOK_VALUE\",                         \"value\": \"BOOK_VALUE\"                      },                      {                         \"label\": \"MARKET_VALUE\",                         \"value\": \"MARKET_VALUE\"                      },                      {                         \"label\": \"PAR_VALUE\",                         \"value\": \"PAR_VALUE\"                      }                ]             }          },          {             \"options\": {                \"columnType\": \"dropdown\",                \"defaultVisible\": false,                \"id\": \"targetType\",                \"label\": [                      \"\",                      \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetType.title\"                ]             },             \"cellOptions\": {                \"cellType\": \"dropdown\",                \"readonly\": true,                \"choices\": [                      {                         \"label\": \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetType.options.RUNOFF.label\",                         \"value\": \"RUNOFF\"                      },                      {                         \"label\": \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetType.options.STATIC.label\",                         \"value\": \"STATIC\"                      },                      {                         \"label\": \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetType.options.GROWTH_LIQ_NO_ROLL.label\",                         \"value\": \"GROWTH_LIQ_NO_ROLL\"                      },                      {                         \"label\": \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.targetType.options.GROWTH_LIQ_W_ROLL.label\",                         \"value\": \"GROWTH_LIQ_W_ROLL\"                      }                ]             }          },          {             \"options\": {                \"id\": \"allocationType\",                \"label\": [                   \"\",                   \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.allocationType.title\"                ]             },             \"cellOptions\": {                \"readonly\": true             }          },          {             \"options\": {                \"id\": \"allocationMethod\",                \"label\": [                   \"\",                   \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.allocationMethod.title\"                ]             },             \"cellOptions\": {                \"readonly\": true             }          },          {             \"options\": {                \"id\": \"weightOverride\",                \"columnType\": \"number\",                \"label\": [                   \"\",                   \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.weightOverride.title\"                ]             },             \"cellOptions\": {                \"cellType\": \"number\",                \"readonly\": true             }          },          {             \"options\": {                \"id\": \"allocationWeight\",                \"columnType\": \"number\",                \"label\": [                   \"\",                   \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.allocationWeight.title\"                ]             },             \"cellOptions\": {                \"readonly\": true,                \"cellType\": \"number\"             }          },          {             \"options\": {                \"defaultVisible\": false,                \"id\": \"defaultWeight\",                \"columnType\": \"number\",                \"label\": [                   \"\",                   \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.defaultWeight.title\"                ]             },             \"cellOptions\": {                \"readonly\": true,                \"cellType\": \"number\"             }          },          {             \"options\": {                \"defaultVisible\": false,                \"id\": \"segmentWeight\",                \"columnType\": \"number\",                \"label\": [                   \"\",                   \"AllocationScheme.library.label.base.HierarchySpreadsheetWidget.WeightSpreadsheet.segmentWeight.title\"                ]             },             \"cellOptions\": {                \"readonly\": true,                \"cellType\": \"number\"             }          }    ],    \"table\": {          \"options\": {             \"fixedColumnCount\": 1,             \"isTree\": true,             \"numberOfExpandedLevels\": 5,             \"selectionMode\": \"None\"          },          \"columnOptions\": {             \"visible\": true,             \"autoResizable\": true,             \"defaultVisible\": true,             \"width\": \"150px\",             \"areLabelsLocalized\": true          },          \"cellOptions\": {             \"cellType\": \"string\",             \"readonly\": false,             \"suppressRowDragIndicator\": true          }    },    \"metaRules\": {          \"hasChildren\": [             {                \"cellOptions\": {                      \"cellType\": \"string\",                      \"readonly\": true                },                \"value\": true,                \"toColumn\": \"allocationMethod\"             },             {                \"cellOptions\": {                      \"cellType\": \"string\"                },                \"value\": true,                \"toColumn\": \"allocationType\"             }          ],          \"allocationType\": [             {                \"cellOptions\": {                   \"cellType\": \"dropdown\",                   \"readonly\": true,                   \"choices\": [                      {                         \"label\": \"Equal distribution\",                         \"value\": \"EQUAL\"                      }                   ]                },                \"value\": [\"WEIGHT\"],                \"toColumn\": \"allocationMethod\"             }          ],          \"targetType\": [             {                 \"cellOptions\": {                   \"cellType\": \"dropdown\",                   \"readonly\": true,                   \"choices\": [                      {                         \"label\": \"Weight-based\",                         \"value\": \"WEIGHT\"                      }                   ]                },                \"value\": [\"GROWTH_LIQ_NO_ROLL\",\"GROWTH_LIQ_W_ROLL\"],                \"toColumn\": \"allocationType\"             }          ],          \"isLeaf\": [             {                \"cellOptions\": {                      \"readonly\": false                },                \"value\": true,                \"toColumn\": \"weightOverride\"             }          ]    } }"
        },
        "variable": {
          "datatype": "text",
          "name": "weightMetaText",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "e35b14e1-3ad0-43cb-a636-f101941df5a5",
        "type": "calculated",
        "value": {
          "function": "convertStringToObject",
          "library": "CirrusLibObject",
          "params": {
            "string": {
              "datatype": "text",
              "name": "weightMetaText",
              "scope": "local"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "weightMetaObject",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "96a70cde-fca1-4ed4-b8ee-238762d4e246",
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "metaRules"
            },
            "object": {
              "datatype": "object",
              "name": "weightMetaObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "metarules",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "updateSpreadsheetMetarules",
        "id": "8b65a713-8da7-4566-b1e6-9ed88be7deed",
        "library": "$interactions$",
        "params": {
          "input_choices": {
            "datatype": "\u003cIncoming\u003e array array array",
            "name": "schemeTypes",
            "scope": "local"
          },
          "input_column": {
            "datatype": "text",
            "scope": "fixed",
            "value": "targetType"
          },
          "input_metarules": {
            "datatype": "\u003cany\u003e",
            "name": "metarules",
            "scope": "local"
          },
          "input_toColumn": {
            "datatype": "text",
            "scope": "fixed",
            "value": "allocationType"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "updateSpreadsheetMetarules",
        "id": "b0da0b08-953a-4ebd-8e44-6af84ebe5adb",
        "library": "$interactions$",
        "params": {
          "input_choices": {
            "datatype": "\u003cOutgoing\u003e array",
            "name": "schemeMethods",
            "scope": "local"
          },
          "input_column": {
            "datatype": "text",
            "scope": "fixed",
            "value": "allocationType"
          },
          "input_metarules": {
            "datatype": "\u003cany\u003e",
            "name": "metarules",
            "scope": "local"
          },
          "input_toColumn": {
            "datatype": "text",
            "scope": "fixed",
            "value": "allocationMethod"
          }
        }
      },
      {
        "action": "setvar",
        "id": "dba4930e-2d7a-416b-8dde-50a60f9f8084",
        "type": "calculated",
        "value": {
          "function": "updateColumnMetadata",
          "library": "CirrusLibSpreadsheet",
          "params": {
            "columnId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "targetType"
            },
            "metadata": {
              "datatype": "object",
              "name": "weightMetaObject",
              "scope": "local"
            },
            "values": {
              "datatype": "\u003cOutgoing\u003e array",
              "name": "bepTargetTypes",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "weightMetaObject",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "96460405-75ee-4e45-a8dc-ee3cb5df20e6",
        "type": "calculated",
        "value": {
          "function": "updateColumnMetadata",
          "library": "CirrusLibSpreadsheet",
          "params": {
            "columnId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "targetVar"
            },
            "metadata": {
              "datatype": "object",
              "name": "weightMetaObject",
              "scope": "local"
            },
            "values": {
              "datatype": "object array",
              "name": "targetVarChoices",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "weightMetaObject",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "aec0ca9d-12c2-4cfc-8a56-bbf0b212f833",
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "columnInfo"
            },
            "object": {
              "datatype": "text",
              "name": "selectedDataDefinition",
              "scope": "global"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "columnInfo",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "5121ba02-ce40-4fed-b68d-52e56adce184",
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "columns"
            },
            "object": {
              "datatype": "\u003cOutgoing\u003e",
              "name": "weightMetaObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "columns",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "2abf489e-26f4-44eb-8bba-2bb3c6d8904b",
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "\u003cany\u003e",
              "name": "columnInfo",
              "scope": "local"
            },
            "operator": {
              "datatype": "text",
              "scope": "fixed",
              "value": "eq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocation"
            },
            "referenceValue": {
              "datatype": "boolean",
              "scope": "fixed",
              "value": true
            }
          },
          "returnType": "\u003cIncoming\u003e array"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array",
          "name": "allocationColumns",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "24a8aef5-d4d3-4b94-80ad-4227d580422f",
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "\u003cIncoming\u003e array",
              "name": "allocationColumns",
              "scope": "local"
            },
            "callback": {
              "function": "createColumnDefinitionObject",
              "library": "$interactions$",
              "params": {
                "input_columnInfo": {
                  "datatype": "\u003cIncoming\u003e",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              }
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "columnsDefArray",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "04a88e28-e665-4f7e-9c16-f4b02391167b",
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "\u003cOutgoing\u003e array",
            "name": "columnsDefArray",
            "scope": "local"
          },
          "callback": {
            "function": "addColumnToSpreadsheet",
            "library": "$interactions$",
            "params": {
              "input_baseIndex": {
                "datatype": "numeric",
                "scope": "fixed",
                "value": 8
              },
              "input_columnInfo": {
                "datatype": "\u003cIncoming\u003e",
                "name": "loop_currentValue",
                "scope": "local"
              },
              "input_offsetIndex": {
                "datatype": "numeric",
                "name": "loop_index",
                "scope": "local"
              },
              "input_spreadsheetMeta": {
                "datatype": "\u003cany\u003e",
                "name": "columns",
                "scope": "local"
              }
            }
          }
        }
      },
      {
        "action": "setvar",
        "id": "e194aa68-e79a-43ec-96c3-c24457217ee9",
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "\u003cany\u003e",
              "name": "columnInfo",
              "scope": "local"
            },
            "operator": {
              "datatype": "text",
              "scope": "fixed",
              "value": "eq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "primaryKeyFlag"
            },
            "referenceValue": {
              "datatype": "boolean",
              "scope": "fixed",
              "value": true
            }
          },
          "returnType": "\u003cIncoming\u003e array"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array",
          "name": "primaryKeyColumns",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "e4b59e8b-a593-40c4-ae91-5af006e45c4f",
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "\u003cIncoming\u003e array",
              "name": "primaryKeyColumns",
              "scope": "local"
            },
            "callback": {
              "function": "createColumnDefinitionObject",
              "library": "$interactions$",
              "params": {
                "input_columnInfo": {
                  "datatype": "\u003cIncoming\u003e",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              }
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "columnsDefArray",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "e309a5a9-4aa2-4fab-a6f1-970fc6c24a99",
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "\u003cOutgoing\u003e array",
            "name": "columnsDefArray",
            "scope": "local"
          },
          "callback": {
            "function": "addColumnToSpreadsheet",
            "library": "$interactions$",
            "params": {
              "input_baseIndex": {
                "datatype": "numeric",
                "scope": "fixed",
                "value": 4
              },
              "input_columnInfo": {
                "datatype": "\u003cIncoming\u003e",
                "name": "loop_currentValue",
                "scope": "local"
              },
              "input_offsetIndex": {
                "datatype": "numeric",
                "name": "loop_index",
                "scope": "local"
              },
              "input_spreadsheetMeta": {
                "datatype": "\u003cany\u003e",
                "name": "columns",
                "scope": "local"
              }
            }
          }
        }
      },
      {
        "action": "setvar",
        "id": "c540b8b9-a55e-4f99-b28d-e305e228e3c0",
        "type": "variable",
        "value": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "weightMetaObject",
          "scope": "local"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "weightSpreadsheetMeta",
          "scope": "global"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetColumnMetaData",
        "id": "e022c129-f219-479e-baa1-f0293a662e15",
        "params": {
          "spreadsheetColumnMetaData": {
            "datatype": "\u003cOutgoing\u003e",
            "name": "weightMetaObject",
            "scope": "local"
          }
        },
        "widgetId": "WeightSpreadsheet"
      }
    ],
    "sasProvided": true
  },
  "setStatusDropdown": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "9b88cff9-2bc6-4e52-99df-6ce5fb900ea2",
        "type": "calculated",
        "value": {
          "function": "createNewStringArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "statuses",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "96637d38-ee61-4fd8-8e88-91d30fecc930",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getNamedListOptionsAsValueLabelPair",
          "library": "CirrusLibCirrusObjectNamedList",
          "params": {
            "listName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocation_scheme_statuses"
            }
          },
          "returnType": "text array array"
        },
        "variable": {
          "datatype": "text array array",
          "name": "statuses",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "localizeValueLabelArray",
        "id": "dbee3c14-3e87-4c5c-b232-9ca579e02d22",
        "library": "CirrusLibLocalization",
        "params": {
          "array": {
            "datatype": "text array array",
            "name": "statuses",
            "scope": "local"
          },
          "i18nPrefix": {
            "datatype": "text",
            "scope": "fixed",
            "value": "AllocationScheme.schema.field.statusCd.options."
          },
          "i18nSuffix": {
            "datatype": "text",
            "scope": "fixed",
            "value": ".label"
          },
          "useLabelAsI18nProp": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          }
        },
        "returnType": "text array array"
      },
      {
        "action": "setprop",
        "function": "filterValues",
        "id": "9a18c48c-cdeb-4a11-8825-e6714bf370e0",
        "params": {
          "filteredValues": {
            "datatype": "text array array",
            "name": "statuses",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "statusCd"
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setTargetVarDropdown": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "3e44d6ca-b9f2-4952-b505-93747994d1dc",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "targetVars"
            },
            "object": {
              "datatype": "text",
              "name": "selectedBEPObject",
              "scope": "global"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "targetVars",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "abbaea1a-6055-4ac4-8e8e-2ddc1236c72b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "data"
            },
            "object": {
              "name": "targetVars",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "choices",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "filterValues",
        "id": "40c4bf2e-1994-443c-acb1-2fc395e190ad",
        "isCommented": false,
        "params": {
          "filteredValues": {
            "datatype": "\u003cany\u003e",
            "name": "choices",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "targetVariable"
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setTypeDropdown": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "c2cff793-5c90-4082-be1e-c470f7707f81",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getSchemeTypes",
          "library": "$interactions$",
          "params": {},
          "returnType": "\u003cIncoming\u003e array array array"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array array array",
          "name": "schemeTypes",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "filterValues",
        "id": "9a18c48c-cdeb-4a11-8825-e6714bf370e0",
        "params": {
          "filteredValues": {
            "datatype": "text array array",
            "name": "schemeTypes",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "defaultAllocationType"
      }
    ],
    "sasProvided": true
  },
  "setWeightSpreadsheetRowData": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_rowData"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "2da097b9-f4bf-4494-a4fa-e255b1e31308",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "text array",
          "name": "input_rowData",
          "scope": "local"
        },
        "variable": {
          "datatype": "object array",
          "name": "rowData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c91bedee-e007-4360-bf88-5b96b15e9e3e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "object array",
              "name": "rowData",
              "scope": "local"
            },
            "operator": {
              "datatype": "enum",
              "scope": "fixed",
              "value": "eq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "hasChildren"
            },
            "referenceValue": {
              "datatype": "object",
              "scope": "fixed",
              "value": false
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "leafRows",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "794b1167-1abf-478c-a43c-f900a6dfa81f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewObjectArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "newRows",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "3f6af468-adbb-4b42-a4a3-b19984c721d9",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "object array",
            "name": "leafRows",
            "scope": "local"
          },
          "callback": {
            "function": "updateWeights",
            "library": "$interactions$",
            "params": {
              "input_segmentFilterRowObject": {
                "datatype": "object",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              },
              "input_weightRowsData": {
                "datatype": "text array",
                "name": "rowData",
                "scope": "local"
              }
            }
          }
        }
      },
      {
        "action": "setvar",
        "id": "0153f8ba-d02c-40a7-aa71-a7cb614fdb41",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToArray",
          "library": "CirrusLibArray",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "[{\"key\": \"   \", \"hierarchy\": [\"   \"], \"hasChildren\": true}]"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "emptyRowData",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "b8f9ac3a-b256-4b6e-9b37-8056f1e4a34d",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "\u003cOutgoing\u003e array",
            "name": "emptyRowData",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "WeightSpreadsheet"
      },
      {
        "action": "setvar",
        "comment": "Workaround for keeping the data for not rendered spreadsheet component.",
        "id": "a58d963d-eec8-477a-b120-d036d68db081",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "object array",
          "name": "rowData",
          "scope": "local"
        },
        "variable": {
          "datatype": "object array",
          "name": "lastKnowWeightRowData",
          "scope": "global"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "4b5a5848-067e-4a5f-9923-45d19c998128",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "object array",
            "name": "rowData",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "WeightSpreadsheet"
      },
      {
        "action": "dispatch",
        "id": "f2dbc059-939d-4549-9f5e-46cbc7274327",
        "isCommented": false
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "storeData": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "0bae849e-ae2c-4529-8a91-843cae08e31f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createEmptyObject",
          "library": "CirrusLibObject",
          "params": {},
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "emptyObject",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "19041d67-7c28-4435-94d0-e8e5afb34213",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "text",
              "name": "allocationData",
              "objectType": "AllocationScheme",
              "scope": "field",
              "set-field": "allocationData",
              "target": "$self$"
            },
            "arg2": {
              "name": "emptyObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "allocationData",
          "objectType": "AllocationScheme",
          "scope": "field",
          "set-field": "allocationData",
          "target": "$self$"
        }
      },
      {
        "action": "ifelse",
        "id": "6a408dc9-fcdc-4d13-ace8-645ea50ce0d5",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "05298a79-3976-498b-9954-f7b0ff1b4cde",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "rowState"
            },
            "object": {
              "datatype": "object",
              "name": "WeightSpreadsheet",
              "scope": "data",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "weightRowState",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "0f10fb82-bd4f-425b-bba0-8c842ec312af",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "\u003cany\u003e",
              "name": "weightRowState",
              "scope": "local"
            },
            "arg2": {
              "datatype": "object array",
              "name": "lastKnowWeightRowData",
              "scope": "global"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "weightRowState",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "50ed3879-07e2-48dd-9cd9-59c0e960adcf",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "data"
          },
          "object": {
            "datatype": "text",
            "name": "allocationData",
            "objectType": "AllocationScheme",
            "scope": "field",
            "set-field": "allocationData",
            "target": "$self$"
          },
          "value": {
            "name": "weightRowState",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "de106248-9dc1-43cb-bb51-d863d2bcb485",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "meta"
          },
          "object": {
            "datatype": "text",
            "name": "allocationData",
            "objectType": "AllocationScheme",
            "scope": "field",
            "set-field": "allocationData",
            "target": "$self$"
          },
          "value": {
            "datatype": "object",
            "name": "weightSpreadsheetMeta",
            "scope": "global"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "4df1455c-3df6-48a3-b4d2-0545dee3786b",
        "isCommented": false,
        "main": "6a408dc9-fcdc-4d13-ace8-645ea50ce0d5",
        "test": {
          "datatype": "boolean",
          "name": "isSingleInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "270289b1-cb56-40bb-8a6e-94d3dce0a2f7",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "execfunc",
        "function": "remove",
        "id": "69a3ed8c-2e96-4ef3-8ac0-2a009dc907da",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "data"
          },
          "object": {
            "datatype": "text",
            "name": "allocationData",
            "objectType": "AllocationScheme",
            "scope": "field",
            "set-field": "allocationData",
            "target": "$self$"
          }
        },
        "returnType": "text"
      },
      {
        "action": "execfunc",
        "function": "remove",
        "id": "06bcb799-d8ba-42dc-8b82-14c3441cbd98",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "meta"
          },
          "object": {
            "datatype": "text",
            "name": "allocationData",
            "objectType": "AllocationScheme",
            "scope": "field",
            "set-field": "allocationData",
            "target": "$self$"
          }
        },
        "returnType": "text"
      },
      {
        "action": "execfunc",
        "function": "updateModelParameters",
        "id": "b81ed3be-db15-41f7-8b8a-5725eea640f0",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "5d62a47e-7bdf-41e3-8ee2-ef00d5b79d4f",
        "isCommented": false,
        "main": "270289b1-cb56-40bb-8a6e-94d3dce0a2f7",
        "test": {
          "datatype": "boolean",
          "name": "isMultiInitBEP",
          "scope": "global"
        }
      },
      {
        "action": "dispatch",
        "id": "97b01f1d-d2ef-4c1b-89b0-e223773ea110",
        "isCommented": false
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "sumReducer": {
    "inputs": [
      {
        "datatype": "numeric",
        "name": "input_accumulator"
      },
      {
        "datatype": "text",
        "name": "input_object"
      },
      {
        "datatype": "text",
        "name": "input_attribute"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "6d0481f1-da45-4f1c-96fe-2896931bd912",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "has",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "name": "input_attribute",
              "scope": "local"
            },
            "object": {
              "datatype": "text",
              "name": "input_object",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "hasAttribute",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "51df5307-bc0f-4542-b3c6-a3f06118025c",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "hasAttribute",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "01f34e7b-2f1e-42ba-a11c-07b0286fd151",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "name": "input_attribute",
              "scope": "local"
            },
            "object": {
              "datatype": "text",
              "name": "input_object",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "value",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "95729b90-be9b-4d5e-ae93-876f9e516b17",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "add",
          "library": "CirrusLibMath",
          "params": {
            "from": {
              "datatype": "numeric",
              "name": "input_accumulator",
              "scope": "local"
            },
            "number": {
              "datatype": "numeric",
              "name": "value",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "value",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "8e2d21da-e270-4ec8-ad05-c055ea3c9092",
        "isCommented": false,
        "variable": {
          "datatype": "numeric",
          "name": "value",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "8068026b-ae1f-4ecf-a7f4-fa5fcc8ef266",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "51df5307-bc0f-4542-b3c6-a3f06118025c",
        "test": {
          "datatype": "boolean",
          "name": "hasAttribute",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "057a1dfd-79e3-4fff-a404-958787be9476",
        "isCommented": false,
        "variable": {
          "datatype": "numeric",
          "name": "input_accumulator",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "ad5282e1-7122-4d9d-b2e9-9d7bca3b6378",
        "includeElse": true,
        "isCommented": false,
        "main": "51df5307-bc0f-4542-b3c6-a3f06118025c",
        "test": {
          "datatype": "boolean",
          "name": "hasAttribute",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "updateModelParameters": {
    "inputs": [],
    "logic": [
      {
        "action": "execfunc",
        "function": "syncNestedEBPWithParent",
        "id": "cb779af0-f4f9-475d-abfc-ec7071188aa6",
        "isCommented": false,
        "library": "CirrusLibPageData",
        "params": {
          "parentPageId": {
            "datatype": "text",
            "scope": "fixed",
            "value": "DefaultModelParametersEBP"
          },
          "updateState": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "returnType": "object"
      },
      {
        "action": "setvar",
        "id": "81be536d-9a18-42c1-8d7c-54d47db032ef",
        "type": "calculated",
        "value": {
          "function": "getEmbeddedBuilderPageData",
          "library": "CirrusLibPageData",
          "params": {
            "fieldName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "DefaultModelParametersEBP"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "currentParameters",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "e6734f19-4578-46c9-8d0d-e48665fe3af1",
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "object",
              "name": "currentParameters",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "areParametersEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "7643dae6-f9fb-4b40-a7fc-c161e51bd33e",
        "includeElse": false,
        "test": {
          "datatype": "boolean",
          "name": "areParametersEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "dac28e54-c8d8-4756-ad47-0259a449ea8c",
        "type": "calculated",
        "value": {
          "function": "createEmptyObject",
          "library": "CirrusLibObject",
          "params": {},
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "currentParameters",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "c9ab3081-3a26-422c-9403-e2ea07525574",
        "includeElse": false,
        "main": "7643dae6-f9fb-4b40-a7fc-c161e51bd33e",
        "test": {
          "datatype": "boolean",
          "name": "areParametersEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "fa2fb5e7-2fea-436e-b57c-7784064a0bc2",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertEBPDataToPayload",
          "library": "CirrusLibPageData",
          "params": {
            "data": {
              "datatype": "object",
              "name": "currentParameters",
              "scope": "local"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "defaultModelParameters",
          "objectType": "AllocationScheme",
          "scope": "field",
          "set-field": "defaultModelParameters",
          "target": "$self$"
        }
      },
      {
        "action": "setvar",
        "id": "03af637e-adb2-4cf1-86a3-487bc9962e5a",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "object",
          "name": "currentParameters",
          "scope": "local"
        },
        "variable": {
          "datatype": "object",
          "name": "baselineParameters",
          "scope": "global"
        }
      }
    ],
    "sasProvided": true
  },
  "updateSpreadsheetMetarules": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_metarules"
      },
      {
        "datatype": "text",
        "name": "input_column"
      },
      {
        "datatype": "text",
        "name": "input_toColumn"
      },
      {
        "datatype": "text array",
        "name": "input_choices"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "21e6c9b2-0b54-44d3-8828-24ffa37a262e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "name": "input_column",
              "scope": "local"
            },
            "object": {
              "datatype": "text",
              "name": "input_metarules",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "metarule",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "6fe54f72-e2e4-41da-8344-c992adca1ddd",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "metarule",
              "scope": "local"
            },
            "operator": {
              "datatype": "enum",
              "scope": "fixed",
              "value": "eq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "toColumn"
            },
            "referenceValue": {
              "datatype": "text",
              "name": "input_toColumn",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "filteredMetarule",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "39a09973-5e74-4eb4-91e5-bbeca25aa4de",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "hasAnyItems",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "filteredMetarule",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "hasItems",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "5675efaa-8a67-4a39-9a55-1d21feeef925",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "hasItems",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "22931b3b-2e8a-4be0-9093-351dffd1ad1d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "filteredMetarule",
              "scope": "local"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "item0",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "0c616e90-4791-4cc2-9b40-ed997651a61e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "cellOptions"
            },
            "object": {
              "datatype": "text",
              "name": "item0",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "cellOptions",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "d88f5a3c-bb9a-46f4-8aea-72feb99366bd",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "choices"
          },
          "object": {
            "name": "cellOptions",
            "scope": "local"
          },
          "value": {
            "datatype": "text array",
            "name": "input_choices",
            "scope": "local"
          }
        },
        "returnType": "\u003cIncoming\u003e"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "335dda92-cd34-45b4-bec2-bfaa569c0f28",
        "isCommented": false,
        "main": "5675efaa-8a67-4a39-9a55-1d21feeef925",
        "test": {
          "datatype": "boolean",
          "name": "hasItems",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "updateWeights": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_weightRowsData"
      },
      {
        "datatype": "text",
        "name": "input_segmentFilterRowObject"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "05f8b080-c12b-4e2d-b714-9f8028cc6d22",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "segmentFilter"
            },
            "object": {
              "datatype": "text",
              "name": "input_segmentFilterRowObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "segmentFilter",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "50a4a6cf-5722-4873-8784-4212a1310fb5",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filterObjects",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_weightRowsData",
              "scope": "local"
            },
            "operator": {
              "datatype": "enum",
              "scope": "fixed",
              "value": "eq"
            },
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "segmentFilter"
            },
            "referenceValue": {
              "name": "segmentFilter",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "matchingRows",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "--- Reapply Methods ---",
        "id": "55f742de-bdb9-42f3-9f29-c4e243424e83",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "e0591569-35d1-4a5d-8a7c-f4cc92acd749",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocationType"
            },
            "object": {
              "datatype": "text",
              "name": "input_segmentFilterRowObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "allocationType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4507b388-d6a1-4f9f-acd2-1fb82a6760fa",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isEmpty",
          "library": "CirrusLibString",
          "params": {
            "string": {
              "name": "allocationType",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isAllocationTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "29e43df0-38c7-4516-b313-019bff538d00",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isAllocationTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "80365caa-a358-4fdc-81b2-00e0ce52dc94",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "matchingRows",
            "scope": "local"
          },
          "callback": {
            "function": "remove",
            "library": "CirrusLibObject",
            "params": {
              "name": {
                "datatype": "text",
                "scope": "fixed",
                "value": "allocationType"
              },
              "object": {
                "datatype": "text",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              }
            },
            "returnType": "text"
          }
        }
      },
      {
        "action": "ifelse",
        "id": "e74da32e-0928-40a1-9e62-5cd7e214cadc",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "29e43df0-38c7-4516-b313-019bff538d00",
        "test": {
          "datatype": "boolean",
          "name": "isAllocationTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "17b8c480-af91-4a7f-9da1-313e845648b0",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "matchingRows",
            "scope": "local"
          },
          "callback": {
            "function": "set",
            "library": "CirrusLibObject",
            "params": {
              "name": {
                "datatype": "text",
                "scope": "fixed",
                "value": "allocationType"
              },
              "object": {
                "datatype": "text",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              },
              "value": {
                "name": "allocationType",
                "scope": "local"
              }
            },
            "returnType": "text"
          }
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "65dc5b75-a5b3-4cf5-b8bf-a1260a012805",
        "includeElse": true,
        "isCommented": false,
        "main": "29e43df0-38c7-4516-b313-019bff538d00",
        "test": {
          "datatype": "boolean",
          "name": "isAllocationTypeEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "8c194e28-fd56-4fc1-86c8-580440600707",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocationMethod"
            },
            "object": {
              "datatype": "text",
              "name": "input_segmentFilterRowObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "allocationMethod",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "24fb5b86-6f94-4e04-a9b8-cb836aa21e7a",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isEmpty",
          "library": "CirrusLibString",
          "params": {
            "string": {
              "name": "allocationMethod",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isAllocationMethodEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "c7542574-5a1d-4c80-8a92-3de45d3e03f2",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isAllocationMethodEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "4f08c997-b1b2-48fb-852e-db93544d30bf",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "matchingRows",
            "scope": "local"
          },
          "callback": {
            "function": "remove",
            "library": "CirrusLibObject",
            "params": {
              "name": {
                "datatype": "text",
                "scope": "fixed",
                "value": "allocationMethod"
              },
              "object": {
                "datatype": "text",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              }
            },
            "returnType": "text"
          }
        }
      },
      {
        "action": "ifelse",
        "id": "b6a18ce1-792a-45df-ab19-d4ffb53ae6c7",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "c7542574-5a1d-4c80-8a92-3de45d3e03f2",
        "test": {
          "datatype": "boolean",
          "name": "isAllocationMethodEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "1de2a368-9b42-44a0-a4ad-575aed92899c",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "matchingRows",
            "scope": "local"
          },
          "callback": {
            "function": "set",
            "library": "CirrusLibObject",
            "params": {
              "name": {
                "datatype": "text",
                "scope": "fixed",
                "value": "allocationMethod"
              },
              "object": {
                "datatype": "text",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              },
              "value": {
                "name": "allocationMethod",
                "scope": "local"
              }
            },
            "returnType": "text"
          }
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "64e4e9e5-1bb4-4e01-b0d6-fe86c8ac17ce",
        "includeElse": true,
        "isCommented": false,
        "main": "c7542574-5a1d-4c80-8a92-3de45d3e03f2",
        "test": {
          "datatype": "boolean",
          "name": "isAllocationMethodEmpty",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "--- Reapply Weights ---",
        "id": "b08db05c-24d5-4458-9775-4f93c02e56ac",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "bbe276a3-9198-482f-8f2b-624467bf09da",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "size",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "matchingRows",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "numOfLeaves",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9fb82d38-540f-44fd-ba2a-4bccde657a1d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "numeric",
          "function": "subtract",
          "library": "CirrusLibMath",
          "params": {
            "from": {
              "datatype": "numeric",
              "name": "numOfLeaves",
              "scope": "local"
            },
            "number": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 1
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "numOfLeaves",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9ffbb521-6cfd-48f3-9d27-784327d58201",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "reduce",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "matchingRows",
              "scope": "local"
            },
            "callback": {
              "function": "sumReducer",
              "library": "$interactions$",
              "params": {
                "input_accumulator": {
                  "datatype": "numeric",
                  "label": "Accumulator",
                  "name": "loop_accumulator",
                  "scope": "local"
                },
                "input_attribute": {
                  "datatype": "text",
                  "scope": "fixed",
                  "value": "weightOverride"
                },
                "input_object": {
                  "datatype": "text",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              },
              "returnType": "numeric"
            },
            "initialValue": {
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "sumOverrideWeights",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "forEach",
        "id": "bc345ce9-c5f8-488d-8c07-bea9343f75bb",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "matchingRows",
            "scope": "local"
          },
          "callback": {
            "function": "updateWeightsRow",
            "library": "$interactions$",
            "params": {
              "input_leavesCount": {
                "datatype": "numeric",
                "name": "numOfLeaves",
                "scope": "local"
              },
              "input_overrideWeightsTotal": {
                "datatype": "numeric",
                "name": "sumOverrideWeights",
                "scope": "local"
              },
              "input_rowObject": {
                "datatype": "text",
                "label": "Current value",
                "name": "loop_currentValue",
                "scope": "local"
              }
            }
          }
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "updateWeightsRow": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_rowObject"
      },
      {
        "datatype": "numeric",
        "name": "input_leavesCount"
      },
      {
        "datatype": "numeric",
        "name": "input_overrideWeightsTotal"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "1d39d9d9-21d4-42d0-8a89-910368d80f91",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "isLeaf"
            },
            "object": {
              "datatype": "text",
              "name": "input_rowObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "isLeaf",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "db76fdb7-d582-441a-a547-d3fa396d8787",
        "isCommented": false,
        "test": {
          "datatype": "\u003cany\u003e",
          "name": "isLeaf",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "1596bc84-e940-4dbc-b633-82aeaa5dbbf7",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "allocationMethod"
            },
            "object": {
              "datatype": "text",
              "name": "input_rowObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "allocationMethod",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "32553be6-120b-4d17-b588-3d7665be17d2",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "name": "allocationMethod",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "EQUAL"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isSegmentMethod_EQUAL",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "f757f789-b23b-4aa8-a44f-119473d4c846",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isSegmentMethod_EQUAL",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3e8b6a5d-f5d3-48d4-9de8-866515ba3ee8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "quotient",
          "library": "CirrusLibMath",
          "params": {
            "number1": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 100
            },
            "number2": {
              "datatype": "numeric",
              "name": "input_leavesCount",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "segmentWeight",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "a0123434-36bd-40a0-91da-ea7adbfbd15c",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "segmentWeight"
          },
          "object": {
            "datatype": "text",
            "name": "input_rowObject",
            "scope": "local"
          },
          "value": {
            "datatype": "numeric",
            "name": "segmentWeight",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "id": "348ac2ee-2e3d-43e2-8bcd-f818b8de2c21",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "f757f789-b23b-4aa8-a44f-119473d4c846",
        "test": {
          "datatype": "boolean",
          "name": "isSegmentMethod_EQUAL",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "remove",
        "id": "35bbd645-9db2-49a5-b2d5-05930d53b02e",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "segmentWeight"
          },
          "object": {
            "datatype": "text",
            "name": "input_rowObject",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "0505aca7-9471-4c67-aad7-1273ba0f6804",
        "includeElse": true,
        "isCommented": false,
        "main": "f757f789-b23b-4aa8-a44f-119473d4c846",
        "test": {
          "datatype": "boolean",
          "name": "isSegmentMethod_EQUAL",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c6bb239d-fd32-4172-ace1-c2c2da3e4c09",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "defaultAllocationMethod",
              "objectType": "AllocationScheme",
              "scope": "field",
              "set-field": "defaultAllocationMethod",
              "target": "$self$"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "EQUAL"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDefaultMethod_EQUAL",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "32faf1e2-db2e-491b-8b9a-0cb79b34351c",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isDefaultMethod_EQUAL",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7a794095-b24b-4d4a-9de6-a9d5e447290b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "quotient",
          "library": "CirrusLibMath",
          "params": {
            "number1": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 100
            },
            "number2": {
              "datatype": "numeric",
              "name": "input_leavesCount",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "defaultWeight",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "75e3750f-c3e7-47cc-a541-e0b55e302ae9",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "defaultWeight"
          },
          "object": {
            "datatype": "text",
            "name": "input_rowObject",
            "scope": "local"
          },
          "value": {
            "datatype": "numeric",
            "name": "defaultWeight",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "id": "8a299612-d337-4cc7-8674-bd1726f06f72",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "32faf1e2-db2e-491b-8b9a-0cb79b34351c",
        "test": {
          "datatype": "boolean",
          "name": "isDefaultMethod_EQUAL",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "remove",
        "id": "60d0f3bd-2049-4138-89a2-e59235f5fa8e",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "defaultWeight"
          },
          "object": {
            "datatype": "text",
            "name": "input_rowObject",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "cc36f24b-0889-45c0-a8b3-74cf6d15301b",
        "includeElse": true,
        "isCommented": false,
        "main": "32faf1e2-db2e-491b-8b9a-0cb79b34351c",
        "test": {
          "datatype": "boolean",
          "name": "isDefaultMethod_EQUAL",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4ec9b3dc-66ea-44da-8655-e6b03cdc0912",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "has",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "weightOverride"
            },
            "object": {
              "datatype": "text",
              "name": "input_rowObject",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "hasOverride",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "a64dc44f-8471-4d7e-b0c4-d4044efbbed6",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "hasOverride",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3e7a8477-ce64-4250-badb-a13514596b92",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "weightOverride"
            },
            "object": {
              "datatype": "text",
              "name": "input_rowObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "weightOverride",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "d313661d-7c8d-4a32-bda2-8b6f324d12dc",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "quotient",
          "library": "CirrusLibMath",
          "params": {
            "number1": {
              "name": "weightOverride",
              "scope": "local"
            },
            "number2": {
              "datatype": "numeric",
              "name": "input_overrideWeightsTotal",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "allocationWeight",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "bf4c8187-5028-4f0e-936c-17e5f64b632a",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "multiply",
          "library": "CirrusLibMath",
          "params": {
            "number1": {
              "datatype": "numeric",
              "name": "allocationWeight",
              "scope": "local"
            },
            "number2": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 100
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "allocationWeight",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "5e2a0cd3-b3c5-40ed-9e2a-241fc2841a3a",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "a64dc44f-8471-4d7e-b0c4-d4044efbbed6",
        "test": {
          "datatype": "boolean",
          "name": "hasOverride",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "2f390c20-a4f8-4fac-95db-472031296163",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "gt",
          "library": "CirrusLibMath",
          "params": {
            "number1": {
              "datatype": "numeric",
              "name": "input_overrideWeightsTotal",
              "scope": "local"
            },
            "number2": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "hasOverride",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "fffbfcd4-fe76-4102-9ffe-da657d26358b",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "hasOverride",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4485714c-5cd8-497d-8d46-70b09ae939fc",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "numeric",
          "dataval": 0
        },
        "variable": {
          "datatype": "numeric",
          "name": "allocationWeight",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "0ee89b08-c067-462d-855d-04c3b6800624",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "fffbfcd4-fe76-4102-9ffe-da657d26358b",
        "test": {
          "datatype": "boolean",
          "name": "hasOverride",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c951dbc9-2555-48b0-8e7a-bd955604eb11",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "numeric",
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "numeric",
              "name": "segmentWeight",
              "scope": "local"
            },
            "arg2": {
              "datatype": "numeric",
              "name": "defaultWeight",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "allocationWeight",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "f589729b-e411-4e0a-af1c-b5f6bb2b7773",
        "includeElse": true,
        "isCommented": false,
        "main": "fffbfcd4-fe76-4102-9ffe-da657d26358b",
        "test": {
          "datatype": "boolean",
          "name": "hasOverride",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "c58e15ed-2aae-41ac-922b-150ad47bc3f4",
        "includeElse": true,
        "isCommented": false,
        "main": "a64dc44f-8471-4d7e-b0c4-d4044efbbed6",
        "test": {
          "datatype": "boolean",
          "name": "hasOverride",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "cacfa7eb-fc94-4953-9a22-725c788a6914",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "allocationWeight"
          },
          "object": {
            "datatype": "text",
            "name": "input_rowObject",
            "scope": "local"
          },
          "value": {
            "datatype": "numeric",
            "name": "allocationWeight",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "f348f1fa-9c36-4cc8-81ab-20da2806bcc1",
        "isCommented": false,
        "main": "db76fdb7-d582-441a-a547-d3fa396d8787",
        "test": {
          "datatype": "\u003cany\u003e",
          "name": "isLeaf",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  }
}
