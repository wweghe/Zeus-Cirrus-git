{
  "DELETEonInitHorizonChange": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_value"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "d9103128-48ba-485b-b64d-3b0d30896541",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text",
              "name": "input_value",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitHorizonsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "4efc93fd-d656-430f-a1d3-6b39920f025b",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitHorizonsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetColumnMetaData",
        "id": "39235709-2bd4-4f89-84f6-fd6f782831b6",
        "isCommented": false,
        "params": {
          "spreadsheetColumnMetaData": {
            "datatype": "object",
            "name": "baselineMetaJson",
            "scope": "global"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_MULTI"
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "d26f5de2-ed17-495e-8bf1-b9bd8a126a48",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "default"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_data_container"
      },
      {
        "action": "ifelse",
        "id": "331d1429-62e6-4ef0-bf19-384b0eed3fb1",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "4efc93fd-d656-430f-a1d3-6b39920f025b",
        "test": {
          "datatype": "boolean",
          "name": "isInitHorizonsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "3f215da9-e6f3-41a7-905e-7373de6c1681",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeMULTI",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "83ce6be6-64af-4f2a-9633-d56a702e8740",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "updateBepSpreadsheetMeta",
          "library": "CirrusLibCirrusCoreBusinessEvolution",
          "params": {
            "baselineSpreadsheetMeta": {
              "datatype": "object",
              "name": "baselineMetaJsonForMULTIType",
              "scope": "global"
            },
            "initHorizons": {
              "datatype": "text",
              "name": "input_value",
              "scope": "local"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "updatedMeta",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetColumnMetaData",
        "id": "e2adf8ad-428c-4987-b36d-d48d260f9503",
        "isCommented": false,
        "params": {
          "spreadsheetColumnMetaData": {
            "datatype": "object",
            "name": "updatedMeta",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_MULTI"
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "6770c638-d449-4942-9ea2-e72d6155df10",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "data_layout_MULTI"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_data_container"
      },
      {
        "action": "ifelse",
        "id": "274e83e4-64bb-4895-93e7-5712f4761272",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "3f215da9-e6f3-41a7-905e-7373de6c1681",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeMULTI",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "57c411c4-cb2f-49e9-9b90-1f2869b0bcd7",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "global"
        }
      },
      {
        "action": "execfunc",
        "function": "onSegVarsChange",
        "id": "223266ee-4086-4904-aafd-aff7a600c758",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_didDataChange": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          },
          "input_value": {
            "datatype": "object",
            "name": "segVars",
            "objectType": "BusinessEvolutionPlan",
            "scope": "field",
            "target": "$self$"
          }
        }
      },
      {
        "action": "setvar",
        "id": "94cbcbea-7f72-41f2-bbb2-484b589226ab",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "updateBepSpreadsheetMeta",
          "library": "CirrusLibCirrusCoreBusinessEvolution",
          "params": {
            "baselineSpreadsheetMeta": {
              "datatype": "object",
              "name": "baselineMetaJsonForSINGLEType",
              "scope": "global"
            },
            "initHorizons": {
              "datatype": "text",
              "name": "input_value",
              "scope": "local"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "updatedMeta",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetColumnMetaData",
        "id": "724903bd-c958-46eb-95b4-2f55f07e6e0a",
        "isCommented": false,
        "params": {
          "spreadsheetColumnMetaData": {
            "datatype": "object",
            "name": "updatedMeta",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_SINGLE"
      },
      {
        "action": "ifelse",
        "id": "e672a898-4d46-4010-80e7-aae8bc216348",
        "includeElse": true,
        "iselse": true,
        "main": "57c411c4-cb2f-49e9-9b90-1f2869b0bcd7",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "global"
        }
      },
      {
        "action": "addComment",
        "commentStep": "There is no other option besides MULTI/SINGLE right now, but if we support another initialization type in the future, that would go here.",
        "id": "3c86168f-c37f-47b1-8d71-ce860e90f400",
        "isCommented": false
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "61ac11e5-9876-4e82-9b18-63ae46aac4c9",
        "includeElse": true,
        "isCommented": false,
        "main": "57c411c4-cb2f-49e9-9b90-1f2869b0bcd7",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "7e093933-f06e-4103-8e21-22f0212b193a",
        "includeElse": true,
        "isCommented": false,
        "main": "3f215da9-e6f3-41a7-905e-7373de6c1681",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeMULTI",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "959a4e79-35fb-44a9-9c28-b80b336ca76b",
        "includeElse": true,
        "isCommented": false,
        "main": "4efc93fd-d656-430f-a1d3-6b39920f025b",
        "test": {
          "datatype": "boolean",
          "name": "isInitHorizonsEmpty",
          "scope": "local"
        }
      }
    ],
    "sasProvided": true
  },
  "collapseInitAccordionIfNecessary": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "ce12bf71-d374-4627-af7a-b2e1f1d3c5f7",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isAllInitDataProvided",
          "library": "$interactions$",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitDataComplete",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "d258efbb-3ac7-4105-a5a9-ccb2eb8e3751",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitDataComplete",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "27543e1b-1cb3-4362-b0f4-3acb683a5752",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewNumericArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "numeric array"
        },
        "variable": {
          "datatype": "numeric array",
          "name": "emptyArray",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setActiveTabIndices",
        "id": "bb5ac0bd-a8bc-4ad1-bb11-488a30b3c2c7",
        "isCommented": false,
        "params": {
          "activeIndex": {
            "datatype": "numeric array",
            "name": "emptyArray",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "initialization_accordion"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "c26a9033-ba9d-4dd6-b1b8-7a9278f409d8",
        "isCommented": false,
        "main": "d258efbb-3ac7-4105-a5a9-ccb2eb8e3751",
        "test": {
          "datatype": "boolean",
          "name": "isInitDataComplete",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "filterInitTypeOptions": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_option"
      },
      {
        "datatype": "text array",
        "name": "input_allowedList"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "d4673800-567f-4cb3-ad86-df676d0690e0",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "value"
            },
            "object": {
              "datatype": "text",
              "name": "input_option",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "optionValue",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "455564bc-4610-4863-bf5e-c5e772927acc",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "contains",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_allowedList",
              "scope": "local"
            },
            "value": {
              "name": "optionValue",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "optionInAllowedList",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "6e5ffe67-bd0a-4c93-a59c-37f74eb1cb73",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "optionInAllowedList",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "filterIntervalTypeOptions": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_option"
      },
      {
        "datatype": "text array",
        "name": "input_excludeList"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "d4673800-567f-4cb3-ad86-df676d0690e0",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "value"
            },
            "object": {
              "datatype": "text",
              "name": "input_option",
              "scope": "local"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "optionValue",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "455564bc-4610-4863-bf5e-c5e772927acc",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "contains",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "input_excludeList",
              "scope": "local"
            },
            "value": {
              "name": "optionValue",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "optionInExcludeList",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "59a4ab91-b969-4be2-961e-1b23ba6a1164",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "optionInExcludeList",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "optionInAllowedList",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "6e5ffe67-bd0a-4c93-a59c-37f74eb1cb73",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "optionInAllowedList",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "getEditLinkForAuxData": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_objectType"
      },
      {
        "datatype": "text",
        "name": "input_key"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "89e2c8eb-97f6-4865-9aa4-fc07065a4582",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getEditLocation",
          "library": "CirrusLibNav",
          "params": {
            "key": {
              "datatype": "text",
              "name": "input_key",
              "scope": "local"
            },
            "objectType": {
              "datatype": "text",
              "name": "input_objectType",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "navLink",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "05da303b-ebbe-455b-bd90-a070713ab47c",
        "isCommented": false,
        "variable": {
          "datatype": "text",
          "name": "navLink",
          "scope": "local"
        }
      }
    ],
    "sasProvided": true
  },
  "getEditLinkForObjectInstance": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_objectType"
      },
      {
        "datatype": "text",
        "name": "input_key"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "557d161d-beb4-4946-ab44-7bcc376346c3",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getEditLocation",
          "library": "CirrusLibNav",
          "params": {
            "key": {
              "datatype": "text",
              "name": "input_key",
              "scope": "local"
            },
            "objectType": {
              "datatype": "text",
              "name": "input_objectType",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "navLink",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "b239be6e-3385-4e0d-8143-3488a9747e94",
        "isCommented": false,
        "variable": {
          "datatype": "text",
          "name": "navLink",
          "scope": "local"
        }
      }
    ],
    "sasProvided": true
  },
  "getLinkedAuxData": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_added"
      },
      {
        "datatype": "text array",
        "name": "input_removed"
      },
      {
        "datatype": "text",
        "name": "input_objectKey"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "150dff28-eaed-4649-842b-625eafc2d47c",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewStringArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "emptyArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "ac8e99b9-a6a1-46cb-897a-d8b5f58e0940",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "text array",
              "name": "input_added",
              "scope": "local"
            },
            "arg2": {
              "datatype": "text array",
              "name": "emptyArray",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "text array",
          "name": "input_added",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "f1b77693-136a-43b6-9f26-0a1ff7b703cc",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "text array",
              "name": "input_removed",
              "scope": "local"
            },
            "arg2": {
              "datatype": "text array",
              "name": "emptyArray",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "input_removed",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "6e090b7a-616e-4bfd-b754-21cb2f51fef0",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text",
              "name": "input_objectKey",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isObjectKeyEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "64064c1b-4b3a-49dc-bed5-65edf5d95b5b",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isObjectKeyEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "e9785e6e-a205-4faa-9436-65836d82600c",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getDifference",
          "library": "CirrusLibArray",
          "params": {
            "array1": {
              "datatype": "text array",
              "name": "input_added",
              "scope": "local"
            },
            "array2": {
              "datatype": "text array",
              "name": "input_removed",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "addedAndNotRemoved",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "0a2a1f3f-ad3f-4692-b7d8-0534af5b046a",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "size",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "addedAndNotRemoved",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "addedAndNotRemovedSize",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c21d8fc9-a7e7-4ec6-9ff7-d485d0b46888",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "gt",
          "library": "CirrusLibMath",
          "params": {
            "number1": {
              "datatype": "numeric",
              "name": "addedAndNotRemovedSize",
              "scope": "local"
            },
            "number2": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isAddedAndNotRemovedNonEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "6cbee0a5-9656-448e-a4f0-67c52c8ebc9e",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isAddedAndNotRemovedNonEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "ac6530dd-d0f7-41e7-902f-5af376f18c9a",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "text array",
          "name": "addedAndNotRemoved",
          "scope": "local"
        },
        "variable": {
          "datatype": "text array",
          "name": "selectedAuxDataInstance",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "f6e1208b-5c56-492d-bf3f-b7339091727a",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "6cbee0a5-9656-448e-a4f0-67c52c8ebc9e",
        "test": {
          "datatype": "boolean",
          "name": "isAddedAndNotRemovedNonEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "6e4cd96f-e2ab-4d32-abd9-7527ade47242",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "setNull",
          "library": "CirrusLibGeneral",
          "params": {},
          "returnType": "\u003cIncoming\u003e"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e",
          "name": "selectedAuxDataInstance",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "28f0fa76-f9b2-4e5e-b86c-3724bc6377c9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "setNull",
          "library": "CirrusLibGeneral",
          "params": {},
          "returnType": "\u003cIncoming\u003e"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e",
          "name": "segVars",
          "objectType": "BusinessEvolutionPlan",
          "scope": "field",
          "set-field": "segVars",
          "target": "$self$"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "3dbbca78-b8bd-4c3c-b063-983c2fdd6311",
        "includeElse": true,
        "isCommented": false,
        "main": "6cbee0a5-9656-448e-a4f0-67c52c8ebc9e",
        "test": {
          "datatype": "boolean",
          "name": "isAddedAndNotRemovedNonEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "a7fa553d-5370-43e8-b5f1-3fb1bd5bcb20",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "64064c1b-4b3a-49dc-bed5-65edf5d95b5b",
        "test": {
          "datatype": "boolean",
          "name": "isObjectKeyEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "f49459fa-94d7-4544-9daa-ecf6253590f7",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "loadLinkInstances",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "added": {
              "datatype": "text array",
              "name": "input_added",
              "scope": "local"
            },
            "linkTypeId": {
              "datatype": "text",
              "scope": "fixed",
              "value": "businessEvolutionPlan_auxData"
            },
            "linkTypeSSC": {
              "datatype": "text",
              "scope": "fixed",
              "value": "RCC"
            },
            "linkedToKey": {
              "datatype": "text",
              "name": "input_objectKey",
              "scope": "local"
            },
            "linkedToSchemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "BusinessEvolutionPlan"
            },
            "removed": {
              "datatype": "text array",
              "name": "input_removed",
              "scope": "local"
            },
            "schemaName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "AnalysisData"
            },
            "side": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedAuxData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "411cce30-20cc-425f-b073-080ec872a7f8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "size",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedAuxData",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "linkedAuxDataSize",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "56f79081-3a4d-4527-8a53-e0626d92a6cd",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "gt",
          "library": "CirrusLibMath",
          "params": {
            "number1": {
              "datatype": "numeric",
              "name": "linkedAuxDataSize",
              "scope": "local"
            },
            "number2": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isLinkedAuxDataSizeNonZero",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "64f3859b-9bff-4bd5-ab5c-da1fe6decebf",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isLinkedAuxDataSizeNonZero",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "6aa4e0fc-1074-4117-8eb8-a5d8d3d8fb70",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "map",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedAuxData",
              "scope": "local"
            },
            "callback": {
              "function": "get",
              "library": "CirrusLibObject",
              "params": {
                "name": {
                  "datatype": "text",
                  "scope": "fixed",
                  "value": "key"
                },
                "object": {
                  "datatype": "\u003cOutgoing\u003e array",
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              },
              "returnType": "\u003cOutgoing\u003e array array array array array array array array array"
            }
          },
          "returnType": "\u003cOutgoing\u003e array array array array array array array array array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array array array array array array array array array",
          "name": "selectedAuxDataInstance",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "a3ce1ab3-8864-4a58-8838-e216dda41f2b",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "64f3859b-9bff-4bd5-ab5c-da1fe6decebf",
        "test": {
          "datatype": "boolean",
          "name": "isLinkedAuxDataSizeNonZero",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "fb9822c4-c3b9-4479-bfc5-2905acbe010e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "setNull",
          "library": "CirrusLibGeneral",
          "params": {},
          "returnType": "\u003cIncoming\u003e"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e",
          "name": "selectedAuxDataInstance",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "e91e94b1-72c0-4974-b11b-52bc503cc87d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "setNull",
          "library": "CirrusLibGeneral",
          "params": {},
          "returnType": "\u003cIncoming\u003e"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e",
          "name": "segVars",
          "objectType": "BusinessEvolutionPlan",
          "scope": "field",
          "set-field": "segVars",
          "target": "$self$"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "31466c21-091f-48e0-8e44-ca05993af16e",
        "includeElse": true,
        "isCommented": false,
        "main": "64f3859b-9bff-4bd5-ab5c-da1fe6decebf",
        "test": {
          "datatype": "boolean",
          "name": "isLinkedAuxDataSizeNonZero",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "4f379fff-d759-4c3e-acdf-8c0f93e47e50",
        "includeElse": true,
        "isCommented": false,
        "main": "64064c1b-4b3a-49dc-bed5-65edf5d95b5b",
        "test": {
          "datatype": "boolean",
          "name": "isObjectKeyEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "setSegVarOptions",
        "id": "97bfd3c3-be9c-49bf-a90a-cfa3828db445",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "getLocalisedObjectType": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "3894422e-d6ac-4462-8795-f10e10edfbc1",
        "type": "calculated",
        "value": {
          "function": "getCurrentObjectType",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "objectType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "668a9d7e-f6ab-41f3-a46e-ccfe5e2f8c92",
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": ".schema.name.singular.title"
        },
        "variable": {
          "datatype": "text",
          "name": "i18nSuffix",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "b7e54715-58f4-452f-9d24-3ad725222900",
        "type": "calculated",
        "value": {
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "objectType",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "name": "i18nSuffix",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "objectTypePropString",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "1df2a622-a1ce-4d8c-83ce-a3cfa9ff1641",
        "type": "calculated",
        "value": {
          "function": "getMessageProperty",
          "library": "CirrusLibLocalization",
          "params": {
            "messageKey": {
              "datatype": "text",
              "name": "objectTypePropString",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "localisedObjectType",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "0a736547-9eac-42cf-a9d9-b7b4fd9a9311",
        "variable": {
          "datatype": "text",
          "name": "localisedObjectType",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "isAllInitDataProvided": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "69940dbc-b9fc-4115-b19b-b6aad902fa44",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": false
        },
        "variable": {
          "datatype": "boolean",
          "name": "false",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "6ff483ca-70b3-49d8-ac43-9a7fe5cca09d",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": true
        },
        "variable": {
          "datatype": "boolean",
          "name": "true",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "e1e5e39d-1896-454f-b383-73afe7c21268",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "initType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "initType",
              "target": "$self$"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "SINGLE"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "97713d9a-9ebd-4189-a218-fb745f8947af",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "initType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "initType",
              "target": "$self$"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "MULTI"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitTypeMULTI",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "First check the items that are required in both SINGLE and MULTI cases",
        "id": "a5f1b826-5971-4a87-b8ee-8f10ca960fb7",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "4efdb5e5-f0ba-4554-b604-7c5eb035fc8a",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getLinkedObjectKeysFromField",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "fieldName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "linked_planData"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedPlanningData",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "5f049875-e7ac-41a9-8ad2-03a62bc7b8b9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isEmpty",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedPlanningData",
              "scope": "global"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isLinkedPlanningDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "131a9916-3c0a-498a-bc09-63c7bff11f52",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isLinkedPlanningDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "27a61116-3c9d-4baa-9f80-7188464465d0",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "false",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "129bf0c4-1663-4bd1-a49a-90b6f44b31fb",
        "isCommented": false,
        "main": "131a9916-3c0a-498a-bc09-63c7bff11f52",
        "test": {
          "datatype": "boolean",
          "name": "isLinkedPlanningDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "0ea584b8-02c6-405a-8ac6-9a0724c068a9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text",
              "name": "intervalType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "intervalType",
              "target": "$self$"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isIntervalEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "f8f57598-26c5-4a0c-80c0-6cbb4e8ee08e",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isIntervalEmpty",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "47c12303-2f0d-4af9-8693-f4bb49cb4e40",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "false",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "e6f14786-15c3-4fa3-8f8d-e0222f915154",
        "isCommented": false,
        "main": "f8f57598-26c5-4a0c-80c0-6cbb4e8ee08e",
        "test": {
          "datatype": "boolean",
          "name": "isIntervalEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "e4555ee2-1809-48a6-97cf-8a1429595e46",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "numeric",
              "name": "intervalCount",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "intervalCount",
              "target": "$self$"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isIntervalCountEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "b5ec0e6e-b54c-4d5b-86b2-dc04b0a2d308",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isIntervalCountEmpty",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "59be1ae7-40e5-4725-b508-971d37230376",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "false",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "f0eb1b90-3894-4073-8634-1f9516ed507e",
        "isCommented": false,
        "main": "b5ec0e6e-b54c-4d5b-86b2-dc04b0a2d308",
        "test": {
          "datatype": "boolean",
          "name": "isIntervalCountEmpty",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "Now check the items that are required in the SINGLE case",
        "id": "637b1340-aa5d-483b-918b-38a3c3d45e0f",
        "isCommented": false
      },
      {
        "action": "ifelse",
        "id": "f9fcdd53-1b8b-4edf-99a6-4a8a91a5382f",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "b974aa64-1578-4e5f-8ff9-092a0cc08097",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getLinkedObjectKeysFromField",
          "library": "CirrusLibCirrusObjectLinkInstance",
          "params": {
            "fieldName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "linked_hierarchyData"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "linkedHierarchyData",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "bcacffe5-2c46-4ce7-b834-35e80d9d82fb",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isEmpty",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedHierarchyData",
              "scope": "global"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isLinkedHierarchyDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "c2103613-adfe-4889-8785-8de38463e292",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isLinkedHierarchyDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "b04c65e9-3bad-44c7-8f3c-5bc6627b9b51",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "false",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "09b7af27-b1a9-4c2d-8876-f6a60883d599",
        "isCommented": false,
        "main": "c2103613-adfe-4889-8785-8de38463e292",
        "test": {
          "datatype": "boolean",
          "name": "isLinkedHierarchyDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "54288cd2-aacb-4a2a-9b5f-29a47aff885b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text",
              "name": "planningCurrency",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "planningCurrency",
              "target": "$self$"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isPlanningCurrencyEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "31253d57-7281-4d78-a5ec-53fc255a013d",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isPlanningCurrencyEmpty",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "b77fa4d7-2802-424b-a7b0-61cc690d1d44",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "false",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "36857330-a4d7-4921-98cb-3efff0ff168f",
        "isCommented": false,
        "main": "31253d57-7281-4d78-a5ec-53fc255a013d",
        "test": {
          "datatype": "boolean",
          "name": "isPlanningCurrencyEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "f80a2c7a-27de-4e3e-892b-4ca42393e063",
        "isCommented": false,
        "main": "f9fcdd53-1b8b-4edf-99a6-4a8a91a5382f",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "2c05b7f7-c757-4bd8-a718-9ee7e5e87960",
        "isCommented": false,
        "variable": {
          "datatype": "boolean",
          "name": "true",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "onAnyEvent": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "d4c1dfc4-632b-46ae-a135-67a166a25ad6",
        "type": "calculated",
        "value": {
          "function": "getDiffJSONPatch",
          "library": "CirrusLibPageData",
          "params": {
            "origData": {
              "datatype": "All Data",
              "name": "dataAfterLoad",
              "scope": "global"
            }
          },
          "returnType": "Patch array"
        },
        "variable": {
          "datatype": "Patch array",
          "name": "patch",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "d3c1f6c8-099e-4027-85c8-7fae6fa783a1",
        "type": "calculated",
        "value": {
          "function": "isObjectPageDirty",
          "library": "CirrusLibCirrusObject",
          "params": {
            "patch": {
              "datatype": "Patch array",
              "name": "patch",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isPageDirty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "e6055f2e-50ad-4533-9434-54d42a84a4fc",
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "isPageDirty",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isNotDirty",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "44a76eb6-71b3-4e7b-84ce-d3481cb6c029",
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "name": "isNotDirty",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "save"
      },
      {
        "action": "execfunc",
        "function": "setTabDirty",
        "id": "989f93d8-d3c0-4878-a5d8-50b3b0739494",
        "library": "CirrusLibPageData",
        "params": {
          "isDirty": {
            "datatype": "boolean",
            "name": "isPageDirty",
            "scope": "local"
          }
        }
      }
    ],
    "sasProvided": true
  },
  "onAnyInitVarChange": {
    "inputs": [],
    "logic": [
      {
        "action": "execfunc",
        "function": "setBEPspreadsheetMeta",
        "id": "1d882f50-ee5f-43fd-8930-1b194eac8a54",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_resetDataFlg": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        }
      },
      {
        "action": "setvar",
        "id": "076d92ea-f879-40e6-94c5-e48464f6741f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "intervalType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "intervalType",
              "target": "$self$"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "IRRBB"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isIntervalTypeIRRBB",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "b1385e7f-fd90-4a52-b7b4-c36febfb31ca",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isIntervalTypeIRRBB",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3eb1a0a1-e6cb-4c69-a08d-95a6a32280d5",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "numeric",
          "dataval": 19
        },
        "variable": {
          "datatype": "numeric",
          "name": "intervalCount",
          "objectType": "BusinessEvolutionPlan",
          "scope": "field",
          "set-field": "intervalCount",
          "target": "$self$"
        }
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "712f909e-1cec-45df-8a45-63310d9bc40a",
        "isCommented": false,
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "intervalCount"
      },
      {
        "action": "ifelse",
        "id": "ab02ad98-9884-4a12-a140-d6bbe79a1367",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "b1385e7f-fd90-4a52-b7b4-c36febfb31ca",
        "test": {
          "datatype": "boolean",
          "name": "isIntervalTypeIRRBB",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "3978a64f-bd13-4247-a5c4-695774c55594",
        "isCommented": false,
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          }
        },
        "scope": "currentPage",
        "widgetId": "intervalCount"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "45d17f03-8a94-464d-b1c8-df0a7d0870e1",
        "includeElse": true,
        "isCommented": false,
        "main": "b1385e7f-fd90-4a52-b7b4-c36febfb31ca",
        "test": {
          "datatype": "boolean",
          "name": "isIntervalTypeIRRBB",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "onAuxDataAdd": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_addedNow"
      },
      {
        "datatype": "text array",
        "name": "input_addedEarlier"
      },
      {
        "datatype": "text array",
        "name": "input_removed"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "8d11d2ff-580b-422d-af3c-be127a32232d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getCurrentObjectKey",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "key",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "afac1a7c-fedc-41fa-bafa-29853df1bdbf",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getUnionWithoutDuplicates",
          "library": "CirrusLibArray",
          "params": {
            "array1": {
              "datatype": "text array",
              "name": "input_addedEarlier",
              "scope": "local"
            },
            "array2": {
              "datatype": "text array",
              "name": "input_addedNow",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "allAdded",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "getLinkedAuxData",
        "id": "a5563c04-d8fa-4752-ae37-d40d4415ef4c",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_added": {
            "datatype": "text array",
            "name": "allAdded",
            "scope": "local"
          },
          "input_objectKey": {
            "datatype": "text",
            "name": "key",
            "scope": "local"
          },
          "input_removed": {
            "datatype": "text array",
            "name": "input_removed",
            "scope": "local"
          }
        }
      }
    ],
    "sasProvided": true
  },
  "onAuxDataRemove": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_added"
      },
      {
        "datatype": "text array",
        "name": "input_removedNow"
      },
      {
        "datatype": "text array",
        "name": "input_removedEarlier"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "f8d1147c-763b-46e4-9cc7-60a8ca084cf4",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getCurrentObjectKey",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "key",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "00828fb2-876a-44c9-a2ad-f7d53ff4742f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getTypeOf",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "text array",
              "name": "input_removedNow",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "removedNowType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "d6dd2106-6bb2-4318-944e-fc7435aa6c07",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "removedNowType",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "array"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isRemovedNowTypeArray",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "6d01ef28-9641-4eab-beec-7b072d6dac15",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isRemovedNowTypeArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "86f5932b-c871-41c3-b080-5bfec5182b82",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getUnionWithoutDuplicates",
          "library": "CirrusLibArray",
          "params": {
            "array1": {
              "datatype": "text array",
              "name": "input_removedEarlier",
              "scope": "local"
            },
            "array2": {
              "datatype": "text array",
              "name": "input_removedNow",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "allRemoved",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "2e9fa162-75e2-4735-a81d-04a4864b18d5",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "6d01ef28-9641-4eab-beec-7b072d6dac15",
        "test": {
          "datatype": "boolean",
          "name": "isRemovedNowTypeArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "04aee311-ec2d-4421-a1c9-7dc145abcc9e",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "text array",
          "name": "input_removedEarlier",
          "scope": "local"
        },
        "variable": {
          "datatype": "text array",
          "name": "allRemoved",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "push",
        "id": "bf74c1a4-7bb6-4688-93a9-a837a10422b9",
        "isCommented": false,
        "library": "CirrusLibArray",
        "params": {
          "array": {
            "datatype": "text array",
            "name": "allRemoved",
            "scope": "local"
          },
          "value": {
            "datatype": "text",
            "name": "input_removedNow",
            "scope": "local"
          }
        },
        "returnType": "numeric"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "d2a369a3-60a9-48f8-8726-e4e11715b756",
        "includeElse": true,
        "isCommented": false,
        "main": "6d01ef28-9641-4eab-beec-7b072d6dac15",
        "test": {
          "datatype": "boolean",
          "name": "isRemovedNowTypeArray",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "getLinkedAuxData",
        "id": "da3f3df6-f6a0-4179-bca1-83ac376819b1",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_added": {
            "datatype": "text array",
            "name": "input_added",
            "scope": "local"
          },
          "input_objectKey": {
            "datatype": "text",
            "name": "key",
            "scope": "local"
          },
          "input_removed": {
            "datatype": "text array",
            "name": "allRemoved",
            "scope": "local"
          }
        }
      }
    ],
    "sasProvided": true
  },
  "onBEPDataEdit_SINGLE": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_widgetID"
      },
      {
        "datatype": "object",
        "name": "input_colDef"
      },
      {
        "datatype": "object",
        "name": "input_data"
      },
      {
        "datatype": "text",
        "name": "input_newValue"
      },
      {
        "datatype": "text",
        "name": "input_oldValue"
      },
      {
        "datatype": "numeric",
        "name": "input_rowIndex"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "0d345f9e-9a56-4f4e-a480-394cc3b12e50",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "rowState"
            },
            "object": {
              "datatype": "object",
              "name": "bep_spreadsheet_SINGLE",
              "scope": "data",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "currentRowState",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a216c98a-7d80-483c-b831-1bec29d5cdfc",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "updateBepSpreadsheetData",
          "library": "CirrusLibCirrusCoreBusinessEvolution",
          "params": {
            "currentSpreadsheetData": {
              "datatype": "text",
              "name": "currentRowState",
              "scope": "local"
            },
            "editedColDef": {
              "datatype": "object",
              "name": "input_colDef",
              "scope": "local"
            },
            "editedRowData": {
              "datatype": "object",
              "name": "input_data",
              "scope": "local"
            },
            "editedRowIndex": {
              "datatype": "numeric",
              "name": "input_rowIndex",
              "scope": "local"
            },
            "hierarchyDataKey": {
              "datatype": "text",
              "name": "hierarchyDataKey",
              "scope": "global"
            },
            "initType": {
              "datatype": "text",
              "name": "initType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "initType",
              "target": "$self$"
            },
            "intervalCount": {
              "datatype": "numeric",
              "name": "intervalCount",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "target": "$self$"
            },
            "intervalType": {
              "datatype": "text",
              "name": "intervalType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "intervalType",
              "target": "$self$"
            },
            "newValue": {
              "datatype": "text",
              "name": "input_newValue",
              "scope": "local"
            },
            "planningDataKey": {
              "datatype": "text",
              "name": "planningDataKey",
              "scope": "global"
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "updatedData",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "2d183276-278d-47cf-b2d5-6b1d8c542eaa",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToArray",
          "library": "CirrusLibArray",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "[{\"key\": \"   \", \"level\": 0, \"hierarchy\": [\"   \"], \"hasChildren\": true}]"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "newRow",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "451881d4-8f7d-4c14-8855-a067b44faf1d",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "\u003cOutgoing\u003e array",
            "name": "newRow",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_SINGLE"
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "ea805fcf-f79c-4ee9-ad60-044535f513d9",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "object array",
            "name": "updatedData",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_SINGLE"
      },
      {
        "action": "dispatch",
        "id": "8f677fdc-cb1d-4d54-89d6-41ec2e964e42",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "862bd065-7e5d-436d-b7a3-8732c088de71",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "rowState"
            },
            "object": {
              "datatype": "object",
              "name": "bep_spreadsheet_SINGLE",
              "scope": "data",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "currentRowState",
          "scope": "local"
        }
      }
    ],
    "sasProvided": true
  },
  "onDraftLoad": {
    "inputs": [
      {
        "datatype": "numeric",
        "name": "input_id"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "11d76ad2-2393-474a-8051-916954fe70de",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": true
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "global"
        }
      },
      {
        "action": "execfunc",
        "function": "onEditLoad",
        "id": "8fbc2d2c-cf10-4d57-b73d-63de7a45ac8b",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      }
    ],
    "sasProvided": true
  },
  "onEditLoad": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_key"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "5d954c44-ce2a-49dd-9d4e-f0110b52a42d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "name": "isDraft",
              "scope": "global"
            },
            "arg2": {
              "scope": "fixed",
              "value": false
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "isDraft",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "2cce25a7-f1f4-4dad-a67d-45ba93326c54",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "isDraft",
          "scope": "global"
        }
      },
      {
        "action": "execfunc",
        "function": "loadDraftObject",
        "id": "06bd21d2-f98e-4892-a753-0e214f39ac61",
        "isCommented": false,
        "library": "CirrusLibCirrusObject",
        "params": {},
        "returnType": "All Data"
      },
      {
        "action": "setvar",
        "id": "d136704f-db61-467c-9ca7-ed291a761f24",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": true
        },
        "variable": {
          "datatype": "boolean",
          "name": "setDefaultInitType",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "cf8c5914-2304-4374-93b7-d73fccfe188a",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "2cce25a7-f1f4-4dad-a67d-45ba93326c54",
        "test": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "isDraft",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "d3a51991-aa57-4dfe-808d-3663644f3bee",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": false
        },
        "variable": {
          "datatype": "boolean",
          "name": "setDefaultInitType",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "loadExistingObject",
        "id": "c544cf1f-cd71-42ec-b03f-9f746293e988",
        "isCommented": false,
        "library": "CirrusLibCirrusObject",
        "params": {
          "key": {
            "datatype": "text",
            "name": "input_key",
            "scope": "local"
          }
        },
        "returnType": "All Data"
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "a1d2dbc2-5db6-4fba-9f80-818bdd504029",
        "isCommented": false,
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "objectId"
      },
      {
        "action": "execfunc",
        "function": "getLinkedAuxData",
        "id": "965ae8ab-78b8-49ba-9a01-757bf6d8c1e6",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_objectKey": {
            "datatype": "text",
            "name": "input_key",
            "scope": "local"
          }
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "9354cdd7-ca42-4925-b6dc-778a6bf46915",
        "includeElse": true,
        "isCommented": false,
        "main": "2cce25a7-f1f4-4dad-a67d-45ba93326c54",
        "test": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "isDraft",
          "scope": "global"
        }
      },
      {
        "action": "execfunc",
        "function": "setGlobalVars",
        "id": "b7c276f4-8a01-4e27-9981-e16ef549a4bc",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setRequiredFields",
        "id": "e609a46b-fae4-4353-b5a4-a733b983b320",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setScreenReadOnly",
        "id": "73ee54a3-41a2-4ab9-bfff-05a4ec03efd8",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "setvar",
        "id": "7e32dcb6-1053-4600-a757-3b3159700179",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "text",
              "name": "name",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "name",
              "target": "$self$"
            },
            "arg2": {
              "datatype": "text",
              "scope": "fixed",
              "value": " "
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "name_str",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "onNameChange",
        "id": "6489426f-7a7b-4d8a-b0a1-c575653403e0",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_value": {
            "datatype": "text",
            "name": "name_str",
            "scope": "local"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "setInitTypeOptions",
        "id": "0cb5c761-820e-4fc2-b025-55f5b4e7ca54",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_setDefaultInitType": {
            "datatype": "boolean",
            "name": "setDefaultInitType",
            "scope": "local"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "onInitTypeChange",
        "id": "6a45f200-14ec-42a5-9b78-59cef5dc2619",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_value": {
            "datatype": "text",
            "name": "initType",
            "objectType": "BusinessEvolutionPlan",
            "scope": "field",
            "set-field": "initType",
            "target": "$self$"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "setIntervalTypeOptions",
        "id": "521d7e79-cf93-48c9-b59d-ab2a3c8777fa",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "setPlanningCurrencyOptions",
        "id": "f178e979-2ccf-4e3e-8f9c-6a29045b391a",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "onInitTypeChange",
        "id": "b72edcc5-aaec-4eb8-a797-c77bc26cc3c7",
        "isCommented": true,
        "library": "$interactions$",
        "params": {
          "input_value": {
            "datatype": "text",
            "name": "initType",
            "objectType": "BusinessEvolutionPlan",
            "scope": "field",
            "set-field": "initType",
            "target": "$self$"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "collapseInitAccordionIfNecessary",
        "id": "330304eb-d70a-4c86-baa6-78ad4047ac7f",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "setvar",
        "id": "f1f9d317-ef48-4d85-808e-b9887fe114ee",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createEmptyObject",
          "library": "CirrusLibObject",
          "params": {},
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "emptyObject",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "221eaefb-c98d-4d77-af04-33743c37671f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "text",
              "name": "bepData",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "bepData",
              "target": "$self$"
            },
            "arg2": {
              "datatype": "text",
              "scope": "local",
              "target": "arg2",
              "value": "emptyObject"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "bepData",
          "objectType": "BusinessEvolutionPlan",
          "scope": "field",
          "set-field": "bepData",
          "target": "$self$"
        }
      },
      {
        "action": "execfunc",
        "function": "setBEPspreadsheetMeta",
        "id": "a4845eb4-5015-48bd-8bbf-13db962f8849",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_resetDataFlg": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          },
          "input_updateMetaFlg": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          }
        }
      },
      {
        "action": "execfunc",
        "function": "setBEPspreadsheetData",
        "id": "eb7f1137-1be2-4d37-9bab-95ac3ce3528f",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "dispatch",
        "id": "67dd3687-2c4a-46a4-bf32-17d020de7c86",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "49bd7bf0-f190-40f6-9df0-bc76656fbfd9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getAllData",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "All Data"
        },
        "variable": {
          "datatype": "All Data",
          "name": "dataAfterLoad",
          "scope": "global"
        }
      }
    ],
    "sasProvided": true
  },
  "onInitTypeChange": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_value"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "9e6c63c5-278d-48ae-a91f-a6775fc1be4c",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "input_value",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "MULTI"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitTypeMULTI",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "9b84e22a-c048-4e2e-aa87-9e533169fad2",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "input_value",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "SINGLE"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "f39e4605-bb5a-4e6e-b01a-63acf6a4ad6e",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeMULTI",
          "scope": "global"
        }
      },
      {
        "action": "setprop",
        "function": "setHidden",
        "id": "b7d0e543-5f41-4cc7-bf8b-46748f91c8e2",
        "isCommented": false,
        "params": {
          "hidden": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "linked_auxData"
      },
      {
        "action": "setprop",
        "function": "setHidden",
        "id": "3f1da1d1-742f-47ea-af28-c2e6d8a2a1be",
        "isCommented": false,
        "params": {
          "hidden": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "segVars"
      },
      {
        "action": "setprop",
        "function": "setHidden",
        "id": "a08f0413-f640-4fff-b38e-dbf5ea3707d2",
        "isCommented": false,
        "params": {
          "hidden": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "planningCurrency"
      },
      {
        "action": "setprop",
        "function": "setHidden",
        "id": "0bfafbe4-e45e-43f6-be9e-dd786a285e96",
        "isCommented": false,
        "params": {
          "hidden": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": true
          }
        },
        "scope": "currentPage",
        "widgetId": "linked_hierarchyData"
      },
      {
        "action": "setvar",
        "id": "187155dd-5649-4343-a079-e5be62a88acb",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "split",
          "library": "CirrusLibString",
          "params": {
            "separator": {
              "datatype": "text",
              "scope": "fixed",
              "value": ","
            },
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "IRRBB"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "intervalTypeExcludeList",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "setIntervalTypeOptions",
        "id": "f8187bbf-dd4b-41b8-8a41-c25583313d4f",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_excludeList": {
            "datatype": "text array",
            "name": "intervalTypeExcludeList",
            "scope": "local"
          }
        }
      },
      {
        "action": "ifelse",
        "id": "95e3762c-0cde-4b68-8641-d0ed066e2daf",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "f39e4605-bb5a-4e6e-b01a-63acf6a4ad6e",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeMULTI",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "id": "ae5aa810-992f-4c90-a01f-e74ed3aab4be",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "global"
        }
      },
      {
        "action": "execfunc",
        "function": "onSegVarsChange",
        "id": "a75566b7-2495-4e97-a2e2-a82b11ff0655",
        "isCommented": false,
        "library": "$interactions$",
        "params": {
          "input_didDataChange": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          },
          "input_value": {
            "datatype": "object",
            "name": "segVars",
            "objectType": "BusinessEvolutionPlan",
            "scope": "field",
            "target": "$self$"
          }
        }
      },
      {
        "action": "setprop",
        "function": "setHidden",
        "id": "2d26292a-a82d-4264-abd1-9da0a56e40e1",
        "isCommented": false,
        "params": {
          "hidden": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          }
        },
        "scope": "currentPage",
        "widgetId": "linked_auxData"
      },
      {
        "action": "setprop",
        "function": "setHidden",
        "id": "e62df226-d1f4-4b1b-aea2-f373a01ca6ae",
        "isCommented": false,
        "params": {
          "hidden": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          }
        },
        "scope": "currentPage",
        "widgetId": "segVars"
      },
      {
        "action": "setprop",
        "function": "setHidden",
        "id": "99040ede-7037-482c-8b1c-8495b0375459",
        "isCommented": false,
        "params": {
          "hidden": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          }
        },
        "scope": "currentPage",
        "widgetId": "planningCurrency"
      },
      {
        "action": "setprop",
        "function": "setHidden",
        "id": "1b975444-613e-42ba-8d00-44866960b02e",
        "isCommented": false,
        "params": {
          "hidden": {
            "datatype": "boolean",
            "scope": "fixed",
            "value": false
          }
        },
        "scope": "currentPage",
        "widgetId": "linked_hierarchyData"
      },
      {
        "action": "execfunc",
        "function": "setIntervalTypeOptions",
        "id": "14862710-72e6-4703-948b-9622d7171114",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "ifelse",
        "id": "0eb0ea88-9943-48cf-a4cc-487a745eb639",
        "includeElse": true,
        "iselse": true,
        "main": "ae5aa810-992f-4c90-a01f-e74ed3aab4be",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "global"
        }
      },
      {
        "action": "addComment",
        "commentStep": "There is no other option besides MULTI/SINGLE right now, but if we support another initialization type in the future, that would go here.",
        "id": "e708d00e-e3e6-4a05-b82b-68bc5875ecf7",
        "isCommented": false
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "3b485166-2609-46ff-a430-c48777ebad1f",
        "includeElse": true,
        "isCommented": false,
        "main": "ae5aa810-992f-4c90-a01f-e74ed3aab4be",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "global"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "70c2e2fe-cafd-4ddb-b1e2-bcc7d5feaa60",
        "includeElse": true,
        "isCommented": false,
        "main": "f39e4605-bb5a-4e6e-b01a-63acf6a4ad6e",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeMULTI",
          "scope": "global"
        }
      }
    ],
    "sasProvided": true
  },
  "onNameChange": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_value"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "02a03a9c-404d-4bc8-9a8d-0ab168823a97",
        "type": "calculated",
        "value": {
          "function": "getLocalisedObjectType",
          "library": "$interactions$",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "objectType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "242e3c4c-38f0-488f-ab3a-0e878cb37598",
        "type": "calculated",
        "value": {
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "objectType",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": ": "
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "name_str",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7edb0eab-2f82-48bf-b722-283144b5cbd8",
        "type": "calculated",
        "value": {
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "name_str",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "name": "input_value",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "name_readonly",
          "scope": "data",
          "target": "$self$"
        }
      }
    ],
    "sasProvided": true
  },
  "onSave": {
    "inputs": [],
    "logic": [
      {
        "action": "execfunc",
        "function": "clearPopups",
        "id": "3748a343-f37a-40cd-8e39-5984eaca4964",
        "library": "CirrusLibPage",
        "params": {}
      },
      {
        "action": "execfunc",
        "function": "showLoadingOverlay",
        "id": "bf03eb4d-0d36-4ec7-bcc9-ec7aeafe44b6",
        "library": "CirrusLibPage",
        "params": {}
      },
      {
        "action": "addComment",
        "commentStep": "Update the BEP data field",
        "id": "890eba7e-ffbf-4d88-a2e7-fc2aee9a511d",
        "isCommented": false
      },
      {
        "action": "execfunc",
        "function": "storeBEPData",
        "id": "877f06de-09ad-40ec-a1ba-c04391909cc3",
        "isCommented": false,
        "library": "$interactions$",
        "params": {}
      },
      {
        "action": "dispatch",
        "id": "ab6d9193-9ad7-49e0-99eb-ee01a2d0d265",
        "isCommented": false
      },
      {
        "action": "addComment",
        "commentStep": "TODO: If the initType is MULTI, clear out any linked aux data",
        "id": "7a31f6f1-bbf2-4c1f-8260-4646034a19a7",
        "isCommented": false
      },
      {
        "action": "dispatch",
        "id": "0caafd40-f20c-4df5-ba7c-2231d9ffd768",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "3e1b06cf-f5b7-40f3-9404-1dba93451775",
        "type": "calculated",
        "value": {
          "function": "getAllData",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "All Data"
        },
        "variable": {
          "datatype": "All Data",
          "name": "data",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "25a812c6-1ecf-4568-8eb8-40971f79010f",
        "type": "calculated",
        "value": {
          "function": "getCurrentObjectType",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "objectType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "63b71551-5558-4cf5-ae49-9ba8b5cf3ccb",
        "type": "calculated",
        "value": {
          "function": "isDraftObject",
          "library": "CirrusLibCirrusObject",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "79f7dfb0-cf27-4b24-82d0-31093327c6eb",
        "type": "calculated",
        "value": {
          "function": "validateFields",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "areRequiredFieldsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "77ee1938-8f93-4499-957a-ade0ab658d7f",
        "includeElse": true,
        "test": {
          "datatype": "boolean",
          "name": "areRequiredFieldsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "79d211b4-4e5f-49e1-9a4d-66318f1b2619",
        "includeElse": true,
        "iselse": true,
        "main": "77ee1938-8f93-4499-957a-ade0ab658d7f",
        "test": {
          "datatype": "boolean",
          "name": "areRequiredFieldsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "69520823-69f5-4aa7-bbf7-a54415a82bf7",
        "includeElse": true,
        "test": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "31858a68-b7d2-4b16-ac3b-c408564c5189",
        "type": "calculated",
        "value": {
          "function": "saveDraft",
          "library": "CirrusLibCirrusObject",
          "params": {
            "data": {
              "datatype": "All Data",
              "name": "data",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "newKey",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3eb9545e-80b9-44c8-99b1-6595575e1e50",
        "type": "calculated",
        "value": {
          "function": "toString",
          "library": "CirrusLibString",
          "params": {
            "value": {
              "datatype": "text",
              "name": "newKey",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "newKeyString",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "d2350e6b-2e7b-4257-9a2a-ebd2cdd9b5ad",
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "false"
        },
        "variable": {
          "datatype": "text",
          "name": "falseString",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9614733c-6357-4c6f-8d4f-f97a59224438",
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "newKeyString",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "name": "falseString",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isKeyFalse",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "d33ea15a-326f-4796-9fe2-c248afa7146b",
        "includeElse": true,
        "test": {
          "datatype": "boolean",
          "name": "isKeyFalse",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "b58d36e7-1b45-4dfb-b211-dd5b9ee66c6a",
        "includeElse": true,
        "iselse": true,
        "main": "d33ea15a-326f-4796-9fe2-c248afa7146b",
        "test": {
          "datatype": "boolean",
          "name": "isKeyFalse",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "0fbbe199-f0da-4099-aca9-6f82731308ed",
        "type": "calculated",
        "value": {
          "function": "getEditLocation",
          "library": "CirrusLibNav",
          "params": {
            "key": {
              "datatype": "text",
              "name": "newKey",
              "scope": "local"
            },
            "objectType": {
              "datatype": "text",
              "name": "objectType",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "newLocation",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "a183a299-8718-456b-9ccf-3f7f487c0611",
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": true
        },
        "variable": {
          "datatype": "boolean",
          "name": "replaceInBrowser",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "navigate",
        "id": "31b56e22-9610-45a8-88af-ea9b7c26b46c",
        "library": "CirrusLibNav",
        "params": {
          "location": {
            "datatype": "text",
            "name": "newLocation",
            "scope": "local"
          },
          "replace": {
            "datatype": "boolean",
            "name": "replaceInBrowser",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "execfunc",
        "function": "showSuccess",
        "id": "7eb755ea-5461-441b-8021-39f7e8b815fe",
        "library": "CirrusLibPage",
        "params": {}
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "d9bb82c9-de1a-49f9-896f-6084806515d0",
        "includeElse": true,
        "main": "d33ea15a-326f-4796-9fe2-c248afa7146b",
        "test": {
          "datatype": "boolean",
          "name": "isKeyFalse",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "f0ac73ed-78d1-4e0f-9aa1-a35e066ea863",
        "includeElse": true,
        "iselse": true,
        "main": "69520823-69f5-4aa7-bbf7-a54415a82bf7",
        "test": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "fc5a36bd-28cc-44ec-a690-5bc29ac35276",
        "type": "calculated",
        "value": {
          "function": "saveObject",
          "library": "CirrusLibCirrusObject",
          "params": {
            "data": {
              "datatype": "All Data",
              "name": "data",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "saveSuccessful",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "fc2dfb58-f836-45a8-a385-7fe3756de2d5",
        "test": {
          "datatype": "boolean",
          "name": "saveSuccessful",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "834f1fa2-d2ad-4706-a0e3-a643bc64433f",
        "type": "calculated",
        "value": {
          "function": "getCurrentObjectKey",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "instanceKey",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "onEditLoad",
        "id": "939f3f0b-60b0-4cc3-b006-c5cb8c6cec85",
        "library": "$interactions$",
        "params": {
          "input_key": {
            "datatype": "text",
            "name": "instanceKey",
            "scope": "local"
          }
        }
      },
      {
        "action": "execfunc",
        "function": "showSuccess",
        "id": "6d49619f-acaa-481d-8247-fc48a3f97e68",
        "library": "CirrusLibPage",
        "params": {}
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "0a91648d-8542-401f-8e28-4065ed9b1c1d",
        "main": "fc2dfb58-f836-45a8-a385-7fe3756de2d5",
        "test": {
          "datatype": "boolean",
          "name": "saveSuccessful",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "bfae34cb-ee92-4945-ae56-2432def6ab19",
        "includeElse": true,
        "main": "69520823-69f5-4aa7-bbf7-a54415a82bf7",
        "test": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "6fa22f4c-0505-40bb-ba89-1deb1e105b22",
        "includeElse": true,
        "main": "77ee1938-8f93-4499-957a-ade0ab658d7f",
        "test": {
          "datatype": "boolean",
          "name": "areRequiredFieldsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "hideLoadingOverlay",
        "id": "071e7faa-48e9-4f70-ab52-134c2960b037",
        "library": "CirrusLibPage",
        "params": {}
      }
    ],
    "sasProvided": true
  },
  "onSegVarsChange": {
    "inputs": [
      {
        "datatype": "object",
        "name": "input_value"
      },
      {
        "datatype": "boolean",
        "name": "input_didDataChange"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "08202d0d-dba2-4e4f-b3d6-1b82e36e02f3",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "boolean",
              "name": "input_didDataChange",
              "scope": "local"
            },
            "arg2": {
              "datatype": "boolean",
              "scope": "fixed",
              "value": true
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "input_didDataChange",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "be47232e-0901-4fd1-998f-2b0be8eb73d5",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "datatype": "object",
              "name": "segVars",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "segVars",
              "target": "$self$"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isSegVarsNull",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "d630a8f8-09f2-4fd2-a7ab-a508c759f8fb",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isSegVarsNull",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "d7c0b2fd-d47d-4592-8e9c-746b7feaf957",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "default"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_data_container"
      },
      {
        "action": "ifelse",
        "id": "eabcd9ca-967c-4ea5-bad3-18dc8251dd82",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "d630a8f8-09f2-4fd2-a7ab-a508c759f8fb",
        "test": {
          "datatype": "boolean",
          "name": "isSegVarsNull",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7a7c13d0-5e46-47fc-a481-0b56dd5c619e",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "formattedValues"
            },
            "object": {
              "datatype": "object",
              "name": "segVars",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "segVars",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "segVarsValues",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "fb012289-51be-4095-8341-ebcac6bffa7f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isEmpty",
          "library": "CirrusLibString",
          "params": {
            "string": {
              "name": "segVarsValues",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isSegVarsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "e009bee4-8df7-4520-9996-640e661f7ac2",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isSegVarsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "2d46484d-ac86-45c6-b168-87127ecd2fe4",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "default"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_data_container"
      },
      {
        "action": "ifelse",
        "id": "94f05e17-e7e9-4f37-b6f2-48ff3beb361a",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "e009bee4-8df7-4520-9996-640e661f7ac2",
        "test": {
          "datatype": "boolean",
          "name": "isSegVarsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "5890d529-7276-4f4a-b69a-6d8ef966ba91",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "input_didDataChange",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "72e7d038-53f7-4f95-9e15-af9c3b570cdd",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "updateBepSpreadsheetData",
          "library": "CirrusLibCirrusCoreBusinessEvolution",
          "params": {
            "auxDataKey": {
              "name": "selectedAuxDataInstance",
              "scope": "global"
            },
            "initHorizons": {
              "datatype": "text",
              "name": "initHorizons",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "initHorizons",
              "target": "$self$"
            },
            "initType": {
              "datatype": "text",
              "name": "initType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "initType",
              "target": "$self$"
            },
            "numHorizons": {
              "datatype": "numeric",
              "name": "numHorizons",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "target": "$self$"
            },
            "segVars": {
              "name": "segVarsValues",
              "scope": "local"
            },
            "targetVars": {
              "datatype": "object",
              "name": "targetVars",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "target": "$self$"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "generatedBEPdata",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "TODO: Set/update the BEP spreadsheet data",
        "id": "738d5c82-59ac-46ec-a526-9f49fb1848b6",
        "isCommented": false
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "60970744-696a-4c17-a5da-f2109ed0380c",
        "isCommented": false,
        "main": "5890d529-7276-4f4a-b69a-6d8ef966ba91",
        "test": {
          "datatype": "boolean",
          "name": "input_didDataChange",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "comment": "The segVars field is only relevant for the SINGLE type.",
        "function": "setActiveLayoutName",
        "id": "31e96426-69a0-4b94-8d44-1674138e304f",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "data_layout_SINGLE"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_data_container"
      },
      {
        "action": "setvar",
        "id": "6c8be2d7-06db-44f1-84c8-1ece47d7cdd7",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewNumericArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "numeric array"
        },
        "variable": {
          "datatype": "numeric array",
          "name": "emptyArray",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setActiveTabIndices",
        "id": "e80f3da8-4d24-49fe-9560-e7116aa388fb",
        "isCommented": false,
        "params": {
          "activeIndex": {
            "datatype": "numeric array",
            "name": "emptyArray",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "initialization_accordion"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "29ad2c5a-d4a7-4c20-a5ed-9c67af262279",
        "includeElse": true,
        "isCommented": false,
        "main": "e009bee4-8df7-4520-9996-640e661f7ac2",
        "test": {
          "datatype": "boolean",
          "name": "isSegVarsEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "ff4d73f6-e013-4724-b52b-c143617e0eff",
        "includeElse": true,
        "isCommented": false,
        "main": "d630a8f8-09f2-4fd2-a7ab-a508c759f8fb",
        "test": {
          "datatype": "boolean",
          "name": "isSegVarsNull",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "onTabClose": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "d4bc8813-7b01-4a4a-aa39-9179a9f3f8b6",
        "type": "calculated",
        "value": {
          "function": "getDiffJSONPatch",
          "library": "CirrusLibPageData",
          "params": {
            "origData": {
              "datatype": "All Data",
              "name": "dataAfterLoad",
              "scope": "global"
            }
          },
          "returnType": "Patch array"
        },
        "variable": {
          "datatype": "Patch array",
          "name": "patch",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7137fef9-ed0f-4eeb-bb91-312044fd126e",
        "type": "calculated",
        "value": {
          "function": "isObjectPageDirty",
          "library": "CirrusLibCirrusObject",
          "params": {
            "patch": {
              "datatype": "Patch array",
              "name": "patch",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDirty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "b4baa254-da5a-4791-85dd-4cf604d92946",
        "includeElse": false,
        "test": {
          "datatype": "boolean",
          "name": "isDirty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4cb612e0-2294-4e78-b25f-7afea93e4d5d",
        "type": "calculated",
        "value": {
          "function": "promptForConfirmNavigation",
          "library": "CirrusLibPage",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "closeAnyway",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "d40aa399-590e-4b19-b8c5-0ea908c08bdf",
        "variable": {
          "datatype": "boolean",
          "name": "closeAnyway",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "817bd86e-4653-4dbf-9408-3471d42e4f6e",
        "includeElse": false,
        "main": "b4baa254-da5a-4791-85dd-4cf604d92946",
        "test": {
          "datatype": "boolean",
          "name": "isDirty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "bc1b02e8-8f69-4079-b6f4-ec2b58cbf408",
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "isDirty",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "canClose",
          "scope": "local"
        }
      },
      {
        "action": "returnvar",
        "id": "91f8c96d-6a83-4f16-9083-517045695ad4",
        "variable": {
          "datatype": "boolean",
          "name": "canClose",
          "scope": "local"
        }
      }
    ],
    "sasProvided": true
  },
  "setBEPspreadsheetData": {
    "inputs": [
      {
        "datatype": "boolean",
        "name": "input_resetDataFlg"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "37f816f4-a295-4c11-885a-f38cf0375eec",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "initType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "initType",
              "target": "$self$"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "SINGLE"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "6ecbe984-6981-46ab-96c1-1aed3b4f95b9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "data"
            },
            "object": {
              "datatype": "text",
              "name": "bepData",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "bepData",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "existingBEPdata",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7d4c2a51-0f41-4b37-bd7e-86dcd3879c08",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "name": "existingBEPdata",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isBEPDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "19b0f678-cb03-4faf-b33d-cd82fbe7c57a",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "isBEPDataEmpty",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "doesBEPHaveExistingData",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "a7449e6b-307e-4134-892a-a7d90a49d11c",
        "includeElse": false,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "doesBEPHaveExistingData",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "da2013e7-b378-4cb1-bf21-502154872e9d",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "b8114b77-9a0d-4bd6-b73e-462f86333ec1",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "\u003cany\u003e",
            "name": "existingBEPdata",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_SINGLE"
      },
      {
        "action": "ifelse",
        "id": "96580120-b471-4605-b6e6-a80208caa123",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "da2013e7-b378-4cb1-bf21-502154872e9d",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "3bdc9742-37cb-4d14-97ed-45138db4e384",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "\u003cany\u003e",
            "name": "existingBEPdata",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_MULTI"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "e72b86e3-7a93-4e73-9ae0-df69e06426b7",
        "includeElse": true,
        "isCommented": false,
        "main": "da2013e7-b378-4cb1-bf21-502154872e9d",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "40587ca9-c962-4be7-80b7-8385a0e33b0c",
        "includeElse": false,
        "isCommented": false,
        "main": "a7449e6b-307e-4134-892a-a7d90a49d11c",
        "test": {
          "datatype": "boolean",
          "name": "doesBEPHaveExistingData",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setBEPspreadsheetMeta": {
    "inputs": [
      {
        "datatype": "boolean",
        "name": "input_resetDataFlg"
      },
      {
        "datatype": "boolean",
        "name": "input_updateMetaFlg"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "b2823062-9273-402e-8d4e-fd8197b90707",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "boolean",
              "name": "input_updateMetaFlg",
              "scope": "local"
            },
            "arg2": {
              "datatype": "boolean",
              "scope": "fixed",
              "value": true
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "updateMetaFlg",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "53176e97-0ea6-4a52-b170-0b10d327153c",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "name": "updateMetaFlg",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "skipMetaUpdate",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "37f816f4-a295-4c11-885a-f38cf0375eec",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "initType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "initType",
              "target": "$self$"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "SINGLE"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "6ecbe984-6981-46ab-96c1-1aed3b4f95b9",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "meta"
            },
            "object": {
              "datatype": "text",
              "name": "bepData",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "bepData",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "existingBEPmeta",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7d4c2a51-0f41-4b37-bd7e-86dcd3879c08",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "name": "existingBEPmeta",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "notDoesBEPHaveExistingMeta",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "f59de1c2-c294-4cbd-a496-8020d1cb3734",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "notDoesBEPHaveExistingMeta",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "doesBEPHaveExistingMeta",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "29f7a617-b75c-4ac8-8978-0432ac44cc6a",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "and",
          "library": "CirrusLibBoolean",
          "params": {
            "bool1": {
              "datatype": "boolean",
              "name": "doesBEPHaveExistingMeta",
              "scope": "local"
            },
            "bool2": {
              "datatype": "boolean",
              "name": "skipMetaUpdate",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "metaExistsAndShouldNotBeUpdated",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "a7449e6b-307e-4134-892a-a7d90a49d11c",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "metaExistsAndShouldNotBeUpdated",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "Even though we don't want to change any columns, we do need to update the meta here to localize the growth projection columns.",
        "id": "63f98bd5-8ec1-4850-86af-df613edd5f93",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "e81a3c4b-5f4c-48d4-8caf-2506dbfafa08",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedPlanningData",
              "scope": "global"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "planningDataKey",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "6e5c48b1-10c4-498e-8b29-a327bfea2b45",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "localizeBepSpreadsheetMeta",
          "library": "CirrusLibCirrusCoreBusinessEvolution",
          "params": {
            "currentMeta": {
              "name": "existingBEPmeta",
              "scope": "local"
            },
            "intervalCount": {
              "datatype": "numeric",
              "name": "intervalCount",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "target": "$self$"
            },
            "intervalType": {
              "datatype": "text",
              "name": "intervalType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "intervalType",
              "target": "$self$"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "localizedMeta",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "da2013e7-b378-4cb1-bf21-502154872e9d",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "8a32d01d-6db3-44f7-8fb6-1fdd76800013",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedHierarchyData",
              "scope": "global"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "hierarchyDataKey",
          "scope": "global"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetColumnMetaData",
        "id": "b8114b77-9a0d-4bd6-b73e-462f86333ec1",
        "isCommented": false,
        "params": {
          "spreadsheetColumnMetaData": {
            "datatype": "object",
            "name": "localizedMeta",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_SINGLE"
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "21d72659-a333-4efb-83f7-0c584b7f78fa",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "data_layout_SINGLE"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_data_container"
      },
      {
        "action": "ifelse",
        "id": "96580120-b471-4605-b6e6-a80208caa123",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "da2013e7-b378-4cb1-bf21-502154872e9d",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetColumnMetaData",
        "id": "3bdc9742-37cb-4d14-97ed-45138db4e384",
        "isCommented": false,
        "params": {
          "spreadsheetColumnMetaData": {
            "datatype": "object",
            "name": "localizedMeta",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_MULTI"
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "ade13842-6a8d-4e53-abf9-5656110c2d68",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "data_layout_MULTI"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_data_container"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "e72b86e3-7a93-4e73-9ae0-df69e06426b7",
        "includeElse": true,
        "isCommented": false,
        "main": "da2013e7-b378-4cb1-bf21-502154872e9d",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "f4636f34-7930-4168-bf0a-2eaed6381efb",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "a7449e6b-307e-4134-892a-a7d90a49d11c",
        "test": {
          "datatype": "boolean",
          "name": "metaExistsAndShouldNotBeUpdated",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c7e06e97-e1cf-4868-8506-a4552e96da93",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isAllInitDataProvided",
          "library": "$interactions$",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitDataComplete",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "cd54e28f-4098-4692-b5da-1c6c69e0cdbd",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "boolean",
              "name": "input_resetDataFlg",
              "scope": "local"
            },
            "arg2": {
              "datatype": "boolean",
              "scope": "fixed",
              "value": false
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "resetDataFlg",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "93549212-9d28-4c92-8741-5dca4f705ba4",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitDataComplete",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "699bc970-0e38-4e49-94a2-5b5dc7611b31",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedPlanningData",
              "scope": "global"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "planningDataKey",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "6f64c2c4-323a-46a9-9348-48265b7f3e78",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createEmptyObject",
          "library": "CirrusLibObject",
          "params": {},
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "emptyObject",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "9eb2461f-a873-4ede-840d-ad24291e1b4a",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "452df5ae-8555-4b88-a2b5-35497b928716",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "linkedHierarchyData",
              "scope": "global"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "hierarchyDataKey",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "48840fa1-7f28-4166-b790-86fcac4b4ce3",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "updateBepSpreadsheetMeta",
          "library": "CirrusLibCirrusCoreBusinessEvolution",
          "params": {
            "baselineSpreadsheetMeta": {
              "datatype": "object",
              "name": "baselineMetaJsonForSINGLEType",
              "scope": "global"
            },
            "hierarchyDataKey": {
              "datatype": "text",
              "name": "hierarchyDataKey",
              "scope": "global"
            },
            "intervalCount": {
              "datatype": "numeric",
              "name": "intervalCount",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "target": "$self$"
            },
            "intervalType": {
              "datatype": "text",
              "name": "intervalType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "intervalType",
              "target": "$self$"
            },
            "planningDataKey": {
              "datatype": "text",
              "name": "planningDataKey",
              "scope": "global"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "updatedMeta",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetColumnMetaData",
        "id": "e38fd4e5-4f7c-4ad5-aa57-293c94cf5ea7",
        "isCommented": false,
        "params": {
          "spreadsheetColumnMetaData": {
            "datatype": "object",
            "name": "updatedMeta",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_SINGLE"
      },
      {
        "action": "setvar",
        "id": "81590197-4c48-4e78-a926-7ff1259e3e99",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "text",
              "name": "bepData",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "bepData",
              "target": "$self$"
            },
            "arg2": {
              "name": "emptyObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "bepData",
          "objectType": "BusinessEvolutionPlan",
          "scope": "field",
          "set-field": "bepData",
          "target": "$self$"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "3b6abb58-dbe0-450f-8048-7891c11b93fa",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "meta"
          },
          "object": {
            "datatype": "text",
            "name": "bepData",
            "objectType": "BusinessEvolutionPlan",
            "scope": "field",
            "set-field": "bepData",
            "target": "$self$"
          },
          "value": {
            "datatype": "object",
            "name": "updatedMeta",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "id": "7d73c081-40bd-412a-942c-8c82e23bc9ce",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "input_resetDataFlg",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3158e860-e71b-4aaa-af0d-6ae42c5e2bd4",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToArray",
          "library": "CirrusLibArray",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "[{\"key\": \"   \", \"level\": 0, \"hierarchy\": [\"   \"], \"hasChildren\": true}]"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "newRow",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "0ee7af16-37ac-4f8b-95c3-067d9d7609a4",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "\u003cOutgoing\u003e array",
            "name": "newRow",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_SINGLE"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "e992f992-6d7e-4b5f-be57-14cfedbe086f",
        "isCommented": false,
        "main": "7d73c081-40bd-412a-942c-8c82e23bc9ce",
        "test": {
          "datatype": "boolean",
          "name": "input_resetDataFlg",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "5ece65ae-27fc-4062-b7b0-b6e9e3fa1d60",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "data_layout_SINGLE"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_data_container"
      },
      {
        "action": "ifelse",
        "id": "d423cdb7-a901-4046-a54b-3da282139ff0",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "9eb2461f-a873-4ede-840d-ad24291e1b4a",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "TODO: Implement the MULTI type",
        "id": "5bbb672a-4b46-4d47-9180-d7758f6e1bc5",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "d46612b2-0ea5-4ffc-bf1f-7646fe8e2046",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "updateBepSpreadsheetMeta",
          "library": "CirrusLibCirrusCoreBusinessEvolution",
          "params": {
            "baselineSpreadsheetMeta": {
              "datatype": "object",
              "name": "baselineMetaJsonForMULTIType",
              "scope": "global"
            },
            "hierarchyDataKey": {
              "datatype": "text",
              "name": "hierarchyDataKey",
              "scope": "global"
            },
            "intervalCount": {
              "datatype": "numeric",
              "name": "intervalCount",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "target": "$self$"
            },
            "intervalType": {
              "datatype": "text",
              "name": "intervalType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "intervalType",
              "target": "$self$"
            },
            "planningDataKey": {
              "datatype": "text",
              "scope": "local",
              "target": "planningDataKey",
              "value": ""
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "updatedMeta",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetColumnMetaData",
        "id": "ad78c2cb-190b-45af-ade3-089292b4a6e4",
        "isCommented": false,
        "params": {
          "spreadsheetColumnMetaData": {
            "datatype": "object",
            "name": "updatedMeta",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_MULTI"
      },
      {
        "action": "setvar",
        "id": "9147a950-66a9-4837-b5b6-427379b5aae5",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "text",
              "name": "bepData",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "bepData",
              "target": "$self$"
            },
            "arg2": {
              "name": "emptyObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "bepData",
          "objectType": "BusinessEvolutionPlan",
          "scope": "field",
          "set-field": "bepData",
          "target": "$self$"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "ceecce64-2675-421c-8c94-f5abd4afbda7",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "meta"
          },
          "object": {
            "datatype": "text",
            "name": "bepData",
            "objectType": "BusinessEvolutionPlan",
            "scope": "field",
            "set-field": "bepData",
            "target": "$self$"
          },
          "value": {
            "datatype": "object",
            "name": "updatedMeta",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "id": "5c057856-bc0b-45f1-84ed-794348d8e32b",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "input_resetDataFlg",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "314c43d1-7c66-4002-8247-a3c9dcd5cb55",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToArray",
          "library": "CirrusLibArray",
          "params": {
            "string": {
              "datatype": "text",
              "scope": "fixed",
              "value": "[{\"key\": \"   \", \"level\": 0, \"hierarchy\": [\"   \"], \"hasChildren\": true}]"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "newRow",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setSpreadsheetRowData",
        "id": "c48e1394-a598-49e4-bdbf-15b56a410bc3",
        "isCommented": false,
        "params": {
          "spreadsheetRowData": {
            "datatype": "\u003cOutgoing\u003e array",
            "name": "newRow",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_spreadsheet_MULTI"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "9abef6a1-ed51-4f8f-955c-5a98d49ff7e1",
        "isCommented": false,
        "main": "5c057856-bc0b-45f1-84ed-794348d8e32b",
        "test": {
          "datatype": "boolean",
          "name": "input_resetDataFlg",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "5f8d091d-1548-44ee-ba0f-8d7f69694b4b",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "data_layout_MULTI"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_data_container"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "9dc2975c-8d6d-4bf7-a9c4-6bb797437cda",
        "includeElse": true,
        "isCommented": false,
        "main": "9eb2461f-a873-4ede-840d-ad24291e1b4a",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "8e8fafab-c18c-4d1a-87b5-64c33c6286d6",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "93549212-9d28-4c92-8741-5dca4f705ba4",
        "test": {
          "datatype": "boolean",
          "name": "isInitDataComplete",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setActiveLayoutName",
        "id": "393e57d3-1037-4d97-aaeb-6a4a535f22b8",
        "isCommented": false,
        "params": {
          "activeTab": {
            "datatype": "text",
            "scope": "fixed",
            "value": "default"
          }
        },
        "scope": "currentPage",
        "widgetId": "bep_data_container"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "c46f2102-3ca4-424b-a4ee-a85b88131770",
        "includeElse": true,
        "isCommented": false,
        "main": "93549212-9d28-4c92-8741-5dca4f705ba4",
        "test": {
          "datatype": "boolean",
          "name": "isInitDataComplete",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "40587ca9-c962-4be7-80b7-8385a0e33b0c",
        "includeElse": true,
        "isCommented": false,
        "main": "a7449e6b-307e-4134-892a-a7d90a49d11c",
        "test": {
          "datatype": "boolean",
          "name": "metaExistsAndShouldNotBeUpdated",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setDefaultName": {
    "inputs": [
      {
        "datatype": "text",
        "name": "input_value"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "5f677a3d-8f13-4ecc-a4c7-b63e9a0e3ac8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "toBoolean",
          "library": "CirrusLibBoolean",
          "params": {
            "value": {
              "datatype": "text",
              "name": "name",
              "objectType": "AttributionTemplate",
              "scope": "field",
              "set-field": "name",
              "target": "$self$"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isNameSet",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "f03a1ee4-8ec2-48f0-b546-0752f274e9b8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "datatype": "boolean",
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "isNameSet",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isNameSet",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "383b924a-fb76-432a-886b-fb9481ef36b8",
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isNameSet",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "02a03a9c-404d-4bc8-9a8d-0ab168823a97",
        "type": "calculated",
        "value": {
          "function": "getLocalisedObjectType",
          "library": "$interactions$",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "objectType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "242e3c4c-38f0-488f-ab3a-0e878cb37598",
        "type": "calculated",
        "value": {
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "objectType",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": ": "
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "name_str",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7edb0eab-2f82-48bf-b722-283144b5cbd8",
        "type": "calculated",
        "value": {
          "function": "concat",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "name_str",
              "scope": "local"
            },
            "string2": {
              "datatype": "text",
              "name": "input_value",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "name_readonly",
          "scope": "data",
          "target": "$self$"
        }
      },
      {
        "action": "setvar",
        "id": "629b1271-8809-4605-8391-162fcc618f6f",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "text",
          "name": "input_value",
          "scope": "local"
        },
        "variable": {
          "datatype": "text",
          "name": "name",
          "objectType": "AttributionTemplate",
          "scope": "field",
          "set-field": "name",
          "target": "$self$"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "d0e180fe-5e68-4d85-bd5a-0d7e59b4578c",
        "isCommented": false,
        "main": "383b924a-fb76-432a-886b-fb9481ef36b8",
        "test": {
          "datatype": "boolean",
          "name": "isNameSet",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setGlobalVars": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "630eaef0-d02e-44d5-8abf-b16774839518",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "{\"table\":{\"options\":{\"selectionMode\":\"None\",\"isTree\":true,\"numberOfExpandedLevels\":5,\"fixedColumnCount\":1},\"columnOptions\":{\"areLabelsLocalized\":true,\"visible\":true,\"defaultVisible\":true,\"width\":\"150px\"},\"cellOptions\":{\"cellType\":\"string\",\"readonly\":false}},\"columns\":[{\"options\":{\"id\":\"segment\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.segment.title\"],\"quickSearch\":true,\"sortProperty\":\"segment\",\"readonly\":true}},{\"options\":{\"id\":\"segmentFilter\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.segmentFilter.title\"],\"quickSearch\":true,\"defaultVisible\":false,\"readonly\":true}},{\"options\":{\"id\":\"level\",\"defaultVisible\":false,\"visible\":false,\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.level.title\"],\"columnType\":\"number\",\"readonly\":true}},{\"options\":{\"id\":\"hasChildren\",\"defaultVisible\":false,\"visible\":false,\"readonly\":true,\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.hasChildren.title\"],\"columnType\":\"boolean\"}},{\"options\":{\"quickSearch\":true,\"id\":\"targetVar\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.targetVar.title\"]}},{\"options\":{\"quickSearch\":true,\"id\":\"scenario\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.scenario.title\"]}},{\"options\":{\"id\":\"operator\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.operator.title\"],\"columnType\":\"dropdown\"},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[{\"label\":\"Sum\",\"value\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.operator.options.SUM.title\"},{\"label\":\"Average\",\"value\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.operator.options.AVERAGE.title\"}]}},{\"options\":{\"id\":\"horizon0\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.horizon0.title\"],\"columnType\":\"number\"},\"cellOptions\":{\"cellType\":\"number\",\"numDecimals\":0}},{\"options\":{\"id\":\"auxData\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.auxData.title\"],\"columnType\":\"objectSelector\"},\"cellOptions\":{\"cellType\":\"objectSelector\",\"objectType\":\"AnalysisData\"}},{\"options\":{\"id\":\"segVar1\",\"label\":[\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.segmentation.title\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.segVar1.title\"],\"columnType\":\"dropdown\"},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[]}},{\"options\":{\"id\":\"segVar2\",\"label\":[\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.segmentation.title\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.segVar2.title\"],\"columnType\":\"dropdown\"},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[]}},{\"options\":{\"id\":\"segVar3\",\"label\":[\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.segmentation.title\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.segVar3.title\"],\"columnType\":\"dropdown\"},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[]}},{\"options\":{\"id\":\"growthInputType\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.growthInputType.title\"],\"columnType\":\"dropdown\"},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[{\"label\":\"Previous\",\"value\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.growthInputType.options.PREVIOUS.title\"},{\"label\":\"Manual\",\"value\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.growthInputType.options.MANUAL.title\"},{\"label\":\"Fixed\",\"value\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.growthInputType.options.FIXED.title\"}]}},{\"options\":{\"id\":\"growthInputParam\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.growthInputParam.title\"],\"columnType\":\"dropdown\"},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[{\"label\":\"Absolute\",\"value\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.growthInputParam.options.ABSOLUTE.title\"},{\"label\":\"Percentage\",\"value\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_MULTI.growthInputParam.options.PERCENTAGE.title\"}]}}]}"
        },
        "variable": {
          "datatype": "text",
          "name": "baselineMetaForMULTIType",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "ce6e7a9f-b3c8-4c41-8dd0-19ab8a10b105",
        "isCommented": false,
        "type": "fixed",
        "value": {
          "datatype": "text",
          "dataval": "{\"table\":{\"options\":{\"selectionMode\":\"None\",\"isTree\":true,\"numberOfExpandedLevels\":5,\"fixedColumnCount\":1},\"columnOptions\":{\"areLabelsLocalized\":true,\"visible\":true,\"defaultVisible\":true,\"width\":\"150px\"},\"cellOptions\":{\"cellType\":\"string\",\"readonly\":false}},\"columns\":[{\"options\":{\"id\":\"segment\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segment.title\"],\"quickSearch\":true,\"sortProperty\":\"segment\",\"readonly\":true}},{\"options\":{\"id\":\"segmentFilter\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segmentFilter.title\"],\"quickSearch\":true,\"defaultVisible\":false,\"readonly\":true}},{\"options\":{\"id\":\"level\",\"defaultVisible\":false,\"visible\":false,\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.level.title\"],\"columnType\":\"number\",\"readonly\":true}},{\"options\":{\"id\":\"hasChildren\",\"defaultVisible\":false,\"visible\":false,\"readonly\":true,\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.hasChildren.title\"],\"columnType\":\"boolean\"}},{\"options\":{\"id\":\"segVar1\",\"label\":[\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segmentation.title\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segVar1.title\"],\"columnType\":\"dropdown\"},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[]}},{\"options\":{\"id\":\"segVar2\",\"label\":[\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segmentation.title\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segVar2.title\"],\"columnType\":\"dropdown\"},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[]}},{\"options\":{\"id\":\"segVar3\",\"label\":[\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segmentation.title\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segVar3.title\"],\"columnType\":\"dropdown\"},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[]}},{\"options\":{\"id\":\"segVar4\",\"label\":[\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segmentation.title\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segVar4.title\"],\"columnType\":\"dropdown\",\"defaultVisible\":false},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[]}},{\"options\":{\"id\":\"segVar5\",\"label\":[\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segmentation.title\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.segVar5.title\"],\"columnType\":\"dropdown\",\"defaultVisible\":false},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[]}},{\"options\":{\"quickSearch\":true,\"id\":\"targetVar\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.targetVar.title\"]}},{\"options\":{\"id\":\"horizon0\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.horizon0.title\"],\"columnType\":\"number\",\"readonly\":true},\"cellOptions\":{\"cellType\":\"number\",\"numDecimals\":0}},{\"options\":{\"id\":\"targetType\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.targetType.title\"],\"columnType\":\"dropdown\"},\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[{\"label\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.targetType.options.RUNOFF.label\",\"value\":\"RUNOFF\"},{\"label\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.targetType.options.STATIC.label\",\"value\":\"STATIC\"},{\"label\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.targetType.options.GROWTH_LIQ_NO_ROLL.label\",\"value\":\"GROWTH_LIQ_NO_ROLL\"},{\"label\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.targetType.options.GROWTH_LIQ_W_ROLL.label\",\"value\":\"GROWTH_LIQ_W_ROLL\"}]}},{\"options\":{\"id\":\"targetDefinition\",\"label\":[\"\",\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.targetDefinition.title\"],\"columnType\":\"string\"},\"cellOptions\":{\"cellType\":\"string\"}}],\"metaRules\":{\"level\":[{\"value\":[1,2,3,4,5],\"toColumn\":\"segVar1\",\"cellOptions\":{\"cellType\":\"string\",\"readonly\":true}},{\"value\":[0,2,3,4,5],\"toColumn\":\"segVar2\",\"cellOptions\":{\"cellType\":\"string\",\"readonly\":true}},{\"value\":[0,1,3,4,5],\"toColumn\":\"segVar3\",\"cellOptions\":{\"cellType\":\"string\",\"readonly\":true}},{\"value\":[0,1,2,4,5],\"toColumn\":\"segVar4\",\"cellOptions\":{\"cellType\":\"string\",\"readonly\":true}},{\"value\":[0,1,2,3,5],\"toColumn\":\"segVar5\",\"cellOptions\":{\"cellType\":\"string\",\"readonly\":true}}],\"hasChildren\":[{\"value\":true,\"toColumn\":\"targetVar\",\"cellOptions\":{\"cellType\":\"string\",\"readonly\":true}},{\"value\":true,\"toColumn\":\"horizon0\",\"cellOptions\":{\"cellType\":\"string\",\"readonly\":true}},{\"value\":true,\"toColumn\":\"targetType\",\"cellOptions\":{\"cellType\":\"string\",\"readonly\":true}},{\"value\":true,\"toColumn\":\"targetDefinition\",\"cellOptions\":{\"cellType\":\"string\",\"readonly\":true}}],\"targetType\":[{\"value\":[\"GROWTH_LIQ_NO_ROLL\",\"GROWTH_LIQ_W_ROLL\"],\"toColumn\":\"targetDefinition\",\"cellOptions\":{\"cellType\":\"dropdown\",\"choices\":[{\"label\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.targetDefinition.options.ABSOLUTE.label\",\"value\":\"ABSOLUTE\"},{\"label\":\"BusinessEvolutionPlan.library.label.base.HierarchySpreadsheetWidget.bep_spreadsheet_SINGLE.targetDefinition.options.PERCENTAGE.label\",\"value\":\"PERCENTAGE\"}]}},{\"value\":[\"RUNOFF\",\"STATIC\"],\"toColumn\":\"targetDefinition\",\"cellOptions\":{\"cellType\":\"string\",\"readonly\":true}}]}}"
        },
        "variable": {
          "datatype": "text",
          "name": "baselineMetaForSINGLEType",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "d3c24562-a097-4f0f-91be-10163f8dcb3c",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToObject",
          "library": "CirrusLibObject",
          "params": {
            "string": {
              "datatype": "text",
              "name": "baselineMetaForMULTIType",
              "scope": "global"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "baselineMetaJsonForMULTIType",
          "scope": "global"
        }
      },
      {
        "action": "setvar",
        "id": "5b29ded1-cceb-4aa5-8f41-9fa3b214350a",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "convertStringToObject",
          "library": "CirrusLibObject",
          "params": {
            "string": {
              "datatype": "text",
              "name": "baselineMetaForSINGLEType",
              "scope": "global"
            }
          },
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "baselineMetaJsonForSINGLEType",
          "scope": "global"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setInitTypeOptions": {
    "inputs": [
      {
        "datatype": "boolean",
        "name": "input_setDefaultInitType"
      }
    ],
    "logic": [
      {
        "action": "addComment",
        "commentStep": "Set the possible options for configuration method (initType)",
        "id": "3e625b81-fa03-467f-a6a4-11bcd1458f7f",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "0ee3602a-f201-4855-9aff-bad4d5549e96",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getNamedListOptionsAsValueLabelPair",
          "library": "CirrusLibCirrusObjectNamedList",
          "params": {
            "listName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "bep_init_types"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "init_type_options",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c7c5cb8f-4337-4765-941d-1b00a186b95b",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getAppConfigProperty",
          "library": "CirrusLibConfigProperties",
          "params": {
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "BusinessEvolutionPlans.initType.allowedList"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "allowedInitTypes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "comment": "Make sure allowed init types list always has at least one value.",
        "id": "989d21c2-54df-42a9-991d-e63cd60972dc",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "\u003cOutgoing\u003e",
              "name": "allowedInitTypes",
              "scope": "local"
            },
            "arg2": {
              "datatype": "\u003cOutgoing\u003e",
              "scope": "fixed",
              "value": "SINGLE"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "allowedInitTypes",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "9c0e56ec-193c-4edf-9cc6-dd665500823f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "split",
          "library": "CirrusLibString",
          "params": {
            "separator": {
              "datatype": "text",
              "scope": "fixed",
              "value": ","
            },
            "string": {
              "name": "allowedInitTypes",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "allowedInitTypesArr",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4eb60ff7-37a8-46ea-94f4-3393d193cdf8",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filter",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "init_type_options",
              "scope": "local"
            },
            "callback": {
              "function": "filterInitTypeOptions",
              "library": "$interactions$",
              "params": {
                "input_allowedList": {
                  "datatype": "text array",
                  "name": "allowedInitTypesArr",
                  "scope": "local"
                },
                "input_option": {
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              },
              "returnType": "boolean"
            }
          },
          "returnType": "\u003cIncoming\u003e array"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array",
          "name": "filteredInitTypeOptions",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "filterValues",
        "id": "52150e5e-54f1-4f1d-85d7-e284058e7643",
        "isCommented": false,
        "params": {
          "filteredValues": {
            "datatype": "\u003cIncoming\u003e array",
            "name": "filteredInitTypeOptions",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "initType"
      },
      {
        "action": "addComment",
        "commentStep": "Set the default value for configuration method (initType) if needed",
        "id": "d4ebcc91-547e-4375-b62a-553d8bc696f3",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "50c9c200-a846-48f6-9303-0d0db9302141",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "boolean",
              "name": "input_setDefaultInitType",
              "scope": "local"
            },
            "arg2": {
              "datatype": "boolean",
              "scope": "fixed",
              "value": false
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "setDefaultInitType",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "ac99714f-1161-4cea-8f80-ad239525ecaf",
        "isCommented": false,
        "test": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "setDefaultInitType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "beb475b0-ad97-4cfa-94ef-bb83d2472745",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getAppConfigProperty",
          "library": "CirrusLibConfigProperties",
          "params": {
            "propertyName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "BusinessEvolutionPlans.initType.default"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "defaultInitType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "c21abc3a-f7a3-4766-ade0-5ec04babf565",
        "isCommented": false,
        "type": "variable",
        "value": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "defaultInitType",
          "scope": "local"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "initType",
          "objectType": "BusinessEvolutionPlan",
          "scope": "field",
          "set-field": "initType",
          "target": "$self$"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "273c3b16-76a1-4764-be4e-9d0e2e116e12",
        "isCommented": false,
        "main": "ac99714f-1161-4cea-8f80-ad239525ecaf",
        "test": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "setDefaultInitType",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setIntervalTypeOptions": {
    "inputs": [
      {
        "datatype": "text array",
        "name": "input_excludeList"
      }
    ],
    "logic": [
      {
        "action": "setvar",
        "id": "83628975-f9b5-4b21-ba96-1c1b7e83821f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewStringArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "text array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "emptyArray",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "2857d55d-e5f5-41a6-a062-9c0061fd2c00",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "text array",
              "name": "input_excludeList",
              "scope": "local"
            },
            "arg2": {
              "name": "emptyArray",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "excludeList",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "0ee3602a-f201-4855-9aff-bad4d5549e96",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getNamedListOptionsAsValueLabelPair",
          "library": "CirrusLibCirrusObjectNamedList",
          "params": {
            "listName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "bep_interval_types"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "intervalTypeOptions",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "b3612d4a-aecf-4fa7-be40-97445d6cd83d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "filter",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "intervalTypeOptions",
              "scope": "local"
            },
            "callback": {
              "function": "filterIntervalTypeOptions",
              "library": "$interactions$",
              "params": {
                "input_excludeList": {
                  "name": "excludeList",
                  "scope": "local"
                },
                "input_option": {
                  "label": "Current value",
                  "name": "loop_currentValue",
                  "scope": "local"
                }
              },
              "returnType": "boolean"
            }
          },
          "returnType": "\u003cIncoming\u003e array"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array",
          "name": "filteredIntervalTypes",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "filterValues",
        "id": "52150e5e-54f1-4f1d-85d7-e284058e7643",
        "isCommented": false,
        "params": {
          "filteredValues": {
            "datatype": "\u003cIncoming\u003e array",
            "name": "filteredIntervalTypes",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "intervalType"
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setPlanningCurrencyOptions": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "0ee3602a-f201-4855-9aff-bad4d5549e96",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getNamedListOptionsAsValueLabelPair",
          "library": "CirrusLibCirrusObjectNamedList",
          "params": {
            "listName": {
              "datatype": "text",
              "scope": "fixed",
              "value": "planning_currencies"
            }
          },
          "returnType": "\u003cOutgoing\u003e array"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e array",
          "name": "currency_options",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "filterValues",
        "id": "52150e5e-54f1-4f1d-85d7-e284058e7643",
        "isCommented": false,
        "params": {
          "filteredValues": {
            "datatype": "\u003cOutgoing\u003e array",
            "name": "currency_options",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "planningCurrency"
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "setRequiredFields": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "184ab13c-ff95-4d06-9654-4a1498a941a2",
        "type": "fixed",
        "value": {
          "datatype": "boolean",
          "dataval": true
        },
        "variable": {
          "datatype": "boolean",
          "name": "isRequiredAlways",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setRequired",
        "id": "f9efa855-4d67-4ea8-a93e-0e051a1419ab",
        "params": {
          "required": {
            "datatype": "boolean",
            "name": "isRequiredAlways",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "objectId"
      },
      {
        "action": "setprop",
        "function": "setRequired",
        "id": "0ad8e187-cc33-4b64-9f08-c82ce196ed43",
        "params": {
          "required": {
            "datatype": "boolean",
            "name": "isRequiredAlways",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "name"
      }
    ],
    "sasProvided": true
  },
  "setScreenReadOnly": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "c6a27f38-71e1-4d66-b640-46530515dffa",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getCurrentObjectType",
          "library": "CirrusLibPageData",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "objectType",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "11263ddd-47d2-49f9-9a63-7dd5f1f4f417",
        "type": "calculated",
        "value": {
          "function": "getObjectCapabilities",
          "library": "CirrusLibCirrusObject",
          "params": {
            "objectType": {
              "datatype": "text",
              "name": "objectType",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "userCapabilities",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "5854d84b-5f88-4302-a900-5e29e7e1063a",
        "type": "calculated",
        "value": {
          "function": "contains",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "userCapabilities",
              "scope": "local"
            },
            "value": {
              "datatype": "text",
              "scope": "fixed",
              "value": "create"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "userCanCreate",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4816c002-7398-4b17-9496-8ab3bb6beae9",
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "userCanCreate",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "userCannotCreate",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "3dbc1680-56d1-4639-a068-19cc6f2044a9",
        "type": "calculated",
        "value": {
          "function": "contains",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "userCapabilities",
              "scope": "local"
            },
            "value": {
              "datatype": "text",
              "scope": "fixed",
              "value": "update"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "userCanUpdate",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "99553ef6-c732-4c69-9075-1ebd49c367be",
        "type": "calculated",
        "value": {
          "function": "not",
          "library": "CirrusLibBoolean",
          "params": {
            "bool": {
              "datatype": "boolean",
              "name": "userCanUpdate",
              "scope": "local"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "userCannotUpdate",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "5db66a8b-46af-49b9-821d-02c9c8add0e3",
        "type": "calculated",
        "value": {
          "function": "isDraftObject",
          "library": "CirrusLibCirrusObject",
          "params": {},
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "011f385e-b25d-4fa1-92cc-2128a1eb4fad",
        "test": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "1de46fb9-8a1d-44ec-9263-dcf25be79fc4",
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "name": "userCannotCreate",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "main_tabs"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "3a1935b1-e0ea-4da4-943c-a211d34987aa",
        "main": "011f385e-b25d-4fa1-92cc-2128a1eb4fad",
        "test": {
          "datatype": "boolean",
          "name": "isDraft",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "b0d70ffc-31aa-4535-b11b-57014c1c82f4",
        "test": {
          "datatype": "boolean",
          "name": "userCannotUpdate",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setReadOnly",
        "id": "72c8660b-ce16-433e-aa73-67f20805f088",
        "params": {
          "readOnly": {
            "datatype": "boolean",
            "name": "userCannotUpdate",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "main_tabs"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "62c8e811-ab96-42d1-9f6e-cba7f76fbd9c",
        "main": "b0d70ffc-31aa-4535-b11b-57014c1c82f4",
        "test": {
          "datatype": "boolean",
          "name": "userCannotUpdate",
          "scope": "local"
        }
      }
    ],
    "sasProvided": true
  },
  "setSegVarOptions": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "006cd432-b4f3-495c-a376-a0e3115194f4",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "initType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "initType",
              "target": "$self$"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "MULTI"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitMethodMULTI",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4bb54168-7b6f-4f1e-9cf7-2e98968c4a7a",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "initType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "initType",
              "target": "$self$"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "SINGLE"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitMethodSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "ac159fff-7a99-4567-a691-c5e2d7d30501",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "isNullOrUndefined",
          "library": "CirrusLibGeneral",
          "params": {
            "value": {
              "name": "selectedAuxDataInstance",
              "scope": "global"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isSelectedAuxDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "13ec114a-a0ef-4b11-8472-0306bf98b4a3",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createNewObjectArray",
          "library": "CirrusLibArray",
          "params": {},
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "emptyArray",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "Handle MULTI initialization method",
        "id": "6f02f631-628c-4044-b65d-8fcfe85877f7",
        "isCommented": false
      },
      {
        "action": "ifelse",
        "id": "02327def-d9f2-441b-8edb-b213e0b1fb33",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitMethodMULTI",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setDualSelectorData",
        "id": "d2066889-8c9e-4fd7-892c-0015fc35521f",
        "isCommented": false,
        "params": {
          "dualSelectorData": {
            "datatype": "object array",
            "name": "emptyArray",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "segVars"
      },
      {
        "action": "ifelse",
        "id": "f25f8738-7aa4-499d-b600-99bb8b4c4433",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "02327def-d9f2-441b-8edb-b213e0b1fb33",
        "test": {
          "datatype": "boolean",
          "name": "isInitMethodMULTI",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "Handle Portfolio initialization method",
        "id": "5beb7b29-c9d4-4efe-9c4a-42e6186a9705",
        "isCommented": false
      },
      {
        "action": "ifelse",
        "id": "fd6090c1-dd79-45f2-a471-cdc82503d2c6",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitMethodSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "e20fa0d9-dddb-40f4-a412-e87322035277",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isSelectedAuxDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setDualSelectorData",
        "id": "0c70fd60-a12c-4d7b-bd1b-d3ca9787cee0",
        "isCommented": false,
        "params": {
          "dualSelectorData": {
            "datatype": "object array",
            "name": "emptyArray",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "segVars"
      },
      {
        "action": "ifelse",
        "id": "4c144a7d-9a05-4ac3-be96-395a9bb78e36",
        "includeElse": true,
        "iselse": true,
        "main": "e20fa0d9-dddb-40f4-a412-e87322035277",
        "test": {
          "datatype": "boolean",
          "name": "isSelectedAuxDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "1f237836-627e-4666-84dd-f5369058606f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "name": "selectedAuxDataInstance",
              "scope": "global"
            },
            "index": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 0
            }
          },
          "returnType": "\u003cIncoming\u003e"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e",
          "name": "firstSelectedAuxDataKey",
          "scope": "local"
        }
      },
      {
        "action": "addComment",
        "commentStep": "TODO: The next function call should filter on \"segmentationVar\" or whatever attribute we choose to use for this...",
        "id": "151d06c1-65d8-4000-97d6-5480284a5bf6",
        "isCommented": false
      },
      {
        "action": "setvar",
        "id": "21e3a919-b624-42c0-9b9a-6db9b817b66d",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "getVarsFromAnalysisData",
          "library": "CirrusLibRiskData",
          "params": {
            "aDataKey": {
              "name": "firstSelectedAuxDataKey",
              "scope": "local"
            },
            "returnValueLabelPairs": {
              "datatype": "boolean",
              "scope": "fixed",
              "value": true
            },
            "typeFilter": {
              "datatype": "text",
              "scope": "fixed",
              "value": "VARCHAR"
            }
          },
          "returnType": "object array"
        },
        "variable": {
          "datatype": "object array",
          "name": "segVarsFromAuxData",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setDualSelectorData",
        "id": "3f82acf6-8fe8-47aa-9017-d7b00a8b0ccc",
        "isCommented": false,
        "params": {
          "dualSelectorData": {
            "datatype": "object array",
            "name": "segVarsFromAuxData",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "segVars"
      },
      {
        "action": "setvar",
        "id": "f00f47d1-2d44-45d6-8720-6fd77e151aea",
        "isCommented": true,
        "type": "calculated",
        "value": {
          "function": "getData",
          "library": "CirrusLibRiskData",
          "params": {
            "analysisDataKey": {
              "name": "firstSelectedAuxDataKey",
              "scope": "local"
            },
            "fields": {
              "datatype": "text",
              "scope": "fixed",
              "value": "variable"
            },
            "format": {
              "datatype": "text",
              "scope": "fixed",
              "value": "csv"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "auxDataContent",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "15793163-cc8c-49cf-89a3-66e15ba3c8a2",
        "isCommented": true,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "trim",
          "library": "CirrusLibString",
          "params": {
            "string": {
              "datatype": "text",
              "name": "auxDataContent",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "auxDataContent",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "d29a45b9-6407-4b91-a084-00dcafe9cc5e",
        "isCommented": true,
        "type": "calculated",
        "value": {
          "function": "returnNewLineChar",
          "library": "CirrusLibGeneral",
          "params": {},
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "newLineSeparator",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "4d01783e-0a6c-44f8-88f8-6a7838b6e030",
        "isCommented": true,
        "type": "calculated",
        "value": {
          "function": "indexOf",
          "library": "CirrusLibString",
          "params": {
            "mainString": {
              "datatype": "text",
              "name": "auxDataContent",
              "scope": "local"
            },
            "searchString": {
              "datatype": "text",
              "name": "newLineSeparator",
              "scope": "local"
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "indexOfFirstNewLine",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "63a0e07c-857b-4533-b13a-07e14fdd1931",
        "isCommented": true,
        "type": "calculated",
        "value": {
          "function": "add",
          "library": "CirrusLibMath",
          "params": {
            "from": {
              "datatype": "numeric",
              "name": "indexOfFirstNewLine",
              "scope": "local"
            },
            "number": {
              "datatype": "numeric",
              "scope": "fixed",
              "value": 1
            }
          },
          "returnType": "numeric"
        },
        "variable": {
          "datatype": "numeric",
          "name": "indexOfFirstNewLinePlusOne",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "84855fe8-7336-4e1b-9147-fa37659b1e4f",
        "isCommented": true,
        "type": "calculated",
        "value": {
          "datatype": "text",
          "function": "subString",
          "library": "CirrusLibString",
          "params": {
            "start": {
              "datatype": "numeric",
              "name": "indexOfFirstNewLinePlusOne",
              "scope": "local"
            },
            "string": {
              "datatype": "text",
              "name": "auxDataContent",
              "scope": "local"
            }
          },
          "returnType": "text"
        },
        "variable": {
          "datatype": "text",
          "name": "auxDataContent",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "83ff1667-d227-4dbd-a4d4-cfab344cf06d",
        "isCommented": true,
        "type": "calculated",
        "value": {
          "function": "split",
          "library": "CirrusLibString",
          "params": {
            "separator": {
              "datatype": "text",
              "name": "newLineSeparator",
              "scope": "local"
            },
            "string": {
              "datatype": "text",
              "name": "auxDataContent",
              "scope": "local"
            }
          },
          "returnType": "text array"
        },
        "variable": {
          "datatype": "text array",
          "name": "auxDataVars",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "6448cc94-4773-4abd-a247-5f2c5fa44af7",
        "isCommented": true,
        "type": "calculated",
        "value": {
          "function": "convertStringArrayToValueLabelArray",
          "library": "CirrusLibArray",
          "params": {
            "array": {
              "datatype": "text array",
              "name": "auxDataVars",
              "scope": "local"
            }
          },
          "returnType": "\u003cIncoming\u003e array"
        },
        "variable": {
          "datatype": "\u003cIncoming\u003e array",
          "name": "variableValueLabelPairs",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setDualSelectorData",
        "id": "49636109-5147-4755-ad6d-4967000c75a0",
        "isCommented": true,
        "params": {
          "dualSelectorData": {
            "datatype": "\u003cIncoming\u003e array",
            "name": "variableValueLabelPairs",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "targetVars"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "5948b827-3540-4628-a40d-4a273efbd91c",
        "includeElse": true,
        "isCommented": false,
        "main": "e20fa0d9-dddb-40f4-a412-e87322035277",
        "test": {
          "datatype": "boolean",
          "name": "isSelectedAuxDataEmpty",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "id": "27cf351c-96e4-454e-93bd-349aef46ebd0",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "fd6090c1-dd79-45f2-a471-cdc82503d2c6",
        "test": {
          "datatype": "boolean",
          "name": "isInitMethodSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setprop",
        "function": "setDualSelectorData",
        "id": "21cac269-1b2a-42d1-810e-ba84995d6762",
        "isCommented": false,
        "params": {
          "dualSelectorData": {
            "datatype": "object array",
            "name": "emptyArray",
            "scope": "local"
          }
        },
        "scope": "currentPage",
        "widgetId": "segVars"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "3914291b-db2f-455e-9eaa-2b12d040f03f",
        "includeElse": true,
        "isCommented": false,
        "main": "fd6090c1-dd79-45f2-a471-cdc82503d2c6",
        "test": {
          "datatype": "boolean",
          "name": "isInitMethodSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "fd9b69a5-8b84-4824-8708-3d87e45587ad",
        "includeElse": true,
        "isCommented": false,
        "main": "02327def-d9f2-441b-8edb-b213e0b1fb33",
        "test": {
          "datatype": "boolean",
          "name": "isInitMethodMULTI",
          "scope": "local"
        }
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  },
  "storeBEPData": {
    "inputs": [],
    "logic": [
      {
        "action": "setvar",
        "id": "0bae849e-ae2c-4529-8a91-843cae08e31f",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "createEmptyObject",
          "library": "CirrusLibObject",
          "params": {},
          "returnType": "object"
        },
        "variable": {
          "datatype": "object",
          "name": "emptyObject",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "37f816f4-a295-4c11-885a-f38cf0375eec",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "strEquals",
          "library": "CirrusLibString",
          "params": {
            "string1": {
              "datatype": "text",
              "name": "initType",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "initType",
              "target": "$self$"
            },
            "string2": {
              "datatype": "text",
              "scope": "fixed",
              "value": "SINGLE"
            }
          },
          "returnType": "boolean"
        },
        "variable": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "19041d67-7c28-4435-94d0-e8e5afb34213",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "coalesce",
          "library": "CirrusLibGeneral",
          "params": {
            "arg1": {
              "datatype": "text",
              "name": "bepData",
              "objectType": "BusinessEvolutionPlan",
              "scope": "field",
              "set-field": "bepData",
              "target": "$self$"
            },
            "arg2": {
              "name": "emptyObject",
              "scope": "local"
            }
          },
          "returnType": "\u003cOutgoing\u003e"
        },
        "variable": {
          "datatype": "\u003cOutgoing\u003e",
          "name": "bepData",
          "objectType": "BusinessEvolutionPlan",
          "scope": "field",
          "set-field": "bepData",
          "target": "$self$"
        }
      },
      {
        "action": "ifelse",
        "id": "da2013e7-b378-4cb1-bf21-502154872e9d",
        "includeElse": true,
        "isCommented": false,
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "886a66bc-4396-4623-bfce-f43eb93cb267",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "rowState"
            },
            "object": {
              "datatype": "object",
              "name": "bep_spreadsheet_SINGLE",
              "scope": "data",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "bepRowState",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "7e1da901-9a14-4451-ae50-7bceeab6d4c5",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "data"
          },
          "object": {
            "datatype": "text",
            "name": "bepData",
            "objectType": "BusinessEvolutionPlan",
            "scope": "field",
            "set-field": "bepData",
            "target": "$self$"
          },
          "value": {
            "name": "bepRowState",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "id": "96580120-b471-4605-b6e6-a80208caa123",
        "includeElse": true,
        "isCommented": false,
        "iselse": true,
        "main": "da2013e7-b378-4cb1-bf21-502154872e9d",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "setvar",
        "id": "7d2f97e7-3461-4800-bfcd-0f385273abe0",
        "isCommented": false,
        "type": "calculated",
        "value": {
          "function": "get",
          "library": "CirrusLibObject",
          "params": {
            "name": {
              "datatype": "text",
              "scope": "fixed",
              "value": "rowState"
            },
            "object": {
              "datatype": "object",
              "name": "bep_spreadsheet_MULTI",
              "scope": "data",
              "target": "$self$"
            }
          },
          "returnType": "\u003cany\u003e"
        },
        "variable": {
          "datatype": "\u003cany\u003e",
          "name": "bepRowState",
          "scope": "local"
        }
      },
      {
        "action": "execfunc",
        "function": "set",
        "id": "7c3d2edb-9b33-4913-b5e9-50da5b02cb00",
        "isCommented": false,
        "library": "CirrusLibObject",
        "params": {
          "name": {
            "datatype": "text",
            "scope": "fixed",
            "value": "data"
          },
          "object": {
            "datatype": "text",
            "name": "bepData",
            "objectType": "BusinessEvolutionPlan",
            "scope": "field",
            "set-field": "bepData",
            "target": "$self$"
          },
          "value": {
            "name": "bepRowState",
            "scope": "local"
          }
        },
        "returnType": "text"
      },
      {
        "action": "ifelse",
        "end": true,
        "id": "e72b86e3-7a93-4e73-9ae0-df69e06426b7",
        "includeElse": true,
        "isCommented": false,
        "main": "da2013e7-b378-4cb1-bf21-502154872e9d",
        "test": {
          "datatype": "boolean",
          "name": "isInitTypeSINGLE",
          "scope": "local"
        }
      },
      {
        "action": "dispatch",
        "id": "97b01f1d-d2ef-4c1b-89b0-e223773ea110",
        "isCommented": false
      }
    ],
    "resolveEachStep": false,
    "sasProvided": true
  }
}
